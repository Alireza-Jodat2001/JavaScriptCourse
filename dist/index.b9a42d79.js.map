{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-d7c7b1f6acfc798d.js","JavaScriptCourse.js","node_modules/core-js/modules/web.immediate.js","node_modules/core-js/modules/web.clear-immediate.js","node_modules/core-js/internals/export.js","node_modules/core-js/internals/global.js","node_modules/core-js/internals/object-get-own-property-descriptor.js","node_modules/core-js/internals/descriptors.js","node_modules/core-js/internals/fails.js","node_modules/core-js/internals/function-call.js","node_modules/core-js/internals/function-bind-native.js","node_modules/core-js/internals/object-property-is-enumerable.js","node_modules/core-js/internals/create-property-descriptor.js","node_modules/core-js/internals/to-indexed-object.js","node_modules/core-js/internals/indexed-object.js","node_modules/core-js/internals/function-uncurry-this.js","node_modules/core-js/internals/classof-raw.js","node_modules/core-js/internals/require-object-coercible.js","node_modules/core-js/internals/is-null-or-undefined.js","node_modules/core-js/internals/to-property-key.js","node_modules/core-js/internals/to-primitive.js","node_modules/core-js/internals/is-object.js","node_modules/core-js/internals/is-callable.js","node_modules/core-js/internals/is-symbol.js","node_modules/core-js/internals/get-built-in.js","node_modules/core-js/internals/object-is-prototype-of.js","node_modules/core-js/internals/use-symbol-as-uid.js","node_modules/core-js/internals/symbol-constructor-detection.js","node_modules/core-js/internals/engine-v8-version.js","node_modules/core-js/internals/engine-user-agent.js","node_modules/core-js/internals/get-method.js","node_modules/core-js/internals/a-callable.js","node_modules/core-js/internals/try-to-string.js","node_modules/core-js/internals/ordinary-to-primitive.js","node_modules/core-js/internals/well-known-symbol.js","node_modules/core-js/internals/shared.js","node_modules/core-js/internals/shared-store.js","node_modules/core-js/internals/is-pure.js","node_modules/core-js/internals/define-global-property.js","node_modules/core-js/internals/has-own-property.js","node_modules/core-js/internals/to-object.js","node_modules/core-js/internals/uid.js","node_modules/core-js/internals/ie8-dom-define.js","node_modules/core-js/internals/document-create-element.js","node_modules/core-js/internals/create-non-enumerable-property.js","node_modules/core-js/internals/object-define-property.js","node_modules/core-js/internals/v8-prototype-define-bug.js","node_modules/core-js/internals/an-object.js","node_modules/core-js/internals/define-built-in.js","node_modules/core-js/internals/make-built-in.js","node_modules/core-js/internals/function-name.js","node_modules/core-js/internals/inspect-source.js","node_modules/core-js/internals/internal-state.js","node_modules/core-js/internals/weak-map-basic-detection.js","node_modules/core-js/internals/shared-key.js","node_modules/core-js/internals/hidden-keys.js","node_modules/core-js/internals/copy-constructor-properties.js","node_modules/core-js/internals/own-keys.js","node_modules/core-js/internals/object-get-own-property-names.js","node_modules/core-js/internals/object-keys-internal.js","node_modules/core-js/internals/array-includes.js","node_modules/core-js/internals/to-absolute-index.js","node_modules/core-js/internals/to-integer-or-infinity.js","node_modules/core-js/internals/math-trunc.js","node_modules/core-js/internals/length-of-array-like.js","node_modules/core-js/internals/to-length.js","node_modules/core-js/internals/enum-bug-keys.js","node_modules/core-js/internals/object-get-own-property-symbols.js","node_modules/core-js/internals/is-forced.js","node_modules/core-js/internals/task.js","node_modules/core-js/internals/function-apply.js","node_modules/core-js/internals/function-bind-context.js","node_modules/core-js/internals/function-uncurry-this-clause.js","node_modules/core-js/internals/html.js","node_modules/core-js/internals/array-slice.js","node_modules/core-js/internals/validate-arguments-length.js","node_modules/core-js/internals/engine-is-ios.js","node_modules/core-js/internals/engine-is-node.js","node_modules/core-js/modules/web.set-immediate.js","node_modules/core-js/internals/schedulers-fix.js","node_modules/core-js/internals/engine-is-bun.js","node_modules/regenerator-runtime/runtime.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"4f198839b9a42d79\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","29;\r\n// switch (key) {\r\n//     case \"ali\":\r\n//     case \"reza\":\r\n//         console.log(\"first\");\r\n//         console.log(\"second\");\r\n//         break;\r\n//     default:\r\n//         break;\r\n// }\r\n31;\r\n// const ali = 12 > 3 ? console.log(\"first\") : console.log(\"second\");\r\n// 12 > 3 ? console.log(\"first\") : console.log(\"second\");\r\n34;\r\n// \"jonas.io for support javaScript in browser\"\r\n36;\r\n// \"use strict\"; /* on first line in javaScript pages */\r\n38;\r\n// function expression\r\n// const func = function (ali) {\r\n//     return ali;\r\n// }\r\n// func(\"reza\");\r\n39;\r\n// arrow function\r\n// const func1 = ali => console.log(\"first\");\r\n// const func2 = (ali , reza) => {\r\n//     return ali;\r\n// }\r\n// func(\"reza\");\r\n44;\r\n// const Arr = new Array('reza', 22, true)\r\n// console.log(Arr[Arr.length - 1]);\r\n// Arr[0] = 'mohsen'\r\n\r\n// const arr2 = [2 - 1, Arr, 'var']\r\n\r\n// const calc = birth => 2023 - birth\r\n// const arr3 = [calc(1991), calc(2000), calc(Arr[Arr.length - 2])]\r\n45;\r\n// array push method\r\n// Arr.push('alireza') /* add to last array */\r\n\r\n// const len = Arr.push('ali') /* return arr.length */\r\n\r\n// array unshift method\r\n// Arr.unshift(\"mehran\") /* add to first array */\r\n\r\n// array remove last element method\r\n// Arr.pop() /* remove to last element in array */\r\n\r\n// const popped = Arr.pop() /* return last element */\r\n// Arr.unshift(popped)\r\n\r\n// array remove first element method\r\n// Arr.shift() /* remove to first element in array */\r\n// const firstEl = Arr.shift() /* return first element */\r\n\r\n// indexOf array method\r\n// const mehArr = [0, 1, 'ali']\r\n// console.log(mehArr.indexOf('ali')); /* if not found element -1 returned */\r\n\r\n// includes array method\r\n// console.log(Arr.includes(\"john\")); /* return true or false */\r\n48;\r\n// const aliObj = {\r\n//     friends: ['bezi', 'mehran'],\r\n// }\r\n49;\r\n// const obj = {\r\n//     firstName: \"alireza\",\r\n//     lastName: \"jodat\",\r\n//     fre: [\"bezi\", \"ali\"]\r\n// }\r\n// console.log(obj.firstName);\r\n\r\n// second whay...\r\n// const concatName = \"Name\"\r\n// console.log(obj[`first${concatName}`]); /* better than for oprating */\r\n// console.log(obj[`last${concatName}`]); /* better than for oprating */\r\n\r\n// const prompt1 = prompt('what do you think?')\r\n// console.log(obj[prompt1]);\r\n\r\n// how to add\r\n// obj.friend = \"ali\"\r\n// obj[\"friend\"] = \"ali\"\r\n\r\n// how to accsses to array in\r\n// console.log(`${obj.fre[0]} - ${obj.fre.length}`);\r\n50;\r\n// const newObj = {\r\n//     firstName: \"ali\",\r\n//     func1: function (params) {\r\n//         // for create new item in object\r\n//         this.age = 19;\r\n\r\n//         console.log(this.firstName);\r\n//     },\r\n//     func2: () => console.log(\"first\")\r\n// }\r\n// console.log(newObj.func1(19));\r\n// /* second way */\r\n// console.log(newObj[\"func1\"](19));\r\n54;\r\n// const arr = []\r\n// for (let i = 0; i < 5; i++) {\r\n//     arr[i] = i;\r\n\r\n//     // second way\r\n//     arr.push(10 - i)\r\n// }\r\n\r\n// const arr4 = ['ali', 2, true, 'mehran']\r\n// for (let i = 0; i < arr4.length; i++) {\r\n//     if (typeof arr4[i] !== \"string\") continue; /* jump to next step by continue */\r\n//     console.log(arr4[i]);\r\n// }\r\n// for (let i = 0; i < arr4.length; i++) {\r\n//     if (typeof arr4[i] !== \"number\") break; /* console.log is empty (end for loop) */\r\n//     console.log(arr4[i]);\r\n// }\r\n56;\r\n// let random = Math.trunc(Math.random() * 7) + 1\r\n// while (random !== 6) {\r\n//     console.log(\"first\")\r\n//     random = Math.trunc(Math.random() * 7) + 1\r\n// }\r\n63;\r\n// how to use prettier customize\r\n// how to use user snippets\r\n// intro yourself extentions\r\n64;\r\n// how to install live server by node js\r\n// npm install live-server -g\r\n65;\r\n// codewars.com for many challanges javaScript\r\n67;\r\n// how to find min and max in array on stackoverflow website\r\n// continue keywords in to find min and max (arr[i] !== \"string\" && continue)\r\n// concat method for merge 2 array (there is solution on stackoverflow website)\r\n\r\n// concat method for merge 2 array\r\n// const arrNew = arr3.concat(arr2)\r\n// console.log(arrNew);\r\n69;\r\n// intro new console\r\n// console.error(calc())\r\n// console.warn(calc())\r\n\r\n// how to make breakpoint in console in chrome (sources tab) for debugging\r\n70;\r\n// let str = \"... \"\r\n// const array = [1, 2, 3]\r\n// for (let i = 0; i < array.length; i++) {\r\n//     str += `${array[i]} in ${i} day`\r\n// }\r\n78;\r\n// console.log(document.querySelector(\".div\").textContent)\r\n// document.querySelector(\".div\").textContent = \"ali\"\r\n81;\r\n// document.querySelector(\".div\").addEventListener(\"click\", function () {\r\n//     console.log(\"first\");\r\n// })\r\n86;\r\n// const innerHtml = message => document.querySelector(\"message\").textContent = message\r\n// innerHtml(\"you lost...\")\r\n88;\r\n// const btns = document.querySelectorAll(\"btns\")\r\n// for (let i = 0; i < btns.length; i++) btns[i].addEventListener(\"click\", () => {\r\n//     document.querySelector(\"modal\").classList.remove(\"hidden\")\r\n// })\r\n\r\n// const closeModal= () => document.querySelector(\"modal\").classList.add(\"hidden\")\r\n// btnClose.addEventListener(\"click\", closeModal)\r\n89;\r\n// document.addEventListener(\"keydown\", (event) => {\r\n//     event.key === \"Escape\" && !modal.classList.contains(\"hidden\")\r\n//         ? closeModal()\r\n//         : console.log(\"first\")\r\n// })\r\n91;\r\n// bntRoll.addEventListener(\"click\", () => {\r\n//     const dice = Math.trunc(Math.random() * 6) + 1\r\n//     diceImg.src = `dice-${dice}.png`\r\n// })\r\n92;\r\n// let activePlayer = 0\r\n// document.querySelector(`curren--${activePlayer}`).textContent = 0\r\n// activePlayer = activePlayer === 0 ? 1 : 0\r\n\r\n// second way\r\n// activePlayer = !activePlayer ? 1 : 0\r\n\r\n// player0El.classList.toggle(\"player-active\")\r\n// player1El.classList.toggle(\"player-active\")\r\n94;\r\n// let t1, t2, t3;\r\n99;\r\n// arrow function have not (arguments object and this keyword)\r\n101;\r\n// const calcAge = () => {\r\n//     console.log(`${firstName}`)\r\n// }\r\n// const firstName = \"ali\"\r\n// calcAge()\r\n\r\n// let and const (block)\r\n// var (global)\r\n103;\r\n// hoisting\r\n\r\n// for variable\r\n\r\n// console.log(ali) /* undifind */\r\n// var ali = \"reza\"\r\n\r\n// console.log(reza) /* error */\r\n// const reza = \"alli\"\r\n\r\n// console.log(m) /* error */\r\n// let m = \"g\"\r\n\r\n// for functions\r\n\r\n// a() /* OK! */\r\n// function a() {\r\n//     console.log(\"a\")\r\n// }\r\n\r\n// a() /* error */\r\n// const a = () => console.log(\"a\")\r\n\r\n// a() /* error */\r\n// const a = function() {\r\n//     console.log(\"a\")\r\n// }\r\n\r\n// a(1, 2) /* undifind(1, 2) => error: is not a function */\r\n// var a = (a, b) => console.log(a, b)\r\n\r\n// you dont use of (var)\r\n105;\r\n// console.log(this) /* => window object */\r\n\r\n// const a = function() {\r\n//    console.log(this) /* => undifind */\r\n// }\r\n\r\n// const a = () => console.log(this) /* => window */\r\n\r\n// const a = {\r\n//     func: function() {\r\n//         console.log(this) /* return => a object */\r\n//     }\r\n// }\r\n// a.func()\r\n\r\n// const a = {\r\n//     func: function() {\r\n//         console.log(this)\r\n//     }\r\n// }\r\n// const b = {\r\n//     firstName: \"ali\"\r\n// }\r\n// b.func2 = a.func\r\n// b.func2() /* this => b object */\r\n\r\n// const a = {\r\n//     func: () => console.log(this) /* return => window object */\r\n// }\r\n\r\n// const a = {\r\n//     /* a not code block */\r\n// }\r\n\r\n106;\r\n// const a = {\r\n//     first: \"ali\",\r\n//     func: function() {\r\n//         const func2 = function() {\r\n//             console.log(this) /* this => undifind */\r\n//             console.log(this.first) /* this.year => undifind */\r\n//         }\r\n//         func2()\r\n//     }\r\n// }\r\n// a.func()\r\n\r\n// solution top problem 👆\r\n\r\n// const a = {\r\n//     first: \"ali\",\r\n//     func: function() {\r\n//         const self = this\r\n//         const func2 = function() {\r\n//             console.log(self.first) /* self.first => \"ali\" */\r\n//         }\r\n//         func2()\r\n//     }\r\n// }\r\n// a.func()\r\n\r\n// arguments keyword\r\n\r\n// const a = (a, b) => {\r\n//     console.log(arguments)\r\n// }\r\n// a()\r\n107;\r\n// const me = {\r\n//     age: 12\r\n// }\r\n// const friend = me\r\n// friend.age = 30\r\n// console.log(me.age) /* age => 30 */\r\n// console.log(friend.age) /* age => 30 */\r\n108;\r\n// const me = {\r\n//     firstName: \"ali\"\r\n// }\r\n// const friend = me\r\n// friend.firstName = \"reza\" /* OK! */\r\n// friend = {} /* error because friend is a (constant) */\r\n\r\n// coppying object but is not deep\r\n// const a = {\r\n//     age: 12,\r\n//     arr: [1, 3]\r\n// }\r\n// const b = Object.assign({}, a)\r\n// b.age = 30\r\n// console.log(a.age) /* 12 */\r\n// console.log(b.age) /* 30 */\r\n// b.arr.push(\"ali\")\r\n// console.log(a.arr) /* [1, 3, \"ali\"] not deep! */\r\n// console.log(b.arr) /* [1, 3, \"ali\"] not deep! */\r\n111;\r\n// const arr = [1, 2, 3]\r\n// const [a, b, c] = arr\r\n// console.log(a, b, c)\r\n\r\n// const a = {\r\n//     categories: [\"car\", \"game\", \"food\"]\r\n// }\r\n// const [first, second] = a.categories\r\n// console.log(first, second) /* \"car\" \"game\" */\r\n// const [x, ,y] = a.categories\r\n// console.log(x, y) /* \"car\" \"food\" */\r\n\r\n// reverse first and second\r\n// const a = {\r\n//     cat: [\"car\", \"game\", \"food\"]\r\n// }\r\n// let [first, ,second] = a.cat\r\n// console.log(first, second) /* \"car\" \"food\" */\r\n// [first, second] = [second, first] /* reversed to first and second */\r\n// console.log(first, second) /* \"food\" \"car\" */\r\n\r\n// example for reverse first and second\r\n// const a ={\r\n//     arr1: [\"ali\", \"reza\"],\r\n//     arr2: [\"mohsen\", \"behzad\"],\r\n//     func1: function(startIndex, endIndex) {\r\n//         return [this.arr1[startIndex], this.arr2[endIndex]]\r\n//     }\r\n// }\r\n// let [first, second] = a.func1(0, 1)\r\n// [first, second] = [second, first]\r\n// console.log(first, second) /* \"behzad\" \"ali\" */\r\n\r\n// for nested destructuring\r\n// const arr = [1, 2, [3, 5]]\r\n// const [i, , [j, k]] = arr\r\n// console.log(i, j, k) /* 1 3 5 */\r\n\r\n// destructuring\r\n// const [a, b, c] = [8, 9]\r\n// console.log(a, b, c) /* 8 9 undifind */\r\n\r\n// default values in destructuring\r\n// const [a = 0, b = 0, c = 0] = [8]\r\n// console.log(a, b, c) /* 8 0 0 */\r\n112;\r\n// const obj = {\r\n//     fName: \"ali\",\r\n//     lName: \"jodat\",\r\n//     age: 22\r\n// }\r\n// const {fName, age, lName} = obj /* order is unimportant */\r\n// console.log(fName, age, lName) /* \"ali\" 22 \"jodat\" */\r\n\r\n// destructure obj with custom name variable\r\n// const obj = {\r\n//     fName: \"ali\",\r\n//     lName: \"jodat\",\r\n//     age: 22\r\n// }\r\n// const {fName: fN, lName: lN, age: a} = obj\r\n// console.log(fN, lN, a)\r\n\r\n// default values in destructuring obj\r\n// const obj = {\r\n//     a: [1, 2],\r\n//     b: [\"a\", \"b\"]\r\n// }\r\n// const {menu = \"\", b: str1 = [], a: num1 = 0} = obj /* if menu = [] => [], else if menu => undifind */\r\n// console.log(menu, str1, num1) /* \"\" [\"a\", \"b\"] [1, 2] */\r\n\r\n// let a = 100\r\n// let b = 200\r\n// const obj = {\r\n//     a: 12,\r\n//     b: 13,\r\n//     c: 14\r\n// }\r\n// ({a, b} = obj) /* if {a, b} = obj => error, but ({a, b} = obj) is OK! */\r\n// console.log(a, b) /* 12 13 */\r\n\r\n// nested object\r\n// const obj = {\r\n//     obj2: {\r\n//         open: 10,\r\n//         close: 20\r\n//     }\r\n// }\r\n// const {obj2} = obj\r\n// console.log(obj2) /* {open: 10, close: 20} */\r\n// const {obj2: {open, close}} = obj\r\n// console.log(open, close) /* 10 20 */\r\n// const {obj2: {open: op = {}, close: cl = \"-\"}} = obj\r\n// console.log(op, cl) /* 10 20 */\r\n\r\n// destructure with argument function\r\n// const obj = {\r\n//     func: function({fName: fN = \"none\", lName: lN = \"none\"}) {\r\n//         console.log(fN, lN)\r\n//     }\r\n// }\r\n// obj.func({fName: \"ali\", lName: \"jodat\"})\r\n\r\n// const obj = {\r\n//     a: \"a\"\r\n// }\r\n// const {a: str1 = \"none\", b = 0} = obj\r\n// console.log(str1, b) /* \"a\" 0 */\r\n113;\r\n// const arr = [7, 8, 9]\r\n// const newArr = [1, 2, ...arr]\r\n// console.log(newArr) /* [1, 2, 7, 8, 9] */\r\n// const nA = [1, 2, arr]\r\n// console.log(nA) /* [1, 2, Array(3)] */\r\n// console.log(...arr) /* 7 8 9 */\r\n\r\n// const obj = {\r\n//     menu: [\"a\", \"b\", \"c\"]\r\n// }\r\n// const newArr = [...obj.menu, \"ali\"]\r\n// console.log(newArr) /* [\"a\", \"b\", \"c\", \"ali\"] */\r\n\r\n// Iterables => string, array, maps, sets. but not object\r\n// const str = \"ali\"\r\n// const arr = [...str, \"s\"]\r\n// console.log(arr) /* [\"a\", \"l\", \"i\", \"s\"] */\r\n// console.log(`${...str}`) /* => error */\r\n\r\n// const obj = {\r\n//     func: function(num1, num2) {\r\n//         console.log(`${num1} , ${num2}`)\r\n//     }\r\n// }\r\n// obj.func([prompt(\"enter num...\"), prompt(\"enter num...\")])\r\n// second way\r\n// const arr = [prompt(\"enter num...\"), prompt(\"enter num...\")]\r\n// obj.func(...arr)\r\n\r\n// copy with spread oprator\r\n// const obj = {\r\n//     fN: \"ali\",\r\n//     lN: \"jodat\"\r\n// }\r\n// const obj2 = {num: 3, ...obj}\r\n// console.log(obj2) /* 3 \"ali\" \"jodat\" */\r\n// coppying object\r\n// const copyObj = {...obj2}\r\n// copyObj.lN = \"johnnesar\"\r\n// console.log(copyObj.lN) /* johnnesar */\r\n// console.log(obj2.lN) /* jodat */\r\n114;\r\n// const arr = [1, 2, 3, 4, 5]\r\n// const [a, b, ...others] = arr\r\n// console.log(a, b, others) /* 1 2 [3, 4, 5] */\r\n\r\n// const arr = [\"ali\",\"jodat\"]\r\n// const arr1 = [\"a\", \"j\"]\r\n// const [fname, , ...object1, b] = [...arr, ...arr1] /* error for b */\r\n// const [fname, , ...object1] = [...arr, ...arr1]\r\n// console.log(fname, object1) /* \"ali\" \"a\" \"j\" */\r\n\r\n// object spread oprator\r\n// const obj = {\r\n//     sat: true,\r\n//     sun: false,\r\n//     mon:true\r\n// }\r\n// const {sun, ...others} = obj\r\n// console.log(sun, others) /* { sun: false, { sat: true, mon:true } } */\r\n\r\n// const add = function(...num) {\r\n//     console.log(num)\r\n// }\r\n// add(1, 2, 3, 4) /* [1, 2, 3, 4] */\r\n\r\n// const add = function(...num) {\r\n// let sum = 0\r\n// first way\r\n// num.forEach(item, sum += item)\r\n// second way\r\n// num.forEach(item, () => sum += item)\r\n// }\r\n// add(1, 2, 3, 4) /* 10 */\r\n\r\n// const obj = {\r\n//     func: function(first, ...others) {\r\n//         console.log(first)\r\n//         console.log(others)\r\n//     }\r\n// }\r\n// obj.func(\"ali\", \"reza\", \"a\") /* \"ali\" */ /* \"reza\", \"a\" */\r\n115;\r\n// ---- OR ----\r\n// short circet اتصال کوتاه یا\r\n// اگر طرف اول ارزش واقعی داشته باشد یا به عبارتی درست باشد. سریعا برمیگردد\r\n\r\n// console.log(3 || \"ali\") /* 3 */\r\n// console.log(\"\" || \"ali\") /* \"ali\" */\r\n// console.log(true || 0) /* true */\r\n// console.log(undefined || null) /* null */\r\n// console.log(undefined || null || 0 || \"hello\") /* \"hello\" */\r\n\r\n// const obj = {}\r\n// first way\r\n// const result = obj.fN ? obj.fN : \"none\"\r\n// console.log(result) /* \"none\" */\r\n// second way\r\n// const newResult = obj.lN || \"not existed\"\r\n// console.log(newResult) /* \"not existed\" */\r\n\r\n// ---- AND ----\r\n// با دیدن مقدار درست به سراغ بعدی میرود تا اینکه به مقدار نادرست برسد و همان را برگرداند\r\n\r\n// console.log(0 && \"jonas\") /* 0 */\r\n// console.log(7 && \"jonas\") /* \"jonas\" */\r\n// console.log(\"hello\" && 23 && null && true) /* null */\r\n\r\n// first way\r\n// const obj = {\r\n//     ali: function() {\r\n//         console.log(obj.ali)\r\n//     }\r\n// }\r\n// if (obj.ali) {\r\n//     console.log(obj.ali) /* function()... */\r\n// }\r\n// second way\r\n// obj.reza && console.log(obj.reza) /* error or undefined */\r\n116;\r\n// nullish values null and undefined (not a 0 and \"\")\r\n// با دیدن مقدار نال یا آندیفایند به سراغ بعدی میرود\r\n// ولی اگر نال یا آندیفایند نبود همان را برمیگرداند\r\n\r\n// console.log(0 ?? 10) /* 0 */\r\n// console.log(\"\" ?? 10) /* \"\" */\r\n// console.log(undefined ?? 10) /* 10 */\r\n// console.log(null ?? 10) /* 10 */\r\n117;\r\n// OR assignment operator\r\n// مقدار دهی میکند در صورت نادرست بودن آن متغیر\r\n// const obj = {\r\n//     fn: \"ali\"\r\n// }\r\n// first way\r\n// obj.fn = obj.fn || \"reza\" /* fn: \"ali\" */\r\n// obj.ln = obj.ln || \"reza\" /* ln: \"reza\" */\r\n// second way\r\n// obj.fn ||= \"reza\" /* fn: \"ali\" */\r\n// obj.ln ||= \"reza\" /* ln: \"reza\" */\r\n\r\n// nullish assignment operator\r\n// const obj = {\r\n//     fn: \"ali\"\r\n// }\r\n// obj.fn ??= 10 /* \"ali\" */\r\n// obj.ln ??= \"reza\" /* \"reza\" */\r\n\r\n// AND assignment operator\r\n// const obj = {\r\n//     fn: \"ali\"\r\n// }\r\n// obj.fn = obj.fn && \"<ANONYMOUS>\" /* <ANONYMOUS> */\r\n// obj.ln = obj.ln && \"<ANONYMOUS>\" /* undefined */\r\n// obj.fn &&= \"<ANONYMOUS>\" /* <ANONYMOUS> */\r\n// obj.ln &&= \"<ANONYMOUS>\" /* obj = {fn: \"ali\"} ال ان ساخته نمیشود */\r\n118;\r\n// const game = {\r\n//     score: \"4:0\",\r\n//     odds: {\r\n//         team1: 1.33,\r\n//         x: 3.25,\r\n//         team2: 6.5\r\n//     }\r\n// }\r\n// const { odds } = game\r\n// console.log(odds) /* odds: { game: {...} } */\r\n// const { odds: { score, x: newX = 0, team2 } } = game\r\n// console.log( score, newX, team2 ) /* 1.33 3.25 6.5 */\r\n119;\r\n// forOf loop (Iterables)\r\n// const arr = [1, 2, \"ali\"]\r\n// for (const item of arr) console.log(item) /* 1 2 \"ali\" */\r\n// first way\r\n// for (const item of arr.entries()) console.log(item) /* [0, 1] [1, 2] [2, \"ali\"] ... [index, values] */\r\n// second way\r\n// const newArr = [...arr.entries()]\r\n// console.log(newArr) /* [0, 1] [1, 2] [2, \"ali\"] ... [index, values] */\r\n// console.log(newArr[2][1]) /* \"ali\" */\r\n120;\r\n// 1\r\n// const obj = {\r\n//     a: {\r\n//         b: {\r\n//             open: 1\r\n//         },\r\n//         c: {\r\n//             open: 1\r\n//         },\r\n//         d: {\r\n//             open: 1\r\n//         },\r\n//     }\r\n// }\r\n// 2\r\n// const a = {\r\n//     b: {\r\n//         open: 1\r\n//     },\r\n//     c: {\r\n//         open: 1\r\n//     },\r\n//     d: {\r\n//         open: 1\r\n//     },\r\n// }\r\n// const newObj = {\r\n//     a,\r\n//     func() {\r\n//         console.log(\"ali\")\r\n//     }\r\n// }\r\n// 3\r\n// const arr = [\"f1\", \"f2\", \"f3\"]\r\n// const obj = {\r\n//     [arr[0]]: {\r\n//         open: 1\r\n//     },\r\n//     [arr[1]]: {\r\n//         open: 1\r\n//     },\r\n//     [arr[2]]: {\r\n//         open: 1\r\n//     },\r\n// }\r\n121;\r\n// optional chaining\r\n// 1\r\n// const obj = {\r\n//     a: {\r\n//         b: \"bbb\"\r\n//     }\r\n// }\r\n// if (obj.a && obj.a.b) console.log(obj.a.b) /* \"bbb\" */\r\n// 2\r\n// console.log(obj.a?.b) /* \"bbb\" */\r\n// console.log(obj.c?.d) /* undefined */\r\n// 3\r\n// console.log(obj?.c?.d) /* undefined */\r\n// 4\r\n// const arr = [\"f1\", \"f2\", \"f3\", \"f4\"]\r\n// const obj = {\r\n//     [arr[0]]: {\r\n//         open: 1\r\n//     },\r\n//     [arr[1]]: {\r\n//         open: 2\r\n//     },\r\n//     [arr[2]]: {\r\n//         open: 3\r\n//     },\r\n// }\r\n// for (const item of arr) {\r\n//     const result = obj?.[item]?.open ?? `item: ${item} is null or undefined`\r\n//     console.log(result) /* 1 2 3 \"item: f4 is null or undefined\" */\r\n// }\r\n\r\n// const obj = {\r\n//     order(a, b) {\r\n//         console.log(a, b)\r\n//     }\r\n// }\r\n// obj?.order?.(1, 2) /* 1 2 */\r\n// console.log(obj?.o?.(1, 2) ?? \"o is undefined\") /* \"o is undefined\" */\r\n\r\n// const arr = [{a: \"ali\"}]\r\n// console.log(arr[0]?.a ?? \"index 0 undefined\") /* \"ali\" */\r\n// console.log(arr[1]?.a ?? \"index 0 undefined\") /* \"index 0 undefined\" */\r\n122;\r\n// forOf loop on objects\r\n// const obj = {\r\n//     a: {\r\n//         x: \"reza\"\r\n//     },\r\n//     b: {\r\n//         x: \"r\"\r\n//     },\r\n//     c: {\r\n//         x: \"ra\"\r\n//     },\r\n// }\r\n// 1\r\n// for (const item of Object.keys(obj)) { /* Object.keys(obj) === is Array */\r\n// console.log(item) /* a b c */\r\n// }\r\n// 2\r\n// console.log(Object.keys(obj)) /* ['a', 'b', 'c'] */\r\n// 3\r\n// for (const item of Object.values(obj)) {\r\n// console.log(item) /* {x: 'reza'} {x: 'r'} {x: 'ra'} */\r\n// }\r\n// 4\r\n// console.log(Object.values(obj)) /* [{…}, {…}, {…}] */\r\n// 5\r\n// for (const item of Object.values(obj)) {\r\n// console.log(item?.x) /* reza r ra */\r\n// }\r\n// 6\r\n// console.log(Object.entries(obj)) /* [Array(2), Array(2), Array(2)] */\r\n// 7\r\n// console.log(Object.entries(obj)[0]) /* [\"a\", {x: \"reza\"}] => [key, {values}] */\r\n// 8\r\n// for (const item of Object.entries(obj)) {\r\n// console.log(item?.[0]) /* a b c => keys */\r\n// console.log(item?.[1]) /* {x: \"reza\"} {x: \"r\"} {x: \"ra\"} => values */\r\n// }\r\n// 9\r\n// for (const [key, value] of Object.entries(obj)) {\r\n// console.log(key) /* a b c => keys */\r\n// console.log(value) /* {x: \"reza\"} {x: \"r\"} {x: \"ra\"} => values */\r\n// }\r\n// 10\r\n// for (const [key, {x, y: newY = \"not Existed\"}] of Object.entries(obj)) {\r\n// console.log(key) /* a b c => keys */\r\n// console.log(x) /* reza r ra => values */\r\n// console.log(newY) /* \"not Existed\" => values */\r\n// }\r\n123;\r\n// const arr = [\"leo\", \"leva\", \"ronaldo\"]\r\n// for (let [index, name] of arr.entries()) console.log(`goal ${++index}: ${name}`) /* goal 0: leo goal, 1: leva goal, 2: ronaldo */\r\n\r\n// 1\r\n// const obj = {\r\n//     scored: {\r\n//         ali: 12,\r\n//         reza: 34,\r\n//         mehran: 9\r\n//     }\r\n// }\r\n// const scoredArr = Object.values(obj.scored)\r\n// let average = 0\r\n// for (const item of scoredArr) {\r\n//     average += item\r\n// }\r\n// console.log(average /= scoredArr.length) /* 18.3 */\r\n\r\n// 2\r\n// const obj = {\r\n//     scored: {\r\n//         ali: 12,\r\n//         reza: 34,\r\n//         mehran: 9\r\n//     }\r\n// }\r\n// const scoredArr = Object.entries(obj.scored)\r\n// let average = 0\r\n// for (const item of scoredArr) average += item?.[1]\r\n// console.log(average /= scoredArr?.length) /* 18.3 */\r\n\r\n// 3\r\n// const obj = {\r\n//     scored: {\r\n//         ali: 12,\r\n//         reza: 34,\r\n//         mehran: 9\r\n//     }\r\n// }\r\n// for (const [ name, scored ] of Object.entries(obj.scored)) {\r\n// 1\r\n// if (name === \"reza\") continue\r\n// console.log(`${name}: ${scored}`)\r\n// 2\r\n//     name === \"reza\" ? '' : console.log(`${name}: ${scored}`)\r\n// }\r\n124;\r\n// LEARN SET()\r\n\r\n// 1\r\n// const ns = new Set([\"p\", \"p\", 1])\r\n// console.log(ns); /* {'p', 1} => عناصر تکراری ندارد */\r\n\r\n// 2\r\n// const ns = new Set(\"ali\")\r\n// console.log(ns) /* {'a', 'l', 'i'} => because string is itrables */\r\n// console.log(ns.size) /* 3 */\r\n\r\n// 3\r\n// const ns = new Set([\"p\", \"p\", 1])\r\n// console.log(ns.has(\"p\")) /* true */\r\n// console.log(ns.has(\"b\")) /* fale */\r\n\r\n// 4\r\n// const ns = new Set([\"p\", \"p\", 1])\r\n// ns.add(\"behzad\")\r\n// ns.add(\"behzad\")\r\n// console.log(ns) /* {'p', 1, 'behzad'} => عنصر تکراری ندارد */\r\n// ns.delete(1) /* این روش در آرایه نیست */\r\n// console.log(ns) /* Set(2) {'p', 'behzad'} */\r\n// console.log(ns[0]) /* undefined */\r\n// ns.clear()\r\n// console.log(ns) /* Set(0) {size: 0} */\r\n\r\n// 5\r\n// const ns = new Set([\"p\", \"p\", 1])\r\n// for (const item of ns) console.log(item);\r\n\r\n// 6\r\n// const arr = ['p', 'p', 'p', 'b', 1]\r\n// const ns = new Set(arr)\r\n// console.log(ns) /* Set(3) {'p', 'b', 1} => برای حذف عناصر تکراری این روش مناسب است */\r\n\r\n// 7\r\n// convert set() to array\r\n// const arr = ['p', 'p', 'p', 'b', 1]\r\n// const ns = [...new Set(arr)]\r\n// console.log(ns) /* (3) ['p', 'b', 1] */\r\n\r\n// 8\r\n// const obj = {\r\n//     a: \"a\",\r\n//     b: \"a\",\r\n//     c: \"a\",\r\n// }\r\n// const array = [...obj]\r\n// console.log(array) /* error => obj is not iterable */\r\n\r\n// 9\r\n// const str = \"ali\"\r\n// const arr = [...str]\r\n// console.log(arr) /* ['a', 'l', 'i'] => چون تکرار شونده هست */\r\n\r\n// 10\r\n// console.log(new Set(\"ali\").size) /* 3 => چون تکرار شونده هست */\r\n125;\r\n// LEARN MAP()\r\n\r\n// const nm = new Map()\r\n// nm.set(\"ali\", 22)\r\n// console.log(nm) /* Map(2) {'ali' => 22} */\r\n// nm.set(true, 21).set(\"categories\", [true, false])\r\n// console.log(nm) /* Map(3) {'ali' => 22, true => 21, 'categories' => Array(2)} */\r\n\r\n// const nm = new Map()\r\n// nm.set(\"name\", \"alireza\").set(\"age\", 22).set(true, \"live\")\r\n// console.log(nm.get(\"name\")) /* alireza */\r\n// console.log(nm.get(\"age\")) /* 22 */\r\n// console.log(nm.get(true)) /* live */\r\n\r\n// const nm = new Map()\r\n// nm\r\n// .set(\"open\", 11)\r\n// .set(\"close\", 20)\r\n// .set(true, \"is open\")\r\n// .set(false, \"is closed\")\r\n// const time = 21\r\n// console.log(nm.get(time > nm.get(\"open\") && time < nm.get(\"close\"))) /* is closed */\r\n\r\n// const nm = new Map()\r\n// nm\r\n// .set(\"open\", 11)\r\n// .set(\"close\", 20)\r\n// console.log(nm.has(\"open\")) /* true */\r\n// nm.delete(\"open\")\r\n// console.log(nm) /* Map(1) {'close' => 20} */\r\n// console.log(nm.size) /* 1 */\r\n// nm.clear()\r\n// console.log(nm, nm.size) /* Map(0) {size: 0} 0 */\r\n\r\n// const nm = new Map()\r\n// nm\r\n// .set([1, 2], \"test\")\r\n// console.log(nm.get([1, 2])) /* error => undefined => زیرا آدرس آنها با هم یکسان نیستند */\r\n\r\n// fix top problem\r\n// const nm = new Map()\r\n// const arr = [1, 2]\r\n// nm\r\n// .set(arr, \"test\")\r\n// console.log(nm.get(arr)) /* test => زیرا آدرس آنها با هم یکسان است */\r\n\r\n// const nm = new Map()\r\n// nm\r\n// .set(document.querySelector(\"body\"), \"this is body...!!\")\r\n// console.log(nm.get(document.body)) /* this is body...!! */\r\n// console.log(nm) /* Map(1) {body => 'this is body...!!'} */\r\n126;\r\n// const nm = new Map([\r\n//     [1, \"c\"],\r\n//     [2, \"c+\"],\r\n//     [3, \"c++\"],\r\n// ])\r\n// console.log(nm) /* Map(3) {1 => 'c', 2 => 'c+', 3 => 'c++'} */\r\n\r\n// روشی برای تبدیل اشیاء به مپ\r\n// const obj = {\r\n//     \"a\": 1,\r\n//     \"b\": 2\r\n// }\r\n// console.log(Object.entries(obj)) /* ['a', 1] ['b', 2] */\r\n\r\n// روشی برای تبدیل آرایه ای از آرایه ها به مپ\r\n// const arr = [\"a\",\"b\"]\r\n// const nm = new Map(Object.entries(arr))\r\n// console.log(nm) /* Map(2) {'0' => 'a', '1' => 'b'} */\r\n// مقدار اول ایندکس و دوم ارزش\r\n\r\n// const obj = {\r\n//     \"a\": 1,\r\n//     \"b\": 2\r\n// }\r\n// const nm = new Map(Object.entries(obj))\r\n// console.log(nm) /* Map(2) {'a' => 1, 'b' => 2} */\r\n\r\n// const name = new Map([\r\n//     [1, \"alireza\"],\r\n//     [\"behzad\" , 2],\r\n//     [true, \"ali\"],\r\n//     [false, \"reza\"]\r\n// ])\r\n// for (const [key, value] of name) console.log(`is key: ${key} is value: ${value}`)\r\n\r\n// const name = new Map([\r\n//     [1, \"alireza\"],\r\n//     [\"behzad\" , 2],\r\n//     [true, \"ali\"],\r\n//     [false, \"reza\"]\r\n// ])\r\n// for (const [key, value] of name) typeof key === \"boolean\" && console.log(`is boolean value: ${value}`)\r\n\r\n// Map method\r\n// const name = new Map([\r\n//     [1, \"alireza\"],\r\n//     [\"behzad\" , 2],\r\n//     [true, \"ali\"],\r\n//     [false, \"reza\"]\r\n// ])\r\n// console.log(name.get(true)) /* ali */\r\n\r\n// const name = new Map([\r\n//     [1, \"alireza\"],\r\n//     [\"behzad\" , 2],\r\n//     [true, \"ali\"],\r\n//     [false, \"reza\"]\r\n// ])\r\n// const myPrompt = Number(prompt(\"put your number...\"))\r\n// for (const [key, value] of name) (value === myPrompt || typeof value === \"number\") && console.log(`this is ${key}`)\r\n\r\n// const name = new Map([\r\n//     [1, \"alireza\"],\r\n//     [\"behzad\" , 2],\r\n//     [true, \"ali\"],\r\n//     [false, \"reza\"]\r\n// ])\r\n// const myPrompt = Number(prompt(\"put your number...\"))\r\n// for (const [key, value] of name) value === myPrompt && console.log(name.get(value === myPrompt)) /* \"ali\" */\r\n\r\n// روشی برای تبدیل کردن مپ به آرایه\r\n// const name = new Map([\r\n//     [1, \"alireza\"],\r\n//     [\"behzad\" , 2],\r\n//     [true, \"ali\"],\r\n//     [false, \"reza\"]\r\n// ])\r\n// console.log(...name) /* [1, 'alireza'] ['behzad', 2] (2) [true, 'ali'] (2) [false, 'reza'] */\r\n// console.log(name.entries()) /* MapIterator {1 => 'alireza', 'behzad' => 2, true => 'ali', false => 'reza'} */\r\n// console.log(name.keys()) /* MapIterator {1, 'behzad', true, false} */\r\n// console.log(name.values()) /* MapIterator {'alireza', 2, 'ali', 'reza'} */\r\n// console.log([...name.keys()]) /* [1, 'behzad', true, false] */\r\n// console.log([...name.values()]) /* ['alireza', 2, 'ali', 'reza'] */\r\n128;\r\n// const gameEvents = new Map([\r\n//     [17, \"Goal\"],\r\n//     [36, \"Yellow card\"],\r\n//     [42, \"Corner\"],\r\n//     [60, \"Goal\"],\r\n//     [89, \"Red card\"],\r\n// ])\r\n// // حذف مقادیر تکراری و قرار دادن آن به صورت آرایه\r\n// const arr = [...new Set(gameEvents.values())]\r\n// console.log(arr) /* ['Red card', 'Yellow card'] */\r\n// // حذف رویداد دقیقه 89\r\n// gameEvents.delete(89)\r\n// console.log(gameEvents) /* Map(4) {17 => 'Goal', 36 => 'Yellow card', 42 => 'Corner', 60 => 'Goal'} */\r\n// // هر رویداد به طور میانگین در چند دقیقه اتفاق میافتد\r\n// console.log(90 / gameEvents.size) /* 22.5 each of minute */\r\n// // مثال بالا فقط با این تفاوت که زمان کل بازی را به صورت پویا به دست آوریم\r\n// const lastTime = [...gameEvents.keys()].pop()\r\n// console.log(lastTime) /* آخرین مقدار 60 است زیرا 89 پاک شده است */\r\n// console.log(lastTime / gameEvents.size) /* 15 each of minute */\r\n// // مشخص کردن نیمه\r\n// for (const [min, event] of gameEvents)\r\n//     min <= 45\r\n//     ? console.log(`[first half] => This event ${event} in ${min} minute...`)\r\n//     : console.log(`[second half] => This event ${event} in ${min} minute...`)\r\n129;\r\n// // string method\r\n// const name = \"alireza jodat\"\r\n// const numberStr = \"12345\"\r\n// // به دست آوردن حروف به روش خانه های آرایه\r\n// console.log(name[6]) /* a */\r\n// // روش دوم\r\n// console.log(\"ali\"[1]) /* l */\r\n// // استفاده از متد های رشته\r\n// console.log(numberStr.length) /* 5 */\r\n// console.log(\"12\".length) /* 2 */\r\n// // متد برای ایندکس\r\n// const str = \"rrrr\"\r\n// console.log(str.indexOf(\"r\")) /* first index */\r\n// console.log(\"bbb\".indexOf(\"b\")) /* first index */\r\n// // آخرین ایندکس\r\n// console.log(str.lastIndexOf(\"r\")) /* last index */\r\n// console.log(\"bbb\".lastIndexOf(\"b\")) /* last index */\r\n// // پیدا کردن ایندکس کلمه\r\n// console.log(name.indexOf(\"jodat\")) /* first index */\r\n// console.log(\"ali vs behzad\".indexOf(\"jodat\")) /* -1 for undefined */\r\n// // متد اسلایس هم برای رشته است هم برای آرایه\r\n// console.log(numberStr.slice(2)) /* 345 */\r\n// console.log(numberStr.slice(2, 4)) /* 34 */\r\n// // اسلایس کردن اولین کلمه\r\n// console.log(name.slice(0, name.indexOf(\" \"))) /* alireza */\r\n// // اسلایس کردن آخرین کلمه\r\n// console.log(name.slice(name.lastIndexOf(\" \") + 1))\r\n// // استفاده از اعداد منفی برای اسلایس\r\n// console.log(name.slice(2, -2)) /* ireza jod */\r\n// console.log(name.slice(-3)) /* dat */\r\n// // اطلاعات اضافی در مورد رشته ها\r\n// console.log(new Set(name)) /* شبیه به آبجکت است که کلید آن ایندکس و مقدار آن حرف ها است */\r\n// console.log(new String(name)) /* شبیه به آبجکت است که کلید آن ایندکس و مقدار آن حرف ها است */\r\n// console.log(typeof new String(name)) /* تایپ آن آبجکت است */\r\n// console.log(typeof new String(name).slice(2)) /* وقتی آن را اسلایس میکنیم تایپ آن به رشته تغییر میکند */\r\n130;\r\n// const str = \"abcd Efgh\"\r\n// console.log(str.toLowerCase()) /* abcd efgh */\r\n// console.log(\"jonas\".toUpperCase()) /* JONAS */\r\n\r\n// // برای رفع مشکل کپیتال نوشتن\r\n// const str1 = \"JoNaS\"\r\n// const lower = str1.toLowerCase()\r\n// console.log(lower[0].toUpperCase() + lower.slice(1)) /* Jonas */\r\n\r\n// // برای مقایسه دو ایمیل یکسان\r\n// const email = \"alireza@gmail.com\"\r\n// const email2 = \"    aliReza@Gmail.Com \\n\"\r\n// console.log(email2.toLowerCase().trim()) /* alireza@gmail.com */\r\n\r\n// // جایگزین کردن حروف در رشته ها\r\n// const priceGB = \"12,33$\"\r\n// console.log(priceGB.replace(\"$\", \"R\")) /* 12,33R */\r\n// console.log(priceGB.replace(\",\", \".\").replace(\"$\", \"UE\")) /* 12.33UE */\r\n\r\n// // جایگزین کردن کلمه در رشته ها\r\n// const str2 = \"door is open is door\"\r\n// console.log(str2.replace(\"door\", \"dor\")) /* فقط اولین کلمه مشابه تغییر میکند */\r\n// console.log(str2.replaceAll(\"is\", \"iss\").replaceAll(\"door\", \"book\")) /* همه کلمه های مشابه تغییر میکند */\r\n// console.log(str2.replaceAll(\"is\", \"iss\").replaceAll(\"oor\", \"ook\")) /* dook iss open iss dook */\r\n\r\n// // روش دوم برای جایگزین کردن همه کلمه های مشابه\r\n// const str3 = \"door is open is door\"\r\n// console.log(str3.replace(/is/g, \"the\")) /* door the open the door */\r\n\r\n// // متد های بولین\r\n// const name1 = \"alireza jodat\"\r\n// console.log(name1.includes(\"ali\")) /* true */\r\n// console.log(name1.includes(\"alireza\")) /* true */\r\n// console.log(name1.startsWith(\"alir\")) /* true */\r\n// console.log(name1.startsWith(\"jo\")) /* false */\r\n\r\n// name1.startsWith(\"alireza\") && name1.endsWith(\"jodat\")\r\n// ? console.log(\"is OK!\") /* is OK! */\r\n// : console.log(\"is'nt OK!\")\r\n\r\n// name1.startsWith(\"alireza\") && name1.endsWith(\"j\")\r\n// ? console.log(\"is OK!\")\r\n// : console.log(\"is'nt OK!\") /* is'nt OK! */\r\n131;\r\n// // split method for string\r\n// console.log(\"me+you+them\".split(\"+\")) /* ['me', 'you', 'them'] */\r\n// console.log(\"me you them\".split(\" \")) /* ['me', 'you', 'them'] */\r\n\r\n// // تخریب کردن رشته در آرایه\r\n// const [fName, lName] = \"alireza jodat\".split(\" \")\r\n// console.log(fName, lName) /* alireza jodat */\r\n\r\n// // join method for string\r\n// // سر هم کردن آرایه به صورت یک جمله\r\n// console.log([\"ali\", \"reza\", \"jodat\", 1380].join(\" \")) /* ali reza jodat 1380 */\r\n\r\n// // بزرگ کردن اول هر اسم\r\n// function upperFunc(names) {\r\n//     let newArr = []\r\n\r\n//     for (const item of names.split(\" \")) {\r\n//         // روش اول\r\n//         // newArr.push(item[0].toUpperCase() + item.slice(1))\r\n\r\n//         // روش دوم\r\n//         newArr.push(item.replace(item[0], item[0].toUpperCase()))\r\n//     }\r\n\r\n//     console.log(newArr.join(\" \")) /* Ali Reza Jodat */\r\n// }\r\n\r\n// upperFunc(\"ali reza jodat\")\r\n\r\n// // padding method in string\r\n// console.log(\"ali\".padStart(5, \"_\").padEnd(10, \"_\")) /* __ali_____ */\r\n\r\n// // تمرین برای پنهان کردن شماره تماس\r\n// function hideNum(number) {\r\n//     const strNumber = String(number)\r\n//     const firstPart = strNumber.slice(0, 4)\r\n//     const secondPart = strNumber.slice(-4)\r\n//     const starLength = strNumber.length - (firstPart.length + secondPart.length)\r\n//     const padEnd1 = firstPart.length + 1\r\n//     const padEnd2 = firstPart.length + 1 + starLength\r\n//     const padEnd3 = firstPart.length + 1 + starLength + 1\r\n\r\n//     console.log(\r\n//         firstPart\r\n//             .padEnd(padEnd1,\" \")\r\n//             .padEnd(padEnd2, \"*\")\r\n//             .padEnd(padEnd3, \" \") + secondPart\r\n//     )\r\n// }\r\n\r\n// hideNum(\"09359227339\") /* 0935 *** 7339 */\r\n// hideNum(\"09359200000\") /* 0935 *** 0000 */\r\n\r\n// // repeat method for string\r\n// console.log(\"ali \".repeat(5)) /* ali ali ali ali ali */\r\n\r\n// const repeatFunc = n => console.log(`${n} = ${\"👊\".repeat(n)}`)\r\n// repeatFunc(5) /* 5 = 👊👊👊👊👊 */\r\n132;\r\n//     // تمرین برای تبدیل به کمل کیس\r\n//     const str = `  aLi_r\r\n//   rEza_La\r\n//  rEza_ba\r\n// rEza_Labb`\r\n\r\n//     function handleStr(text) {\r\n//         const textArray = text.split(\"\\n\")\r\n\r\n//         for (const [index, item] of textArray.entries()) {\r\n//             const [first, last] = item.toLowerCase().trim().split(\"_\")\r\n//             const output = `${first}${last.replace(last[0], last[0].toUpperCase())}`.padEnd(15, \" \")\r\n\r\n//             console.log(`${output}${\"✔\".repeat(index + 1)}`)\r\n//         }\r\n//     }\r\n\r\n//     handleStr(str)\r\n133;\r\n// // تمرین تمام متد های رشته در یکجا\r\n// const info = `_Ali_reza;fao79876768;txl1234455667;12:15+_Jonas_rezaei;hel79876768;fao1234455667;22:25`\r\n\r\n// for (const item of info.split(\"+\")) {\r\n//     const [first, from, to, hour] = item.split(\";\")\r\n//     console.log(\r\n//         `${first.startsWith(\"_Ali\") ? \"✔\" : \"❤\"}${first.replaceAll(\r\n//             \"_\",\r\n//             \" \"\r\n//         )} from ${from.slice(0, 3)} to ${to.slice(0, 3)} (${hour.replace(\r\n//             \":\",\r\n//             \"h\"\r\n//         )})`.padStart(45)\r\n//     )\r\n// }\r\n136;\r\n// const arr = []\r\n\r\n// // نحوه مشخص کردن مقدار پیش فرض برای آرگومان\r\n// function testFunc(a = 1, b = 100, c = 6 * b) {\r\n//     // روش قدیمی برای ست کردن مقادیر پیش‌فرض در شیء ها\r\n//     a = a || 1\r\n//     b = b || 100\r\n//     c = c || 6 * b\r\n\r\n//     const obj = {\r\n//         a,\r\n//         b,\r\n//         c\r\n//     }\r\n\r\n//     arr.push(obj)\r\n\r\n//     console.log(obj)\r\n//     console.log(arr) /* [{…}] = arr[0] => obj */\r\n// }\r\n\r\n// testFunc(21, undefined, 33) /* {a: 21, b: 100, c: 33} */\r\n// testFunc(21, undefined, undefined) /* {a: 21, b: 100, c: 600} */\r\n137;\r\n// // مسئله کپی شدن شیء ها\r\n// const name1 = \"ali\"\r\n// const obj = {\r\n//     name: \"reza jodat\",\r\n//     number: 9876\r\n// }\r\n\r\n// function testFunc(a = \"\", b = {}) {\r\n//     a = \"mehran\" /* کپی میشود و مقدار اصلی خود را در متغیر حفظ مینماید */\r\n//     b.number = 23\r\n\r\n//     console.log(a) /* mehran */\r\n//     console.log(b) /* 23 */\r\n// }\r\n\r\n// testFunc(\"r\", obj)\r\n// console.log(name1) /* ali */\r\n// console.log(obj) /* 23 */ /* شیء ها چون به آدرس حافظه مشترکی اشاره میکنند در همه جا دچار تغییر میشوند */\r\n139;\r\n// const func1 = (str) => str.split(\" \");\r\n\r\n// function func2(str, fn) {\r\n//     const [first, ...others] = fn(str);\r\n//     return [first.replace(first[0], first[0].toUpperCase()), ...others];\r\n// }\r\n\r\n// const joinFunc = (str, func1, func2) =>\r\n//     console.log(func2(str, func1).join().replaceAll(\",\", \" \"));\r\n\r\n// joinFunc(\"ali reza jodat 1380\", func1, func2); /* Ali reza jodat 1380 */\r\n\r\n// // مثالی برای کال بک فانکشن\r\n// const testFunc = () => console.log(\"h\");\r\n// const repeatFunc = (a) => console.log(\"Hello!!!\", a.name ?? \"testAlaki\");\r\n\r\n// document.querySelector(\"html\").addEventListener(\"click\", repeatFunc(testFunc));\r\n\r\n// [\"q\", \"j\"].forEach(repeatFunc);\r\n140;\r\n// function hello(name) {\r\n//     return function (family) {\r\n//         console.log(`Hi ${name} ${family}`);\r\n//     };\r\n// }\r\n\r\n// const newHello = hello(\"Ali\");\r\n\r\n// newHello(\"Jodat\");\r\n\r\n// // روش تک خطی\r\n// const hello1 = (name) => (family) => console.log(`Hi ${name} ${family}`);\r\n\r\n// hello1(\"mohsen\")(\"jodat\");\r\n141;\r\n// const obj = {\r\n//     name: \"ali\",\r\n//     family: \"jodat\",\r\n//     arr: [],\r\n\r\n//     // روش قدیمی\r\n//     func1: function () {\r\n//         // code\r\n//     },\r\n\r\n//     // روش جدید\r\n//     func(a = \"\", b = \"\") {\r\n//         const output = `${a} ${b} ${this?.name} ${this?.family}`;\r\n//         this?.arr?.push(output.split(\" \"));\r\n//     },\r\n// };\r\n\r\n// obj.func(\"hi\", \"hello\");\r\n// console.log(obj?.arr); /* ['hi', 'hello', 'ali', 'jodat'] */\r\n\r\n// const func = obj?.func;\r\n\r\n// // does not work!!!!\r\n// console.log(\r\n//     func(\"ali\") /* undefined */\r\n// ); /* به دیل گذاشتن علامت سوال برای ما تعریف نشده برمیگرداند در غیر اینصورت ارور میدهد */ /* کلمه این تعریف نشده است */\r\n\r\n// // راه حل برای استفاده از متد های آبجکت در خارج از آن\r\n\r\n// // نام آبجکتی که قرار است متد در آن تغییر ایجاد کند را حتما باید بنویسیم\r\n// func.call(obj, \"newAli\", \"newReza\");\r\n// console.log(obj.arr); /* [Array(4), Array(4)] */\r\n\r\n// // مثال واضح تر\r\n// const newObj = {\r\n//     name: \"name_newObj\",\r\n//     family: \"family_newObj\",\r\n//     arr: [],\r\n// };\r\n\r\n// // نام آبجکت مورد نظر درست وارد شود\r\n// func.call(newObj, \"a\", \"b\", \"c\");\r\n// console.log(newObj.arr); /* ['a', 'b', 'name_newObj', 'family_newObj'] */\r\n\r\n// // روشی کوتاه تر\r\n// const arr1 = [\"a\", \"c\"];\r\n// func.call(newObj, ...arr1);\r\n// console.log(newObj.arr);\r\n\r\n// // apply method\r\n// // این متد فقط آرایه ای از آرگومان ها را میگیرد\r\n// func.apply(newObj, arr1);\r\n// console.log(newObj.arr);\r\n142;\r\n// const obj = {\r\n//     name: \"ali\",\r\n//     family: \"jodat\",\r\n//     func(input) {\r\n//         console.log(`${this.name} and ${this.family} and input: \"${input}\"`);\r\n//     },\r\n// };\r\n\r\n// obj.func(4); /* ali and jodat and input: \"4\" */\r\n\r\n// const newObj = {\r\n//     name: \"mehran\",\r\n//     family: \"gol\",\r\n// };\r\n\r\n// const funcG = obj.func;\r\n\r\n// funcG.call(newObj, 5); /* mehran and gol and input: \"5\" */\r\n\r\n// روش خاص برای کال\r\n// (() => {\r\n//     const obj = {\r\n//         ali: {\r\n//             name: \"ali1\",\r\n//             func() {\r\n//                 console.log(this.name);\r\n//             },\r\n//         },\r\n//         reza: { name: \"reza1\" },\r\n//         bezi: { name: \"bezi1\" },\r\n//     };\r\n//     const newFunc = obj.ali.func;\r\n//     Object.keys(obj).forEach((item) => {\r\n//         newFunc.call(obj[item]);\r\n//     });\r\n// })();\r\n\r\n// // Bind method\r\n// // روش اول\r\n// const bindFunc = funcG.bind(newObj);\r\n// bindFunc(77); /* mehran and gol and input: \"77\" */\r\n\r\n// // روش دوم\r\n// const bindFunc1 = funcG.bind(newObj, \"default value!!!\");\r\n// bindFunc1(); /* mehran and gol and input: \"default value!!!\" */\r\n\r\n// // بررسی کلمه کلیدی \"این\" در رویداد های جاواسکریپتی\r\n// // 1\r\n// function f1() {\r\n//     console.log(this);\r\n// }\r\n// f1(); /* window object */\r\n\r\n// // 2\r\n// const obj1 = {\r\n//     name: \"ali\",\r\n//     f2() {\r\n//         console.log(this);\r\n//     },\r\n// };\r\n// obj1.f2(); /* {name: 'ali', f2: ƒ} */\r\n\r\n// // در توابع رویداد کلمه کلیدی \"این\" مقدار عنصر دکمه را برمیگرداند\r\n// // 3\r\n// const obj2 = {\r\n//     name: \"ali\",\r\n//     f3() {\r\n//         console.log(this);\r\n//     },\r\n// };\r\n// document\r\n//     .querySelector(\".btn\")\r\n//     .addEventListener(\"click\", obj2.f3); /* <button class=\"btn\">142</button> */\r\n\r\n// // 4\r\n// function f4() {\r\n//     console.log(this);\r\n// }\r\n// document\r\n//     .querySelector(\".btn\")\r\n//     .addEventListener(\"click\", f4); /* <button class=\"btn\">142</button> */\r\n\r\n// // 5\r\n// // برای اینکه بخواهیم مقدار شیء را برایمان برگرداند مراحل زیر را می‌نویسیم\r\n// const obj3 = {\r\n//     name: \"ali\",\r\n//     f5(input) {\r\n//         console.log(this, input);\r\n//     },\r\n// };\r\n// document\r\n//     .querySelector(\".btn142\")\r\n//     .addEventListener(\r\n//         \"click\",\r\n//         obj3.f5.bind(obj3, 2)\r\n//     ); /* {name: 'ali', f5: ƒ} 2 */\r\n\r\n// // prtial application\r\n// // در این روش نسخه ثابت از یک تابع ذخیره میشود و سپس تابع را با مقادیر مختلف صدا می‌زنیم\r\n// const calcAge = (now, age) => console.log(now - age);\r\n// const calcAgeBind = calcAge.bind(null, 2024);\r\n// calcAgeBind(2001); /* 23 */\r\n// calcAgeBind(2005); /* 19 */\r\n\r\n// // استفاده از \"پارشیال\" برای توابع تو در تو\r\n// // روش اول\r\n// function add(num1) {\r\n//     return function (num2) {\r\n//         return num1 + num2;\r\n//     };\r\n// }\r\n// const addConstant = add(12);\r\n// console.log(addConstant(12)); /* 24 */\r\n\r\n// // روش خلاصه تر\r\n// // روش دوم\r\n// const add2 = (num1) => (num2) => num1 + num2;\r\n// const addC = add2(30);\r\n// console.log(addC(12)); /* 42 */\r\n143;\r\n// const obj = {\r\n//     q: \"wich one?\",\r\n//     o: [\"0: Java\", \"1: Python\", \"2: C++\"],\r\n//     a: new Array(3).fill(0),\r\n//     f() {\r\n//         // get\r\n//         const r = Number(prompt(`${this.q}\\n${this.o.join(\"\\n\")}`));\r\n//         // check\r\n//         typeof r === \"number\" && (r ?? false) && r < this.o.length && r >= 0\r\n//             ? this.a[r]++\r\n//             : console.log(\"Error!!!\");\r\n//         // condition\r\n//         const condition =\r\n//             typeof r === \"number\" &&\r\n//             (r ?? false) &&\r\n//             r < this.o.length &&\r\n//             r >= 0;\r\n//         condition && console.log(this.a);\r\n//     },\r\n// };\r\n// // we can use call or bind method\r\n// document.querySelector(\".btn143\").addEventListener(\"click\", obj.f.call(obj));\r\n144;\r\n// توابعی که فقط یکبار خوانده میشوند\r\n// معمولا از این توابع برای جلوگیری از گلوبال شدن متغیر ها استفاده میشود\r\n// (function () {\r\n//     console.log(\"ali\");\r\n// })();\r\n\r\n// // روشی برای توابع یک خطی\r\n// (() => console.log(\"arrow\"))();\r\n145;\r\n// // Closures function\r\n// // روش اول\r\n// function countFunc() {\r\n//     let counter = 0;\r\n//     return function () {\r\n//         counter++;\r\n//         console.log(counter);\r\n//     };\r\n// }\r\n// const countFuncNew =\r\n//     countFunc(); /* با این عمل تمام بخش های بغیر از بخش \"بازگردانی\" اجراء می‌شود */\r\n// countFuncNew(); /* 1 */\r\n// countFuncNew(); /* 2 */\r\n// countFuncNew(); /* 3 */\r\n// console.dir(\r\n//     countFuncNew\r\n// ); /* با رفتن به اسکپ و سپس کلاژرز میتوانیم به آخرین مقدار شمارنده خود دسترسی داشته باشیم */\r\n\r\n// // روش دوم برای توابع تک خطی\r\n// function arrowF() {\r\n//     let count = 0;\r\n//     return () => console.log(++count);\r\n// }\r\n// const newA = arrowF();\r\n// newA(); /* 1 */\r\n// newA(); /* 2 */\r\n// newA(); /* 3 */\r\n146;\r\n// // some of example for closure function\r\n// // 1\r\n// let func1;\r\n// function func2() {\r\n//     console.log(\"first\");\r\n//     func1 = () => console.log(\"second\");\r\n// }\r\n// func2(); /* first */\r\n// func1(); /* second */\r\n\r\n// // 2\r\n// function timer(a, wait) {\r\n//     console.log(\"first\");\r\n//     setTimeout(() => {\r\n//         console.log(a);\r\n//     }, wait * 1000);\r\n//     console.log(\"second\");\r\n// }\r\n// timer(\"ali\", 3); /* in order => 1. first 2. second 3. \"ali\"*/\r\n150;\r\n// // Array method\r\n// // slice method in Array\r\n// // این حالت آرایه اصلی را تغییر نمی‌دهد\r\n// const arr = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n// console.log(arr.slice(-2)); /* ['d', 'e'] */\r\n// console.log(arr.slice(0, -2)); /* ['a', 'b', 'c'] */\r\n\r\n// // splice method in Array\r\n// // این حالت کاملا مشابه اسلایس است اما آرایه اصلی را تغییر می‌دهد\r\n// // یکی از کاربرد‌های آن حذف کردن عناصر مورد نظر از آرایه اصلی می‌تواند باشد\r\n// const arr1 = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n// console.log(arr1.splice(0, 3)); /* ['a', 'b', 'c'] */\r\n// console.log(arr1); /* ['d', 'e'] */\r\n// console.log(arr1.splice(-2)); /* ['d', 'e'] */\r\n// console.log(arr1); /* [] => آرایه خالی شده */\r\n// console.log(arr1.splice(0, -2)); /* [] => چون دیگه آرایه خالی است */\r\n\r\n// // reverse method in Array\r\n// // این روش آرایه اصلی را تغییر می‌دهد\r\n// const arr2 = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n// console.log(arr2.reverse()); /* ['e', 'd', 'c', 'b', 'a'] */\r\n// console.log(arr2); /* ['e', 'd', 'c', 'b', 'a'] */\r\n\r\n// // concat method in Array\r\n// // روش اول برای کانکت\r\n// const arr3 = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n// const arr4 = [\"f\", \"g\", \"h\", \"i\", \"j\"];\r\n// console.log(\r\n//     arr3.concat(arr4)\r\n// ); /* ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'] */\r\n// // \"...\" روش خیلی باحال برای کاکنت کردن از طریق اسپرید\r\n// console.log([...arr3, ...arr4]); /* ['e', 'd', 'c', 'b', 'a'] */\r\n\r\n// // join method in Array\r\n// const arr5 = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n// const arr6 = [\"f\", \"g\", \"h\", \"i\", \"j\"];\r\n// console.log(\r\n//     arr5.concat(arr6).join(\" - \")\r\n// ); /* a - b - c - d - e - f - g - h - i - j */\r\n\r\n// // (push, shift, unshift, pop, indexOf, includes) متد‌هایی که از قبل یاد گرفتیم\r\n151;\r\n// // At method in Array\r\n// // همانند روش سنتی براکت عمل می‌کند اما در آن دستیابی به آخرین خانه از آرایه راحت تر است\r\n// const arr = [\"f\", \"g\", \"h\", \"i\", \"j\"];\r\n// console.log(arr.at(0)); /* f */\r\n// // مقایسه دستیابی به آخرین خانه از آرایه در سه روش متفاوت\r\n// console.log(arr[arr.length - 1]); /* j */\r\n// console.log(arr.slice(-1)[0]); /* j */\r\n// console.log(\r\n//     arr.at(-1)\r\n// ); /* j => بهترین روش برای دستیابی به آخرین خانه از آرایه */\r\n152;\r\n// // forEach loop in javaScript\r\n// // می‌رویم forEach آشنا می‌شویم و سپس به سراغ حلقه Math.abs می‌زنیم و همچنین با متد  forOf ابتدا یک مثال از حلقه\r\n// const numbers = [100, -20, 15, -336];\r\n// for (const [index, item] of numbers.entries())\r\n//     item > 0\r\n//         ? console.log(`tarakonesh ${index}: ${item} variz shodeh...`)\r\n//         : console.log(\r\n//               `tarakonesh ${index}: ${Math.abs(item)} bardasht shodeh...`\r\n//           ); /* همانند قدرمطلق عمل می‌کند Math.abs(item) متد */\r\n\r\n// // forEach مثال بال با استفاده از\r\n// console.log(\"---- forEach loop ----\");\r\n// const numbers2 = [100, -20, 15, -336];\r\n// numbers2.forEach((number, index, array) => {\r\n//     console.log(\r\n//         array\r\n//     ); /* [100, -20, 15, -336] => با استفاده از پارامتر سوم میتوانیم به خود آرایه دسترسی پیدا کنیم */\r\n//     number > 0\r\n//         ? console.log(`tarakonesh ${index}: ${number} variz shodeh...`)\r\n//         : console.log(\r\n//               `tarakonesh ${index}: ${Math.abs(number)} bardasht shodeh...`\r\n//           );\r\n// });\r\n\r\n// // forEach , forOf تفاوت‌های اساسی میان\r\n// // استفاده کنیم اما در دیگری می‌شود break , continue نمی‌توانیم از forEach در\r\n// // نمی‌توان چیزی را \"بازگردانی\" کرد در دیگری را نمی‌دانم forEach در\r\n// // میتوان از کال‌بک استفاده کرد اما در دیگری نمیشود forEach در\r\n153;\r\n// // map در forEach نحوه استفاده از\r\n// const map = new Map([\r\n//     [true, document.querySelector(\".btn142\")],\r\n//     [\"ali\", 1],\r\n// ]);\r\n// map.forEach(\r\n//     (value, key, map) =>\r\n//         console.log(\r\n//             `value: ${value}, key: ${key}, map: ${map}`\r\n//         ) /* value: [object HTMLButtonElement], key: true, map: [object Map] => خیلی دقیق نشون نمیده */\r\n// );\r\n\r\n// // نمونه مثال از خودم\r\n// const map1 = new Map([\r\n//     [true, document.querySelector(\".btn142\")],\r\n//     [\"ali\", 1],\r\n// ]);\r\n// [...map1.entries()].forEach(\r\n//     ([index, item], indexL, array) =>\r\n//         console.log(index, item, indexL, [\r\n//             ...array,\r\n//         ]) /* step1 => true <button class=​\"btn142\">​142​</button>​ 0  [Array(2), Array(2)] دقیق تر نشون میده */\r\n// );\r\n\r\n// // set در forEach نحوه استفاده از\r\n// // منحصر به فرد است set :یادآوری\r\n// // از _ برای پارامتر های بدرد نخور استفاده میکنیم\r\n// const set = new Set([\"ali\", \"bezi\", \"ali\", \"reza\", \"bezi\"]);\r\n// set.forEach((value, _, set) =>\r\n//     console.log(`${value}: ${value}`)\r\n// ); /* step1: ali: ali */\r\n155;\r\n// // Bankist پروژه\r\n// (() => {\r\n//     const obj = {\r\n//         movments: [12, -10, 300, -20],\r\n//     };\r\n//     document.body.innerHTML = \"\"; /* برای خالی کردن یک کانتینر گزینه خوبی است */\r\n\r\n//     return () => {\r\n//         obj.movments.forEach((item, index) => {\r\n//             const { type, color } =\r\n//                 item > 0\r\n//                     ? { type: \"Variz\", color: \"green\" }\r\n//                     : { type: \"Bardasht\", color: \"red\" };\r\n//             const cardMov = `\r\n//             <div style=\"background: ${color};\" class=\"${type}\">${index}.${type}: ${item}</div>\r\n//         `;\r\n//             document.body.insertAdjacentHTML(\"beforeend\", cardMov);\r\n//         });\r\n//     };\r\n// })()();\r\n156;\r\n// // تمرین برای آرایه میخواهیم سن های زیر ده سال را جدا کرده و با هم در یک آرایه ای دیگر وصل کنیم\r\n// (() => {\r\n//     const obj = {\r\n//         digikala: {\r\n//             age: [12, 2, 45],\r\n//             ageChecked: [],\r\n//             check() {\r\n//                 this.age.forEach(\r\n//                     (item) => item < 10 && this.ageChecked.push(item)\r\n//                 );\r\n//             },\r\n//         },\r\n//         torob: { age: [1, 30, 4], ageChecked: [] },\r\n//     };\r\n\r\n//     const ageFunc = obj.digikala.check;\r\n//     const newAgeCheck = [];\r\n\r\n//     Object.keys(obj).forEach((item) => {\r\n//         ageFunc.call(obj[item]);\r\n//         newAgeCheck.push(...obj[item].ageChecked);\r\n//     });\r\n\r\n//     console.log(newAgeCheck); /* [2, 1, 4] */\r\n// })();\r\n157;\r\n// // map notation in array\r\n// // برای چرخیدن روی عناصر آرایه map روش\r\n// // این امکان پذیر نیست forEach این روش در پایان یک آرایه جدید ایجاد می‌کند که در\r\n// // روش معمولی\r\n// (() => {\r\n//     const arr = [20, 30, 12, 34];\r\n//     const newArr = arr.map((price, index, arr) => {\r\n//         console.log(arr); /* آرایه اصلی را به ما می‌دهد */\r\n//         const rial = 50000;\r\n//         return (\r\n//             price * rial\r\n//         ); /* شده از کال‌بک در آرایه جدیدمان ذخیره خواهد شد return تنها بخش */\r\n//     });\r\n//     console.log(newArr); /* [1000000, 1500000, 600000, 1700000] */\r\n// })();\r\n\r\n// // روش تک خطی\r\n// (() => {\r\n//     const arr = [20, -30, 12, -34];\r\n//     const newArr = arr.map(\r\n//         (price) =>\r\n//             `movment is ${price < 0 ? \"bardash\" : \"variz\"} = ${\r\n//                 price > 0 ? price : Math.abs(price)\r\n//             }`\r\n//     ); /* شده از کال‌بک در آرایه جدیدمان ذخیره خواهد شد return تنها بخش */\r\n//     console.log(\r\n//         newArr\r\n//     ); /* ['movment is variz = 20', 'movment is bardash = 30', 'movment is variz = 12', 'movment is bardash = 34'] */\r\n// })();\r\n159;\r\n// // make up username field in Bankist project\r\n// (() => {\r\n//     const obj = {\r\n//         account1: {\r\n//             owner: \"Alireza Jodat\",\r\n//             makeUserName() {\r\n//                 this.username = this.owner\r\n//                     .toLowerCase()\r\n//                     .split(\" \")\r\n//                     .map(word => word[0])\r\n//                     .join(\"\");\r\n//             },\r\n//         },\r\n//         account2: {\r\n//             owner: \"Behzad Jannesar\",\r\n//         },\r\n//         account3: {\r\n//             owner: \"Mehran Gol\",\r\n//         },\r\n//         account4: {\r\n//             owner: \"Mohsen Jodat\",\r\n//         },\r\n//     };\r\n\r\n//     const generalFunc = obj.account1.makeUserName;\r\n//     Object.keys(obj).forEach(account => {\r\n//         generalFunc.call(obj[account]);\r\n//     });\r\n\r\n//     console.log(obj); // step3 => account3: {owner: 'Mehran Gol', username: 'mg'}\r\n// })();\r\n160;\r\n// // filter notation for array\r\n// // این روش همانند مپ برای ما آرایه جدید می‌سازد\r\n// (() => {\r\n//     const arr = [21, -43, 87, -99];\r\n//     const newArr = arr.filter((mov, i, arr) => mov < 0);\r\n//     console.log(newArr);\r\n// })();\r\n\r\n// // یکی از بهترین روش ها برای سرچ کردن در آرایه ها\r\n// // بر نمی‌گرداند undefined زیرا برخلاف مپ حالت های نادرست را\r\n// (() => {\r\n//     const arr = [\"ali reza\", \"kohfh lkhhf\", \"lkhgf vbgv\", \"ygjfb klng\"];\r\n//     const newArr = arr.filter(\r\n//         (mov, i, arr) =>\r\n//             mov.includes(\"vbgv\") || mov.toLowerCase().includes(\"vbgv\")\r\n//     );\r\n//     console.log(newArr);\r\n// })();\r\n161;\r\n// // reduce notation in array\r\n// // این روش هم برای ما یک مقدار واحد را برمی‌گرداند\r\n// // در این روش یک انباشتگر وجود دارد که مقدار در آن ذخیره خواهد شد\r\n// // در این روش می‌توان مقدار پیش فرض انباشتگر را تعین کرد\r\n// // مثالی برای جمع کل\r\n// (() => {\r\n//     const arr = [12, 23, 45];\r\n//     const result = arr.reduce((acc, curr, i, arr) => acc + curr, 10);\r\n//     console.log(result); // در اینجا مقدار پیش فرض برابر با ده است <= 90\r\n// })();\r\n\r\n// // max مثالی برای به دست آوردن\r\n// (() => {\r\n//     const arr = [-1, -12, -23, -45, -85];\r\n//     const result = arr.reduce(\r\n//         (acc, curr, i, arr) => (acc < curr ? curr : acc),\r\n//         arr[0]\r\n//     );\r\n//     console.log(result); // -1 => به دلیل اینکه اشتباه مقایسه نشه باید از اولین خانه آرایه کمک بگیریم به جای صفر\r\n// })();\r\n\r\n// // string مثالی برای جمع\r\n// (() => {\r\n//     const arr = [\"ali\", \"reza\", \"jodat\", \"1380\"];\r\n//     const result = arr.reduce((acc, cur) => acc + \" \" + cur, \"\");\r\n//     console.log(result.trim()); // \"ali reza jodat 1380\"\r\n// })();\r\n162;\r\n// // reduce, map, filter مثال کلی برای جمع بندی\r\n// (() => {\r\n//     const dogAges = [1, 6, 2, 4, 5];\r\n//     const humanAges = dogAges.map(age => (age <= 2 ? age * 2 : 16 + age * 4)); // [2, 40, 4, 32, 36]\r\n//     const filtered = humanAges.filter(humanAge => humanAge >= 18); // [40, 32, 36]\r\n//     const average =\r\n//         filtered.reduce((acc, cur, i, arr) => acc + cur, 0) / filtered.length;\r\n//     console.log(average); // 36\r\n// })();\r\n163;\r\n// // reduce, map, filter مثالی زنجیر وار از سه روش\r\n// (() => {\r\n//     const arr = [20, 45, -65, 300, -120, 80];\r\n//     const rial = arr.map(price => price * 50); // [1000, 2250, -3250, 15000, -6000, 4000]\r\n\r\n//     const variz = rial\r\n//         .filter(price => price > 0)\r\n//         .reduce((acc, price) => acc + price, 0);\r\n\r\n//     const bardasht = rial\r\n//         .filter(price => price < 0)\r\n//         .reduce((acc, price) => acc + price, 0);\r\n\r\n//     console.log(variz); // 22250\r\n//     console.log(Math.abs(bardasht)); // [-9250] => 9250\r\n//     console.log(variz + bardasht); // 13000\r\n// })();\r\n165;\r\n// // find method in array\r\n// // این متد فقط اولین مقداری که شرط ما را برآورده کند را برمی‌گرداند\r\n// // این متد کال‌بک را می‌پذیرد\r\n// // این متد شرط را هم می‌پزیرد\r\n// (() => {\r\n//     const arr = [20, 45, -65, 300, -120, 80];\r\n//     const first = arr.find(item => item < 0);\r\n//     console.log(first); // -65\r\n// })();\r\n\r\n// // یکی از کاربرد‌های خوب در این روش سرچ کردن آبجکت منحصر به فرد است\r\n// (() => {\r\n//     const arr = [\r\n//         {\r\n//             owner: \"Alireza Jodat\",\r\n//             open: 22,\r\n//         },\r\n//         {\r\n//             owner: \"Behzad Jannesar\",\r\n//             open: 12,\r\n//         },\r\n//         {\r\n//             owner: \"Mehran Gol\",\r\n//             open: 13,\r\n//         },\r\n//         {\r\n//             owner: \"Mohsen Jodat\",\r\n//             open: 11,\r\n//         },\r\n//     ];\r\n\r\n//     console.log(arr.find(account => account.owner === \"Mehran Gol\")); //{owner: 'Mehran Gol', open: 13}\r\n// })();\r\n166;\r\n// // find account and show \"login\" in console\r\n// (() => {\r\n//     const arr = [\r\n//         {\r\n//             owner: \"Alireza Jodat\",\r\n//             username: \"aj\",\r\n//             pin: 1111,\r\n//             open: 22,\r\n//         },\r\n//         {\r\n//             owner: \"Behzad Jannesar\",\r\n//             username: \"bj\",\r\n//             pin: 2222,\r\n//             open: 12,\r\n//         },\r\n//         {\r\n//             owner: \"Mehran Gol\",\r\n//             username: \"mg\",\r\n//             pin: 3333,\r\n//             open: 13,\r\n//         },\r\n//         {\r\n//             owner: \"Mohsen Jodat\",\r\n//             username: \"mj\",\r\n//             pin: 4444,\r\n//             open: 11,\r\n//         },\r\n//     ];\r\n//     const btn = document.querySelector(\".btn166\");\r\n\r\n//     btn.addEventListener(\"click\", e => {\r\n//         // initialize\r\n//         const userInput = document.querySelector(\".userInput\");\r\n//         const pinInput = document.querySelector(\".pinInput\");\r\n\r\n//         // btn submit Prevent Default\r\n//         e.preventDefault();\r\n\r\n//         // find account\r\n//         const findedAccount = arr.find(\r\n//             account => account.username === userInput.value\r\n//         );\r\n\r\n//         // check pin\r\n//         findedAccount?.pin === Number(pinInput.value)\r\n//             ? console.log(`Welcome back, ${findedAccount.owner.split(\" \")[0]}`)\r\n//             : console.log(\"in correct username or pin\");\r\n\r\n//         // second way\r\n//         arr.find(account => account.username === userInput.value)?.pin ===\r\n//         Number(pinInput.value)\r\n//             ? console.log(`Welcome back, ${findedAccount.owner.split(\" \")[0]}`)\r\n//             : console.log(\"in correct username or pin\");\r\n\r\n//         // blur and clear inputs\r\n//         userInput.value = pinInput.value = \"\";\r\n//         userInput.blur();\r\n//         pinInput.blur();\r\n//     });\r\n// })();\r\n167;\r\n// // transfer money\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [\r\n//         {\r\n//             owner: \"Alireza Jodat\",\r\n//             username: \"aj\",\r\n//             movments: [34, -45],\r\n//         },\r\n//         {\r\n//             owner: \"Behzad Jannesar\",\r\n//             username: \"bj\",\r\n//             movments: [-1, 7],\r\n//         },\r\n//         {\r\n//             owner: \"Mehran Gol\",\r\n//             username: \"mg\",\r\n//             movments: [9, -76],\r\n//         },\r\n//         {\r\n//             owner: \"Mohsen Jodat\",\r\n//             username: \"mj\",\r\n//             movments: [-67, -7],\r\n//         },\r\n//     ];\r\n//     const btn = document.querySelector(\".btn167\");\r\n\r\n//     // transfer money event\r\n//     btn.addEventListener(\"click\", e => {\r\n//         // initializa\r\n//         const toInput = document.querySelector(\".toInput\");\r\n//         const amountInput = document.querySelector(\".amountInput\");\r\n\r\n//         // btn submit prevent default\r\n//         e.preventDefault();\r\n\r\n//         // find account\r\n//         const findedAccount = arr.find(\r\n//             account => account.username === toInput.value\r\n//         );\r\n\r\n//         // transfer amount\r\n//         findedAccount?.movments.push(Number(amountInput.value));\r\n\r\n//         // show in console\r\n//         console.log(findedAccount); // movments: (3) [-67, -7, new Amount]\r\n\r\n//         // blur and clear inputs\r\n//         toInput.value = amountInput.value = \"\";\r\n//         toInput.blur();\r\n//         amountInput.blur();\r\n//     });\r\n// })();\r\n168;\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [\r\n//         {\r\n//             owner: \"Alireza Jodat\",\r\n//             username: \"aj\",\r\n//             movments: [34, -45],\r\n//         },\r\n//         {\r\n//             owner: \"Behzad Jannesar\",\r\n//             username: \"bj\",\r\n//             movments: [-1, 7],\r\n//         },\r\n//         {\r\n//             owner: \"Mehran Gol\",\r\n//             username: \"mg\",\r\n//             movments: [9, -76],\r\n//         },\r\n//         {\r\n//             owner: \"Mohsen Jodat\",\r\n//             username: \"mj\",\r\n//             movments: [-67, -7],\r\n//         },\r\n//     ];\r\n\r\n//     // find index account\r\n//     const indexAccount = arr.findIndex(account => account.username === \"mj\");\r\n\r\n//     // remove account\r\n//     console.log(arr.splice(indexAccount, 1)); // {owner: 'Mohsen Jodat', username: 'mj', movments: Array(2)} به اندازه یک عنصر حذف می‌کنیم\r\n\r\n//     // show original array\r\n//     console.log(arr); // آیتم دارای ایندکس سوم حذف شده است\r\n// })();\r\n169;\r\n// // some method\r\n// // این متد اگر شرط درست باشد درست برمی‌گرداند و به تعداد درست بودن توجهی ندارد\r\n// // فرق دارد includes این روش کمی با متد\r\n// // فقط از روش برابری استفاده می‌کند includes متد\r\n// // شرط ها را نیز می‌پذیرد some اما متد\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [2, 32, 4354, 5453, 34];\r\n\r\n//     // some method\r\n//     console.log(arr.some(item => item > 4000)); // true => 5453\r\n\r\n//     // includes method\r\n//     console.log(arr.includes(4354)); // true\r\n// })();\r\n\r\n// // Every method\r\n// // این روش تنها در صورتی درست است که تمامی عناصر آرایه شرط را برآورده سازند\r\n// // این روش هم همانند سایر روش ها کال‌بک دریافت می‌کند\r\n// // مثال یک\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [2, 32, 4354, 5453, 34];\r\n\r\n//     // Every method\r\n//     console.log(arr.every(item => item > 0)); // true\r\n// })();\r\n\r\n// // مثال دو\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [2, 32, 4354, 5453, 34];\r\n\r\n//     // Every method\r\n//     console.log(arr.every(item => item > 32)); // false\r\n// })();\r\n\r\n// // کال‌بک جداگانه روش‌هایی که شرط را می‌پذیرند\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [2, 32, 4354, 5453, 34];\r\n//     const movments = mov => mov > 32;\r\n\r\n//     // call\r\n//     console.log(arr.some(movments));\r\n//     console.log(arr.every(movments));\r\n//     console.log(arr.filter(movments));\r\n// })();\r\n170;\r\n// // flat and flat map method\r\n// // هیچ کال‌بکی را نمی‌پذیرد flat متد\r\n// // این متد برای زمانی‌ست که آرایه های تو در تو داریم و میخواهیم آنها را یکدست کنیم\r\n// // مثال یک\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [[12], 22, [7, 0]];\r\n\r\n//     // flat method\r\n//     console.log(arr.flat()); // [12, 22, 7, 0]\r\n// })();\r\n\r\n// // مثال دو\r\n// // همچنین می‌توان برای این متد عمق هم در نظر گرفت\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [[12, [23, 78]], 22, [7, 0]];\r\n\r\n//     // flat method\r\n//     console.log(arr.flat(1)); // [12, Array(2), 22, 7, 0]\r\n//     console.log(arr.flat(2)); // [12, 23, 78, 22, 7, 0]\r\n// })();\r\n\r\n// // مثال کاربردی برای این متد جمع تمامی گردش حساب ها\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [\r\n//         {\r\n//             movments: [34, -45],\r\n//         },\r\n//         {\r\n//             movments: [-1, 7],\r\n//         },\r\n//         {\r\n//             movments: [9, -76],\r\n//         },\r\n//         {\r\n//             movments: [-67, -7],\r\n//         },\r\n//     ];\r\n\r\n//     // add movments\r\n//     console.log(\r\n//         arr\r\n//             .map(acc => acc.movments)\r\n//             .flat()\r\n//             .reduce((acc, curr) => acc + curr, 0)\r\n//     ); // -146\r\n// })();\r\n\r\n// // flat map method\r\n// // این روش ترکیبی از روش مپ و فلت است\r\n// // اما تنها در صورتی کار می‌کند که قرار باشد یک لایه از عمق یک آرایه را صاف کند و سپس روی آن بچرخد\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [\r\n//         {\r\n//             movments: [34, -45],\r\n//         },\r\n//         {\r\n//             movments: [-1, 7],\r\n//         },\r\n//         {\r\n//             movments: [9, -76],\r\n//         },\r\n//         {\r\n//             movments: [-67, -7],\r\n//         },\r\n//     ];\r\n\r\n//     // add movments and show result in console\r\n//     const flatArray = arr.flatMap(acc => acc.movments);\r\n//     console.log(flatArray); // [34, -45, -1, 7, 9, -76, -67, -7]\r\n//     console.log(flatArray.reduce((acc, curr) => acc + curr, 0)); // -146\r\n\r\n//     // shortand way\r\n//     console.log(\r\n//         arr.flatMap(acc => acc.movments).reduce((acc, curr) => acc + curr, 0)\r\n//     ); // -146\r\n// })();\r\n171;\r\n// // sort method in array\r\n// // این روش برای مرتب سازی عناصر آرایه به کار می‌رود\r\n// // اما باید حواسمان باشد که این متد آرایه اصلی را تغییر می‌دهد\r\n// // مثالی برای مرتب سازی رشته‌ها\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [\"ali\", \"mohsen\", \"mehran\", \"bezi\"];\r\n\r\n//     // sort method\r\n//     console.log(arr.sort()); // ['ali', 'bezi', 'mehran', 'mohsen'] => A,B,C,D,...\r\n//     console.log(arr); // ['ali', 'bezi', 'mehran', 'mohsen'] => مقایسه با آرایه اصلی\r\n// })();\r\n\r\n// // مثالی برای مرتب سازی صعودی اعداد\r\n// // در این روش اگر عنصر فعلی از بعدی بزرگتر باشد باید یک برگردد و یک به معنای انجام تغییر است\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [12, 2, -20, 87, 12, -1, 33];\r\n\r\n//     // sort method\r\n//     console.log(arr.sort((current, next) => (current > next ? 1 : -1))); // [-20, -1, 2, 12, 12, 33, 87]\r\n//     console.log(arr); // [-20, -1, 2, 12, 12, 33, 87] => مقایسه با آرایه اصلی\r\n\r\n//     // shortand way\r\n//     // initialize\r\n//     const arr2 = [12, 2, -20, 87, 12, -1, 33];\r\n\r\n//     // sort method\r\n//     console.log(arr2.sort((current, next) => current - next)); // [-20, -1, 2, 12, 12, 33, 87]\r\n//     console.log(arr2); // [-20, -1, 2, 12, 12, 33, 87] => مقایسه با آرایه اصلی\r\n// })();\r\n\r\n// // مثالی برای مرتب سازی نزولی اعداد\r\n// // در این روش اگر عنصر فعلی از عنصر بعدی کوچکتر باشد باید یک برگردد که یک به معنای ایجاد تغییر است\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [12, 2, -20, 87, 12, -1, 33];\r\n\r\n//     // sort method\r\n//     console.log(arr.sort((current, next) => (current < next ? 1 : -1))); // [87, 33, 12, 12, 2, -1, -20]\r\n//     console.log(arr); // [87, 33, 12, 12, 2, -1, -20] => مقایسه با آرایه اصلی\r\n\r\n//     // shortand way\r\n//     // initialize\r\n//     const arr2 = [12, 2, -20, 87, 12, -1, 33];\r\n\r\n//     // sort method\r\n//     console.log(arr2.sort((current, next) => next - current)); // [87, 33, 12, 12, 2, -1, -20]\r\n//     console.log(arr2); // [87, 33, 12, 12, 2, -1, -20] => مقایسه با آرایه اصلی\r\n// })();\r\n\r\n// // مثالی برای بهم ریختن ترتیب عناصر آرایه\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [2, 12, 33, 87];\r\n\r\n//     // sort method\r\n//     console.log(arr.sort(() => Math.random() - Math.random())); // [87, 2, 12, 33]\r\n//     console.log(arr); // [87, 2, 12, 33] => مقایسه با آرایه اصلی\r\n// })();\r\n\r\n// // مثالی برای مرتب سازی و برگرداندن به حالت اصلی\r\n// // فقط باید حواسمان باشد که از آرایه اصلی کپی بگیریم\r\n// (() => {\r\n//     // initialize\r\n//     const arr = [0, -1, 4, 6, 2, -2, 30];\r\n//     const btn = document.querySelector(\".btn171\");\r\n//     let sort = false;\r\n\r\n//     // event sort btn\r\n//     btn.addEventListener(\"click\", () => {\r\n//         // show result\r\n//         console.log(\r\n//             !sort\r\n//                 ? `${arr\r\n//                       .slice()\r\n//                       .sort((current, next) => next - current)} : Original`\r\n//                 : `${arr} : Sorted`\r\n//         );\r\n\r\n//         // replace new sort\r\n//         sort = !sort;\r\n//     });\r\n// })();\r\n172;\r\n// // fill method\r\n// // روشی برای ایجاد آرایه ها به صورت برنامه‌ای\r\n// // با این متد میتوان خانه های خالی آرایه را پر کرد\r\n// // این روش آرایه اصلی را نیز تغییر میدهد\r\n// // این روش آرایه‌های از قبل پر شده را نیز میتواند تغییر دهد\r\n// (() => {\r\n//     // old way\r\n//     console.log([1, 2]); // [1, 2]\r\n//     console.log(new Array(1, 2)); // [1, 2]\r\n\r\n//     // new way\r\n//     const arr = new Array(4);\r\n//     console.log(arr); // [empty × 4] => نشان دهنده چهار عنصر خالی است\r\n//     arr.fill(\"ali\", 3);\r\n//     console.log(arr); // [empty × 3, 'ali']\r\n//     arr.fill(\"reza\", 0, 1);\r\n//     console.log(arr); // ['reza', empty × 2, 'ali']\r\n//     arr.fill(\"bezi\", 0);\r\n//     console.log(arr); // ['bezi', 'bezi', 'bezi', 'bezi']\r\n\r\n//     // array pre-loaded\r\n//     const arr2 = [1, 2, 3, 4, 5, 6];\r\n//     console.log(arr2.fill(\"ali\", 0, 1)); // ['ali', 2, 3, 4, 5, 6]\r\n// })();\r\n\r\n// // from method in array\r\n// // در این روش هم میتوان آرایه ایجاد و سپس آن پر کرد\r\n// // در این روش میتوان تعداد خانه‌های آرایه و همچنین مقداری که قرار است در آن قرار گیرد را مشخص کرد\r\n// (() => {\r\n//     console.log(Array.from({ length: 4 }, (_, index) => 1)); // [1, 1, 1, 1]\r\n//     console.log(Array.from({ length: 4 }, (_, index) => ++index)); // [1, 2, 3, 4]\r\n// })();\r\n\r\n// // مثال برای قرار دادن مقدار صد تاس تصادفی در یک آرایه\r\n// (() => {\r\n//     console.log(\r\n//         Array.from({ length: 100 }, () => Math.trunc(Math.random() * 6 + 1))\r\n//     ); // [3, 5, 6, 5, 4,....]\r\n// })();\r\n\r\n// // from به یک آرایه معمولی با استفاده از متد node list مثالی برای تبدیل\r\n// // زد map نمی‌توان node list زیرا در حالت اصلی روی\r\n// // دارد می‌توان مستقیما روی عناصر تغییرات را اعمال کرد from و از طریق کال‌بکی که متد\r\n// (() => {\r\n//     console.log(\r\n//         Array.from(\r\n//             document.querySelectorAll(\".span__172\"),\r\n//             (el, index) => (el.textContent = `span ${index}`)\r\n//         )\r\n//     );\r\n// })();\r\n\r\n// // به آرایه معمولی node list استفاده از اسپیرید برای تبدیل\r\n// (() => {\r\n//     const nodeArray = [...document.querySelectorAll(\".span__172\")];\r\n//     console.log(nodeArray); // [span.span__172, span.span__172]\r\n\r\n//     // shortand way\r\n//     console.log([...document.querySelectorAll(\".span__172\")]); // [span.span__172, span.span__172]\r\n// })();\r\n174;\r\n// // جمع بندی برای تمامی متد‌های آرایه\r\n// (() => {\r\n//     const array = [\r\n//         {\r\n//             owner: \"Alireza Jodat\",\r\n//             username: \"aj\",\r\n//             movments: [34, -45],\r\n//         },\r\n//         {\r\n//             owner: \"Behzad Jannesar\",\r\n//             username: \"bj\",\r\n//             movments: [-1, 7],\r\n//         },\r\n//         {\r\n//             owner: \"Mehran Gol\",\r\n//             username: \"mg\",\r\n//             movments: [9, -76],\r\n//         },\r\n//         {\r\n//             owner: \"Mohsen Jodat\",\r\n//             username: \"mj\",\r\n//             movments: [-67, -7],\r\n//         },\r\n//     ];\r\n\r\n//     // جمع تمامی واریزی‌های بانک\r\n//     (() =>\r\n//         console.log(\r\n//             array\r\n//                 .flatMap(account => account.movments)\r\n//                 .filter(movment => movment > 0)\r\n//                 .reduce((acc, curr) => acc + curr, 0)\r\n//         ))(); // 50\r\n\r\n//     // چند نفر می‌توانند پنج دلار وام بگیرند\r\n//     (() => {\r\n//         // با روش فیلتر\r\n//         console.log(\r\n//             array\r\n//                 .map(acc => acc.movments.reduce((acc, curr) => acc + curr, 0))\r\n//                 .filter(ball => ball > 5).length\r\n//         ); // تنها یک نفر می‌تواند وام بگیرد\r\n\r\n//         // reduce با روش\r\n//         console.log(\r\n//             array\r\n//                 .map(acc => acc.movments.reduce((acc, curr) => acc + curr, 0))\r\n//                 .reduce((acc, curr) => (curr > 5 ? ++acc : acc), 0)\r\n//         ); // تنها یک نفر می‌تواند وام بگیرد\r\n//     })();\r\n\r\n//     // جمع تمامی واریز‌ها و برداشت‌ها را به صورت جداگانه در یک شیء قرار دهید\r\n//     (() => {\r\n//         // روش اول\r\n//         const { variz, bardasht } = array\r\n//             .flatMap(acc => acc.movments)\r\n//             .reduce(\r\n//                 (sums, curr) => {\r\n//                     curr > 0 ? (sums.variz += curr) : (sums.bardasht += curr);\r\n//                     return sums;\r\n//                 },\r\n//                 {\r\n//                     variz: 0,\r\n//                     bardasht: 0,\r\n//                 }\r\n//             );\r\n//         console.log(variz, bardasht); // 50 -196\r\n\r\n//         // (خلاصه) روش دوم\r\n//         (() => {\r\n//             // initialize\r\n//             const { variz, bardasht } = array\r\n//                 .flatMap(account => account.movments)\r\n//                 .reduce(\r\n//                     (accumulator, current) => {\r\n//                         accumulator[current > 0 ? \"variz\" : \"bardasht\"] +=\r\n//                             current;\r\n//                         return accumulator;\r\n//                     },\r\n//                     { variz: 0, bardasht: 0 }\r\n//                 );\r\n\r\n//             // show result\r\n//             console.log(variz, bardasht); // 50 -196\r\n//         })();\r\n//     })();\r\n\r\n//     // جمع واریزی‌ها و برداشت‌ها را به صورت جداگانه در آرایه ذخیره کنید\r\n//     (() => {\r\n//         // initialize\r\n//         const [variz, bardash] = array\r\n//             .flatMap(acc => acc.movments)\r\n//             .reduce(\r\n//                 (acc, curr) => {\r\n//                     acc[curr > 0 ? 0 : 1] += curr;\r\n//                     return acc;\r\n//                 },\r\n//                 [0, 0]\r\n//             );\r\n\r\n//         // show result\r\n//         console.log(variz, bardash); // 50 -196\r\n//     })();\r\n// })();\r\n\r\n// // مثال برای رشته‌ها\r\n// (() => {\r\n//     // initialize\r\n//     const expections = [\"a\", \"an\", \"but\", \"or\", \"am\", \"dont\"];\r\n\r\n//     // Change String function\r\n//     // first way\r\n//     const changeStr = str =>\r\n//         str\r\n//             .trim()\r\n//             .toLowerCase()\r\n//             .split(\" \")\r\n//             .reduce((acc, curr, index) => {\r\n//                 acc[index] = expections.some(exp => exp === curr)\r\n//                     ? curr\r\n//                     : curr.replace(curr[0], curr[0].toUpperCase());\r\n//                 return acc;\r\n//             }, [])\r\n//             .join(\" \");\r\n\r\n//     // shortand way\r\n//     const changeStr1 = str =>\r\n//         str\r\n//             .trim()\r\n//             .toLowerCase()\r\n//             .split(\" \")\r\n//             .map(curr =>\r\n//                 expections.some(exp => exp === curr)\r\n//                     ? curr\r\n//                     : curr.replace(curr[0], curr[0].toUpperCase())\r\n//             )\r\n//             .join(\" \");\r\n\r\n//     // call function\r\n//     console.log(changeStr1(\"   i am ALIREZA\")); // I am Alireza\r\n//     console.log(changeStr1(\"but i DONT     \")); // but I dont\r\n//     console.log(changeStr1(\"   this is a BOOK \")); // This Is a Book\r\n// })();\r\n175;\r\n// // اخرین تمرین برای بخش آرایه\r\n\r\n// // fetch data\r\n// fetch(\"http://localhost:8000/dog\")\r\n//     .then(res => res.json())\r\n//     .then(data => dogFunc(data));\r\n\r\n// function dogFunc(data) {\r\n//     // 1\r\n//     (() => {\r\n//         // recommended Food function\r\n//         data.forEach(\r\n//             dog => (dog.recommended = Math.trunc(dog.weight ** 0.75 * 28))\r\n//         );\r\n\r\n//         // show result\r\n//         console.log(data);\r\n//     })();\r\n\r\n//     // 2\r\n//     (() => {\r\n//         // find sarah dog\r\n//         console.log(\"---- 2 ----\");\r\n//         console.log(data.find(dog => dog.owners.includes(\"Sarah\"))); //عنصر را در داخل آرایه برمی‌گرداند filter برای ما خود عنصر را برمی‌گرداند اما متد find متد\r\n//     })();\r\n\r\n//     // 3\r\n//     (() => {\r\n//         data.forEach(\r\n//             dog =>\r\n//                 (dog[dog.curFood > dog.recommended ? \"ziadKhor\" : \"kamKhor\"] =\r\n//                     dog.owners)\r\n//         );\r\n\r\n//         // create array\r\n//         let ziadArr = [];\r\n//         let kamArr = [];\r\n//         data.forEach(dog =>\r\n//             dog?.ziadKhor\r\n//                 ? ziadArr.push(dog.ziadKhor)\r\n//                 : kamArr.push(dog.kamKhor)\r\n//         );\r\n\r\n//         // show result\r\n//         console.log(\"---- 3 ----\");\r\n//         console.log(`${ziadArr.flat().join(\" and \")} : ziad khor`); // Matilda and Sarah and John : ziad khor\r\n//         console.log(`${kamArr.flat().join(\" and \")}  : kam khor`); // Alice and Bob and Michael  : kam khor\r\n//     })();\r\n\r\n//     // 4\r\n//     (() => {\r\n//         // show result\r\n//         console.log(\"---- 4 ----\");\r\n//         console.log(\r\n//             `${data\r\n//                 .filter(\r\n//                     ({ curFood, recommended }) =>\r\n//                         curFood > recommended * 0.9 &&\r\n//                         curFood < recommended * 1.1\r\n//                 )\r\n//                 .flatMap(({ owners }) => owners)\r\n//                 .join(\" and \")} : sagesh be andazeh mikhorad`\r\n//         );\r\n//     })();\r\n\r\n//     // 8\r\n//     (() => {\r\n//         // initialize\r\n//         const result = data\r\n//             .slice()\r\n//             .sort(\r\n//                 ({ recommended: currRec }, { recommended: nextRec }) =>\r\n//                     currRec - nextRec\r\n//             );\r\n\r\n//         // show result\r\n//         console.log(result);\r\n//     })();\r\n// }\r\n178;\r\n// // آشنایی با اعداد\r\n// (() => {\r\n//     console.log(0.1 + 0.2 === 0.3); // 0.30000000000000004 != 0.3 => false\r\n// })();\r\n\r\n// // برای تبدیل رشته به عدد\r\n// (() => {\r\n//     console.log(Number(\"23\")); // typeOf => number\r\n//     console.log(+\"23\"); // typeOf => number - علامت بعلاوه باعث می‌شود تبدیل به عدد شود\r\n// })();\r\n\r\n// // method pars\r\n// // این متد برای تجزیه عدد از داخل یک رشته به کار می‌رود\r\n// // این متد پارامتر دوم هم می‌گرد که به عنوان مبنای اعداد است\r\n// // البته تمام این متد‌ها را می‌توان به صورت تکی صدا زد\r\n// (() => {\r\n//     // parse int\r\n//     console.log(\"---- parse int ----\");\r\n//     console.log(Number.parseInt(\"44px\")); // 44\r\n//     console.log(Number.parseInt(\"ali44\")); // NaN\r\n\r\n//     // with parametr\r\n//     console.log(Number.parseInt(\"30px\", 10)); // 30\r\n//     console.log(Number.parseInt(\"30px\", 2)); // NaN\r\n//     console.log(Number.parseInt(30, 2)); // NaN\r\n\r\n//     // parse float\r\n//     console.log(\"---- parse float ----\");\r\n//     console.log(Number.parseInt(\" 1.2px  \")); // 1 => parseInt\r\n//     console.log(Number.parseFloat(\" 1.2px  \")); // 1.2 => parseFloat\r\n\r\n//     // modern and best\r\n//     console.log(\"---- modern way ----\");\r\n//     console.log(parseFloat(\"234.3vw\")); // 234.3\r\n//     console.log(parseInt(\"122.9vh\")); // 122\r\n\r\n//     // isNaN\r\n//     // هست یا نه NaN این متد بررسی می‌کند که از تایپ\r\n//     console.log(\"---- isNaN ----\");\r\n//     console.log(isNaN(23)); // false\r\n//     console.log(isNaN(\"23\")); // false\r\n//     console.log(isNaN(+\"23\")); // false\r\n//     console.log(isNaN(+\"23X\")); // true\r\n//     console.log(isNaN(2 / 0)); // false => infinity\r\n\r\n//     // isFinite method\r\n//     // این متد برای این است که مشخص کند عدد متناهی است یا خیر و همچنین اینکه عدد است یا نه\r\n//     console.log(\"---- isFinite ----\");\r\n//     console.log(isFinite(23)); // true\r\n//     console.log(isFinite(\"23\")); // true\r\n//     console.log(isFinite(+\"23\")); // true\r\n//     console.log(isFinite(+\"23X\")); // false\r\n//     console.log(isFinite(12 / 0)); // false => because infinity\r\n\r\n//     // isInteger method\r\n//     console.log(\"---- isInteger ----\");\r\n//     console.log(Number.isInteger(23)); // true\r\n//     console.log(Number.isInteger(23.0)); // true\r\n//     console.log(Number.isInteger(\"23.0\")); // false\r\n//     console.log(Number.isInteger(23 / 0)); // false => infinity\r\n// })();\r\n179;\r\n// // numbers method\r\n// // sqrt method\r\n// // جذر دوم اعداد\r\n// (() => {\r\n//     console.log(\"---- sqrt ----\");\r\n//     console.log(Math.sqrt(25)); // 5\r\n\r\n//     // استفاده از عملگر توان برای جذر گرفتن\r\n//     console.log(8 ** (1 / 3)); // 2 => جذر سوم\r\n// })();\r\n\r\n// // min and max method\r\n// (() => {\r\n//     // max\r\n//     console.log(\"---- min and max ----\");\r\n//     console.log(Math.max(24, 5, 30)); // 30\r\n//     console.log(Math.max(24, 5, \"30\")); // 30\r\n//     console.log(Math.max(24, 5, \"30px\")); // NaN\r\n\r\n//     // min\r\n//     console.log(Math.min(24, 5, \"30\")); // 5\r\n//     console.log(Math.min(24, 5, 30)); // 5\r\n//     console.log(Math.min(24, 5, \"30px\")); // NaN\r\n// })();\r\n\r\n// // PI method\r\n// (() => {\r\n//     console.log(\"---- PI ----\");\r\n//     console.log(Math.PI); // 3.141592653589793\r\n\r\n//     // محاسبه مساحت دایره\r\n//     console.log(Math.PI * parseFloat(\"2.23rem\") ** 2); // 15.622826107036682\r\n// })();\r\n\r\n// // random numbers\r\n// (() => {\r\n//     console.log(\"---- random ----\");\r\n//     console.log(Math.trunc(Math.random() * 6 + 1)); // برای حذف کردن بخش اعشاری trunc کلمه\r\n\r\n//     // نوشتن فرمول برای اعداد تصادفی\r\n//     const randomFunc = (min, max) =>\r\n//         Math.floor(Math.random() * (max - min) + 1) + min;\r\n//     randomFunc(2, 9); // 3...9\r\n\r\n//     // هم باشد min اگه خواستی خود\r\n//     const randomFunc1 = (min, max) =>\r\n//         Math.floor(Math.random() * (max - min)) + min;\r\n//     randomFunc1(2, 9); // 2...9\r\n// })();\r\n\r\n// // rounding integers\r\n// (() => {\r\n//     console.log(\"---- round ----\");\r\n//     console.log(Math.round(2.6)); // 3\r\n//     console.log(Math.round(2.5)); // 3\r\n//     console.log(Math.round(2.1)); // 2\r\n// })();\r\n\r\n// // ceil integers\r\n// (() => {\r\n//     console.log(\"---- ceil ----\");\r\n//     console.log(Math.ceil(2.6)); // 3\r\n//     console.log(Math.ceil(2.1)); // 3\r\n// })();\r\n\r\n// // floor integers\r\n// (() => {\r\n//     console.log(\"---- floor ----\");\r\n//     console.log(Math.floor(2.6)); // 2\r\n//     console.log(Math.floor(2.1)); // 2\r\n// })();\r\n\r\n// // floor و trunc تفاوت\r\n// // این دو روش فقط در اعداد مثبت یکی عمل می‌کنند\r\n// (() => {\r\n//     console.log(\"---- floor and trunc ----\");\r\n//     console.log(Math.floor(-2.6)); // -3\r\n//     console.log(Math.trunc(-2.6)); // -2\r\n// })();\r\n\r\n// // toFixed متد\r\n// // برای گرد کردن اعداد و تبدیل به چند رقم اعشار\r\n// // ولی مشکل این است که به ما رشته برمی‌گرداند\r\n// (() => {\r\n//     console.log(\"---- to fixed ----\");\r\n//     console.log((27.45).toFixed(0)); // 27 => typeOf = string\r\n//     console.log((27.55).toFixed(0)); // 28 => typeOf = string\r\n//     console.log((2.764).toFixed(4)); // 2.7640 => typeOf = string\r\n//     console.log(+(2.764).toFixed(2)); // 2.76 => typeOf = number\r\n// })();\r\n180;\r\n// // % عملگر باقیمانده\r\n// (() => {\r\n//     console.log(8 % 3); // 2\r\n// })();\r\n\r\n// // تابعی برای تشخیص زوج یا فرد بودن\r\n// (() => {\r\n//     const check = num => (num % 2 === 0 ? \"Even\" : \"Odd\");\r\n//     console.log(check(3)); // Odd\r\n// })();\r\n\r\n// // DOM مثالی برای این عملگر برای دستکاری در عناصر\r\n// (() => {\r\n//     Array.from(\r\n//         document.querySelectorAll(\".span__180\"),\r\n//         (el, index) => index % 2 === 0 && (el.style.background = \"white\")\r\n//     );\r\n// })();\r\n181;\r\n// // seprator numeric\r\n// // جدا کننده‌های عددی\r\n// (() => {\r\n//     console.log(23_00); // 2300\r\n\r\n//     // همچین اعدادی دریافت می‌کنیم Api در حالت هایی که از\r\n//     console.log(Number(\"23_00\")); // NaN\r\n//     console.log(parseInt(\"23_01\")); // 23\r\n//     console.log(parseFloat(\"23,01\")); // 23\r\n// })();\r\n182;\r\n// // bigInt method\r\n// (() => {\r\n//     // بزرگ ترین عدد در حالت عادی\r\n//     console.log(Number.MAX_SAFE_INTEGER); // 9007199254740991\r\n\r\n//     // bigInt\r\n//     console.log(BigInt(23)); // 23n\r\n//     console.log(234444444444444444444444n); // 234444444444444444444444n\r\n\r\n//     // انجام عملیات بر روی این اعداد\r\n//     console.log(2n + 3n); // 5n\r\n//     console.log(2n * BigInt(34)); // 68n\r\n//     console.log(20n > 15); // true\r\n//     console.log(20n === 20); // false => bigInt != number\r\n//     console.log(20n == 20); // true\r\n//     console.log(20n == \"20\"); // true\r\n\r\n//     // تقسیم کردن\r\n//     // در این عمل بخش اعشاری حذف می‌گردد\r\n//     console.log(21n / 2n); // 10n\r\n// })();\r\n183;\r\n// // create a Date\r\n// // اگر به صورت خالی کال شود زمان همان لحظه را نشان می‌دهد\r\n// (() => {\r\n//     console.log(new Date()); // Sat Feb 03 2024 09:31:55 GMT+0330 (Iran Standard Time)\r\n\r\n//     // ما میتوانیم با دادن تاریخ به اطلاعات کامل آن دست پیدا کنیم\r\n//     console.log(new Date(\"dec 6, 2024\")); // Fri Dec 06 2024 00:00:00 GMT+0330 (Iran Standard Time)\r\n//     console.log(new Date(\"aug 6, 2020 18:00:00\")); // Thu Aug 06 2020 18:00:00 GMT+0430 (Iran Daylight Time)\r\n//     console.log(new Date(2023, 3, 4, 22, 1, 4)); // Tue Apr 04 2023 22:01:04 GMT+0330 (Iran Standard Time)\r\n//     console.log(new Date(2023, 3, 4, 32)); // Wed Apr 05 2023 08:00:00 GMT+0330 (Iran Standard Time)\r\n\r\n//     // زمان یونیکس\r\n//     // و می‌توانیم به آن حتی ثاتیه بدهیم تاریخ آن روز بعد از آن ثانیه رو به ما می‌دهد\r\n//     console.log(new Date(0)); // Thu Jan 01 1970 03:30:00 GMT+0330 (Iran Standard Time)\r\n//     console.log(new Date(12 * 24 * 60 * 60 * 1000)); // Tue Jan 13 1970 03:30:00 GMT+0330 (Iran Standard Time)\r\n// })();\r\n\r\n// // Date method\r\n// (() => {\r\n//     // initialize\r\n//     const date = new Date(2037, 1, 30);\r\n//     console.log(date); // Mon Mar 02 2037 00:00:00 GMT+0330 (Iran Standard Time)\r\n\r\n//     // get method\r\n\r\n//     // getYear\r\n//     // تعداد سال گذشتن از سال یونیکس است\r\n//     console.log(date.getYear()); // 137\r\n\r\n//     // getFullYear\r\n//     // تعداد سال گذشتن از سال یونیکس است\r\n//     console.log(date.getFullYear()); // 2037\r\n\r\n//     // getMounth\r\n//     console.log(date.getMonth()); // 2\r\n\r\n//     // getDate\r\n//     // برای شماره روز است در ماه است\r\n//     console.log(date.getDate()); // 2\r\n\r\n//     // getDay\r\n//     // برای شماره روز در هفته است\r\n//     // sunday === 0\r\n//     console.log(date.getDay()); // 1\r\n\r\n//     // getHours\r\n//     console.log(date.getHours()); // 0\r\n\r\n//     // getMinutes\r\n//     console.log(date.getMinutes()); // 0\r\n\r\n//     // getSeconds\r\n//     console.log(date.getSeconds()); // 0\r\n\r\n//     // toISOString\r\n//     // برای نمایش تاریخ به شکل استاندارد جهانی است\r\n//     console.log(date.toISOString()); // 2037-03-01T20:30:00.000Z\r\n\r\n//     // getTime\r\n//     // تایم را با واحد میلی ثانیه از زمان یونیکس به ما می‌دهد\r\n//     console.log(date.getTime()); // 2119552200000\r\n//     console.log(new Date(2119552200000)); // Mon Mar 02 2037 00:00:00 GMT+0330 (Iran Standard Time)\r\n\r\n//     // Date.now()\r\n//     // تایم الان را به واحد میلی ثانیه می‌دهد\r\n//     console.log(Date.now()); // 1706944754875\r\n\r\n//     // set method\r\n//     // نیز وجود دارد set برای get تمام متد‌های\r\n//     // این روش تاریخ داخل متغیر را عوض می‌کند\r\n//     date.setFullYear(2000);\r\n//     console.log(date.getFullYear()); // 2000\r\n// })();\r\n184;\r\n// // تمرین برای فرمت کردن تاریخ به میلادی\r\n// (() => {\r\n//     const date = new Date(\"2024-02-03T08:27:49.661Z\");\r\n\r\n//     const day = `${date.getDate()}`.padStart(2, 0);\r\n//     const month = `${date.getMonth() + 1}`.padStart(2, 0);\r\n//     const year = date.getFullYear();\r\n//     const hour = date.getHours();\r\n//     const minute = date.getMinutes();\r\n\r\n//     console.log(`As of ${day}/${month}/${year}, ${hour}:${minute}`);\r\n// })();\r\n185;\r\n// // کم کردن دو تاریخ از یکدیگر\r\n// (() => {\r\n//     // روش خلاصه تر\r\n//     // const storyDate = +new Date(\r\n//     //     new Date(new Date(new Date().setHours(6)).setMinutes(0)).setSeconds(0)\r\n//     // );\r\n\r\n//     // روش قابل فهم\r\n//     const morning = new Date();\r\n//     const setD = new Date(morning.setDate(11));\r\n//     const setH = new Date(setD.setHours(0));\r\n//     const setM = new Date(setH.setMinutes(0));\r\n//     const storyDate = +new Date(setM.setSeconds(0));\r\n//     const now = +new Date();\r\n//     const result = Math.trunc(Math.abs((storyDate - now) / 1000));\r\n\r\n//     const minuteR = Math.trunc(result / 60);\r\n//     const hourR = Math.trunc(result / (60 * 60));\r\n//     const dayR = Math.trunc(result / (60 * 60 * 24));\r\n//     const weekR = Math.trunc(result / (60 * 60 * 24 * 7));\r\n\r\n//     console.log(\r\n//         (minuteR < 60 && `${minuteR}m`) ||\r\n//             (hourR < 24 && `${hourR}h`) ||\r\n//             (dayR < 7 && `${dayR}d`) ||\r\n//             (weekR < 4 && `${weekR}w`)\r\n//     );\r\n// })();\r\n186;\r\n// // بین المللی کردن تاریخ و ساعت\r\n// (() => {\r\n//     const now = new Date();\r\n//     const dateOption = {\r\n//         hour: \"numeric\",\r\n//         minute: \"numeric\",\r\n//         day: \"numeric\",\r\n//         year: \"numeric\",\r\n//     };\r\n\r\n//     console.log(\r\n//         new Intl.DateTimeFormat(\"fa-IR\", {\r\n//             ...dateOption,\r\n//             month: \"numeric\",\r\n//         }).format(now)\r\n//     ); // ۱۴۰۲/۱۱/۱۴, ۲۰:۵۵\r\n\r\n//     console.log(\r\n//         new Intl.DateTimeFormat(\"fa-IR\", {\r\n//             ...dateOption,\r\n//             month: \"long\",\r\n//         }).format(now)\r\n//     ); // ۱۴ بهمن ۱۴۰۲ ساعت ۲۰:۵۷\r\n\r\n//     console.log(\r\n//         new Intl.DateTimeFormat(\"fa-IR\", {\r\n//             ...dateOption,\r\n//             month: \"2-digit\",\r\n//             weekday: \"long\",\r\n//         }).format(now)\r\n//     ); // ۱۴۰۲/۱۱/۱۴, ۲۱:۰۰ => اگر تک رقمی باشد پشت آن عدد صفر می‌گذارد\r\n\r\n//     console.log(\r\n//         new Intl.DateTimeFormat(\"fa-IR\", {\r\n//             ...dateOption,\r\n//             month: \"2-digit\",\r\n//             weekday: \"long\",\r\n//         }).format(now)\r\n//     ); // شنبه ۱۴۰۲/۱۱/۱۴, ۲۱:۰۲\r\n// })();\r\n\r\n// // بین المللی کردن ساعت و تاریخ با استفاده از منطقه زمانی مرورگر\r\n// (() => {\r\n//     const local = navigator.language;\r\n//     const dateOption = {\r\n//         hour: \"2-digit\",\r\n//         day: \"2-digit\",\r\n//         minute: \"2-digit\",\r\n//         month: \"2-digit\",\r\n//         year: \"2-digit\",\r\n//     };\r\n\r\n//     console.log(local); // en-US\r\n//     console.log(new Intl.DateTimeFormat(local, dateOption).format(new Date())); // 02/03/24, 09:20 PM\r\n// })();\r\n187;\r\n// // فرمت کردن اعداد\r\n// (() => {\r\n//     const num = 6753568;\r\n//     console.log(new Intl.NumberFormat(navigator.language).format(num)); // 6,753,568\r\n//     console.log(new Intl.NumberFormat('fa-IR').format(num)); // ۶٬۷۵۳٬۵۶۸\r\n// })();\r\n\r\n// // with option\r\n// (() => {\r\n//     console.log(\r\n//         new Intl.NumberFormat(navigator.language, {\r\n//             style: 'unit',\r\n//             unit: 'mile-per-hour',\r\n//         }).format(897497349)\r\n//     ); // 897,497,349 mph\r\n\r\n//     console.log(\r\n//         new Intl.NumberFormat(navigator.language, {\r\n//             style: 'unit',\r\n//             unit: 'celsius',\r\n//         }).format(897497349)\r\n//     ); // 897,497,349°C\r\n\r\n//     console.log(\r\n//         new Intl.NumberFormat(navigator.language, {\r\n//             style: 'percent',\r\n//         }).format(0.9)\r\n//     ); // 90%\r\n\r\n//     console.log(\r\n//         new Intl.NumberFormat(navigator.language, {\r\n//             style: 'currency',\r\n//             currency: 'EUR',\r\n//         }).format(95)\r\n//     ); // €95.00\r\n\r\n//     // اگر می‌خوای بدون جدا کننده نمایش بده\r\n//     console.log(\r\n//         new Intl.NumberFormat(navigator.language, {\r\n//             style: 'currency',\r\n//             currency: 'EUR',\r\n//             useGrouping: false,\r\n//         }).format(9598479)\r\n//     ); // €9598479.00\r\n// })();\r\n188;\r\n// // setTimeout\r\n// (() => {\r\n//     setTimeout((a, b) => console.log(`${a} and ${b}`), 2000, 'ali', 'reza'); // ali and reza\r\n\r\n//     // کالبک جدا\r\n//     const dilay = k => console.log(k);\r\n//     setTimeout(dilay, 3000, 'first'); // first\r\n// })();\r\n\r\n// // clearTimeout\r\n// (() => {\r\n//     const arr = ['ali', 'reza', 'mohsen', 'bezi'];\r\n//     const set1 = setTimeout(\r\n//         arrN => arrN.forEach(name => console.log(name)),\r\n//         3000,\r\n//         arr\r\n//     );\r\n//     arr.includes('zahra') && clearTimeout(set1);\r\n// })();\r\n\r\n// // setInterval\r\n// (() => {\r\n//     console.log('---- setInterval ----');\r\n//     setInterval(() => console.log(new Date()), 1000);\r\n// })();\r\n\r\n// // clock practice\r\n// // first way\r\n// () => {\r\n//     setInterval(() => {\r\n//         // initialize\r\n//         const now = new Date();\r\n//         const hour = `${now.getHours()}`.padStart(2, 0);\r\n//         const minute = `${now.getMinutes()}`.padStart(2, 0);\r\n//         const second = `${now.getSeconds()}`.padStart(2, 0);\r\n\r\n//         // show result\r\n//         document.querySelector(\r\n//             '.clock'\r\n//         ).textContent = `${hour}:${minute}:${second}`; //  01:23:08\r\n//     }, 1000);\r\n// };\r\n\r\n// // second way\r\n// setInterval(() => {\r\n//     // initialize\r\n//     const now = Intl.DateTimeFormat(navigator.language, {\r\n//         hour: '2-digit',\r\n//         minute: '2-digit',\r\n//         second: '2-digit',\r\n//     }).format(new Date());\r\n\r\n//     // show result\r\n//     document.querySelector('.clock').textContent = now; // 01:23:08 PM\r\n// }, 1000);\r\n189;\r\n// // Timer practice\r\n// (() => {\r\n//     let ex = 10;\r\n\r\n//     document.querySelector('.timer').addEventListener('click', () => {\r\n//         const timer = setInterval(() => {\r\n//             const min = `${Math.trunc(ex / 60)}`.padStart(2, 0);\r\n//             const sec = `${Math.trunc(ex % 60)}`.padStart(2, 0);\r\n\r\n//             // warning\r\n//             ex <= 5 && ex % 2 === 1\r\n//                 ? (document.querySelector('.timer-box').style.color = 'red')\r\n//                 : (document.querySelector('.timer-box').style.color = '#000');\r\n\r\n//             // stop timer\r\n//             !ex && clearInterval(timer);\r\n\r\n//             // show result\r\n//             document.querySelector('.timer-box').textContent = `${min}:${sec}`;\r\n\r\n//             // count down\r\n//             ex--;\r\n//         }, 1000);\r\n//     });\r\n// })();\r\n194;\r\n// // Advanced DOM in JavaScript\r\n// // document\r\n// (() => {\r\n//     // شامل تمامی متد‌هایی است که مربوط به سند ما می‌شود html سند\r\n//     // html یک مثال از متد‌های سند\r\n//     console.log(document.location.href.startsWith('http://127.0.0.1:5501')); // true\r\n//     console.log(document.location.href.endsWith('/index.html')); // true\r\n\r\n//     // document\r\n//     console.log(document.documentElement); // تمام تگ‌ها را نمایش می‌دهد\r\n//     console.log(document.head); // را نمایش می‌دهد head تگ\r\n//     console.log(document.body); // را نمایش می‌دهد body تگ\r\n// })();\r\n\r\n// // انواع مختلف انتخابگر‌ها\r\n// (() => {\r\n//     console.log(document.getElementById('timer'));\r\n\r\n//     // عنصری را حذف کنیم لیست ما بروز نمی‌شود NodeList اگر در\r\n//     console.log(document.querySelectorAll('.span__172')); // NodeList(2) [span.span__172, span.span__172]\r\n\r\n//     // HTMLCollection\r\n//     // را حذف کنیم بلافاصله لیست ما بروز می‌شود html شبیه به آرایه است و در صورتی که یک یا چند عنصر\r\n//     console.log(document.getElementsByClassName('span__172')); // HTMLCollection(2) [span.span__172, span.span__172]\r\n//     console.log(document.getElementsByTagName('div')); // HTMLCollection(4) [div, div, div.clock, div#timer, timer: div#timer]\r\n// })();\r\n\r\n// // JS با HTML روش‌های ایجاد عنصر\r\n// (() => {\r\n//     // روش اول\r\n//     // insertAdjacentHTML\r\n//     // afterbegin , afterend , beforebegin , beforeend\r\n//     document.body.insertAdjacentHTML(\r\n//         'beforeend',\r\n//         '<div class=\"insert\">with insertAdjacentHTML</div>'\r\n//     );\r\n\r\n//     // روش دوم\r\n//     // ایجاد عنصر به صورت دستی\r\n//     // createElement\r\n//     const massage = document.createElement('div');\r\n//     massage.classList.add('massage');\r\n//     massage.style = 'display: inline-block; border: 1px solid';\r\n//     massage.innerHTML = 'ali <button class=\"massage-btn\">massage</button>'; // عنصر را ایجاد می‌کند\r\n//     // massage.textContent = 'ali <button>massage</button>'; // ali <button>massage</button> => عنصر را ایجاد نمی‌کند\r\n//     // prepend => body اولین عنصر\r\n//     // append => body آخرین عنصر\r\n//     // after => body بعد از عنصر\r\n//     // before => body قبل از عنصر\r\n//     document.body.before(massage);\r\n\r\n//     // را نمی‌توان در دو جا قرار داد مگر اینکه از آن کپی بگیریم massage عنصر\r\n//     // cloneNode\r\n//     document.body.after(massage.cloneNode(true));\r\n// })();\r\n\r\n// // delete element\r\n// // remove method\r\n// (() => {\r\n//     Array.from(document.querySelectorAll('.massage-btn'), el =>\r\n//         el.addEventListener('click', e => e.target.parentElement.remove())\r\n//     );\r\n// })();\r\n\r\n// // removeChild method\r\n// (() => {\r\n//     // // without removeChild method\r\n//     // این روش کامل تر است\r\n//     (() =>\r\n//         Array.from(document.querySelectorAll('.massage'), el =>\r\n//             el.addEventListener('click', e =>\r\n//                 Array.from(\r\n//                     e.target.children,\r\n//                     child =>\r\n//                         child.classList.contains('massage-btn') &&\r\n//                         child.remove()\r\n//                 )\r\n//             )\r\n//         ))();\r\n\r\n//     // whit removeChild method\r\n//     () =>\r\n//         document\r\n//             .querySelectorAll('.massage')[0]\r\n//             .addEventListener('click', event => {\r\n//                 const m = document.querySelectorAll('.massage-btn')[0];\r\n//                 event.target.removeChild(m);\r\n//             });\r\n// })();\r\n195;\r\n// // styles\r\n// (() => {\r\n//     // styling\r\n//     () => (document.body.style.height = '98.6vh');\r\n\r\n//     // get style (only inline style)\r\n//     () => console.log(document.body.style.height); // 98.6vh\r\n\r\n//     // get all styles (inline and css style and user agent stylesheet)\r\n//     // getComputedStyle method\r\n//     () => {\r\n//         console.log(getComputedStyle(document.body)); // all styles\r\n//         console.log(getComputedStyle(document.body).display); // flex\r\n//     };\r\n\r\n//     // change css style with getComputedStyle method\r\n//     () => {\r\n//         document.body.style.height =\r\n//             parseFloat(getComputedStyle(document.body).height) + 20 + 'vh';\r\n//         console.log(getComputedStyle(document.body).height); // vh => px\r\n//     };\r\n\r\n//     // change css variable\r\n//     () => document.documentElement.style.setProperty('--back', '#000');\r\n// })();\r\n\r\n// // get Attribute\r\n// (() => {\r\n//     // get Attribute value\r\n//     () => console.log(document.querySelector('.userInput').type); // text\r\n\r\n//     // getAttribute method\r\n//     // این متد کامل تر است و صفات غیر استاندارد را هم برمی‌گرداند\r\n//     () => {\r\n//         console.log(document.querySelector('.userInput').ali); // undefined => غیر استاندارد است\r\n//         console.log(document.querySelector('.userInput').getAttribute('ali')); // reza\r\n//     };\r\n\r\n//     // change attribute value\r\n//     () => {\r\n//         document.querySelector('.userInput').type = 'jodat';\r\n//         console.log(document.querySelector('.userInput').getAttribute('type')); // jodat\r\n//     };\r\n\r\n//     // a تفاوت گرفتن مقدار سورس عکس یا لینک تگ\r\n//     // استفاده کرد getAttribute در مواردی که آدرس دهی ما مربوط به فایل‌های داخلی میشوند باید از\r\n//     // از هر دو روش می‌توان استفاده کرد https://www.google.com اما مثلا در آدرس دهی خارجی مثل\r\n//     () => {\r\n//         console.log(document.querySelector('.a__195').href); // http://127.0.0.1:5501/index.html#\r\n//         console.log(document.querySelector('.a__195').getAttribute('href')); // #\r\n//     };\r\n// })();\r\n\r\n// // set Attribute\r\n// () => {\r\n//     document.querySelector('.userInput').setAttribute('r', 'b');\r\n//     console.log(document.querySelector('.userInput').getAttribute('r')); // b\r\n// };\r\n\r\n// // Data Attribute\r\n// // یک آبجکت است\r\n// () => console.log(document.querySelector('.a__195').dataset.version); // 4.2.0\r\n\r\n// // Classes\r\n// (() => {\r\n//     // add and remove method\r\n//     () => {\r\n//         document.querySelector('.a__195').classList.add('a', 'b');\r\n//         document.querySelector('.a__195').classList.remove('a', 'b');\r\n//     };\r\n\r\n//     // toggle and contains method\r\n//     () => {\r\n//         document.querySelector('.a__195').classList.contains('a');\r\n//         document.querySelector('.a__195').classList.toggle('a');\r\n//     };\r\n\r\n//     // اگر می‌خواهید تمام کلاس‌ها ریست شده و فقط یک کلاس جایگزین شود\r\n//     () => (document.querySelector('.a__195').className = 'ali');\r\n// })();\r\n197;\r\n// // addEventsListener\r\n// (() => {\r\n//     const h1 = document.querySelector('.h1__197');\r\n\r\n//     // js روشی قدیمی برای ایجاد رویداد\r\n//     h1.onclick = () => console.log('Entered!');\r\n\r\n//     // mouseenter event\r\n//     // هر بار که موس وارد این عنصر می‌شود قطعه کد اجراء می‌شود\r\n//     () => h1.addEventListener('mouseenter', () => console.log('Entered!'));\r\n// })();\r\n\r\n// // removeEventsListener\r\n// (() => {\r\n//     const h1 = document.querySelector('.h1__197');\r\n\r\n//     // برای حذف کردن یک رویداد ابتدا تابع آن را در یک متغیر ذخیره کنیم\r\n//     // و سپس به وسیله اسم همان کال‌بک می‌توان رویداد را حذف کرد\r\n//     () => {\r\n//         const func = () => {\r\n//             console.log('Entered!');\r\n\r\n//             // فقط یکبار اجرا می‌شود\r\n//             h1.removeEventListener('mouseenter', func);\r\n//         };\r\n//         h1.addEventListener('mouseenter', func);\r\n//     };\r\n// })();\r\n199;\r\n// // event propagation\r\n// // انتشار ایونت\r\n// () => {\r\n//     const div = document.querySelector('.div-propagation');\r\n//     const nav = document.querySelector('.nav-propagation');\r\n//     const span = document.querySelector('.span-propagation');\r\n\r\n//     const randomInt = (max, min) =>\r\n//         Math.floor(Math.random() * (max - min) + min);\r\n//     const randomColor = () =>\r\n//         `rgb(${randomInt(0, 256)}, ${randomInt(0, 256)}, ${randomInt(0, 256)})`;\r\n\r\n//     // رنگ والد‌هایی که ایونت دارند هم عوض می‌شود div با کلیک کردن برروی\r\n//     // در درون والد‌های خود قرار دارد div زیرا\r\n//     // فقط در این نوع از توابع بی‌نام به خود عنصر دارای ایونت اشاره می‌کنند this کلمه کلیدی\r\n//     div.addEventListener('click', function (e) {\r\n//         // به تعداد والد هایی که ایونت برایشان ست شده چاپ می‌شود\r\n//         // اما همه فقط عنصر کلیک شده را چاپ می‌کنند\r\n//         console.log(e.target);\r\n\r\n//         // فقط به عنصر دارای ایونت اشاره می‌کند this کلمه کلیدی\r\n//         console.log(this); // div\r\n\r\n//         // عمل می‌کند this این هم مثل کلمه کلیدی\r\n//         // و فقط به عنصر دارای ایونت اشاره می‌کند\r\n//         // (e.currentTarget === this) => البته فقط در همین نوع از توابع بی‌نام\r\n//         console.log(e.currentTarget, 'currentTarget');\r\n\r\n//         this.style.background = randomColor();\r\n//     });\r\n\r\n//     // رنگ والد‌هایی که ایونت دارند هم عوض می‌شود nav با کلیک کردن برروی\r\n//     // در درون والد‌های خود قرار دارد nav زیرا\r\n//     // فقط در این نوع از توابع بی‌نام به خود عنصر دارای ایونت اشاره می‌کنند this کلمه کلیدی\r\n//     nav.addEventListener('click', function (e) {\r\n//         // به تعداد والد هایی که ایونت برایشان ست شده چاپ می‌شود\r\n//         // اما همه فقط عنصر کلیک شده را چاپ می‌کنند\r\n//         console.log(e.target);\r\n\r\n//         // فقط به عنصر دارای ایونت اشاره می‌کند this کلمه کلیدی\r\n//         console.log(this); // nav\r\n\r\n//         // عمل می‌کند this این هم مثل کلمه کلیدی\r\n//         // و فقط به عنصر دارای ایونت اشاره می‌کند\r\n//         // (e.currentTarget === this) => البته فقط در همین نوع از توابع بی‌نام\r\n//         console.log(e.currentTarget, 'currentTarget');\r\n\r\n//         this.style.background = randomColor();\r\n//     });\r\n\r\n//     // رنگ والد‌هایی که ایونت دارند هم عوض می‌شود span با کلیک کردن برروی\r\n//     // در درون والد‌های خود قرار دارد span زیرا\r\n//     // فقط در این نوع از توابع بی‌نام به خود عنصر دارای ایونت اشاره می‌کنند this کلمه کلیدی\r\n//     span.addEventListener('click', function (e) {\r\n//         // به تعداد والد هایی که ایونت برایشان ست شده چاپ می‌شود\r\n//         //  اما همه فقط عنصر کلیک شده را چاپ می‌کنند\r\n//         console.log(e.target);\r\n\r\n//         // فقط به عنصر دارای ایونت اشاره می‌کند this کلمه کلیدی\r\n//         console.log(this); // span\r\n\r\n//         // عمل می‌کند this این هم مثل کلمه کلیدی\r\n//         // و فقط به عنصر دارای ایونت اشاره می‌کند\r\n//         // (e.currentTarget === this) => البته فقط در همین نوع از توابع بی‌نام\r\n//         console.log(e.currentTarget, 'currentTarget');\r\n\r\n//         this.style.background = randomColor();\r\n//     });\r\n// };\r\n\r\n// // stopPropagation()\r\n// // اجرا شدن ایونت در والدها را متوقف می‌سازد\r\n// // اما استفاده از این روش توصیه نمی‌شود\r\n// () => {\r\n//     const div = document.querySelector('.div-propagation');\r\n//     const nav = document.querySelector('.nav-propagation');\r\n//     const span = document.querySelector('.span-propagation');\r\n\r\n//     div.addEventListener('click', function () {\r\n//         console.log('clicked!');\r\n//     });\r\n\r\n//     nav.addEventListener('click', function () {\r\n//         console.log('clicked!');\r\n//     });\r\n\r\n//     span.addEventListener('click', function (e) {\r\n//         console.log('clicked!');\r\n//         e.stopPropagation();\r\n//     });\r\n// };\r\n\r\n// // ایجاد الویت در حباب ایونت\r\n// // بدهیم true به هر کدام از ایونت‌ها مقدار سوم\r\n// // اگر شرایط حباب ایونت را داشته باشد اول از همه اجرا می‌شود\r\n// // و سپس مابقی به ترتیب اجرا میشوند\r\n\r\n// // است true دارای nav در مثال زیر فقط\r\n// // کلیک شود span اگر برروی\r\n// // است nav در داخل span شرایط حباب ایونت فراهم است زیرا\r\n// // با این حال ترتیب اجرا به صورت زیر است\r\n// // clicked! nav => true به دلیل داشتن\r\n// // clicked! span\r\n// // clicked! div\r\n// (() => {\r\n//     const div = document.querySelector('.div-propagation');\r\n//     const nav = document.querySelector('.nav-propagation');\r\n//     const span = document.querySelector('.span-propagation');\r\n\r\n//     div.addEventListener('click', function () {\r\n//         console.log('clicked! div');\r\n//     });\r\n\r\n//     nav.addEventListener(\r\n//         'click',\r\n//         function () {\r\n//             console.log('clicked! nav');\r\n//         },\r\n//         true\r\n//     );\r\n\r\n//     span.addEventListener('click', function (e) {\r\n//         console.log('clicked! span');\r\n//     });\r\n// })();\r\n201;\r\n// // DOM traversing\r\n// (() => {\r\n//     const div = document.querySelector('.div-propagation');\r\n\r\n//     // DOM traversing\r\n//     () => console.log(div.querySelector('.span-propagation')); // OK!\r\n\r\n//     // childNode\r\n//     // انواع مختلف از گره را به ما می‌دهد\r\n//     // است NodeList نوع آن\r\n//     () => console.log(div.childNodes); // NodeList(3) [text, nav.nav-propagation, text]\r\n\r\n//     // children\r\n//     // خود عناصر را به ما می‌دهد\r\n//     // است HTMLCollection  نوع آن\r\n//     () => console.log(div.children); // HTMLCollection [nav.nav-propagation]\r\n\r\n//     // lastElementChild and firstElementChild\r\n//     () => {\r\n//         console.log(div.firstElementChild); // .nav-propagation\r\n//         console.log(div.lastElementChild); // .nav-propagation\r\n//     };\r\n\r\n//     // parentNode\r\n//     // این روش فقط در محدوده والد مستقیم است\r\n//     // که به ما انواع گره‌ها را می‌دهد\r\n//     () => console.log(div.querySelector('.span-propagation').parentNode); // nav.nav-propagation\r\n\r\n//     // ها node به وسیله textContent تغییر\r\n//     () => (div.childNodes[0].textContent = 'ali');\r\n\r\n//     // parentElement\r\n//     // این روش فقط در محدوده والد مستقیم است\r\n//     // که به ما خود والد را می‌دهد\r\n//     () => console.log(div.querySelector('.span-propagation').parentElement); // nav.nav-propagation\r\n\r\n//     // closest method\r\n//     // این روش نزدیک ترین والد را به ما می‌دهد\r\n//     () =>\r\n//         console.log(\r\n//             div.querySelector('.span-propagation').closest('.div-propagation')\r\n//         );\r\n\r\n//     const btn = document.querySelector('.btn143');\r\n\r\n//     // going sideways : sibling\r\n//     // nextElementSibling and previousElementSibling\r\n//     // خود عنصر را برمی‌گرداند\r\n//     () => {\r\n//         console.log(btn.nextElementSibling); // form\r\n//         console.log(btn.previousElementSibling); // btn142\r\n//     };\r\n\r\n//     // nextSibling and previousSibling\r\n//     // خود عنصر را بر نمی‌گرداند\r\n//     () => {\r\n//         console.log(btn.nextSibling); // #text\r\n//         console.log(btn.previousSibling); // #text\r\n//     };\r\n\r\n//     // تمرین برای پیدا کردن فرزند مورد نظر\r\n//     const form = document.querySelector('.form1');\r\n\r\n//     // first way\r\n//     () => console.log(form.querySelector('.btn166'));\r\n\r\n//     // second way\r\n//     // DOM traversing\r\n//     () =>\r\n//         Array.from(\r\n//             form.children,\r\n//             child => child.classList.contains('btn166') && console.log(child)\r\n//         );\r\n// })();\r\n210;\r\n// // other addEventListener\r\n// // DOMContentLoaded\r\n// // بارگذاری میشود این ایونت اجرا می‌شود DOM زمانی که\r\n// // این ایونت رخ می‌دهد HTML یا به عبارتی پس از اجرا شدن\r\n// (() => document.addEventListener('DOMContentLoaded', e => console.log(e)))();\r\n\r\n// // load\r\n// // پس از بارگذاری کامل پنجره این ایونت رخ می‌دهد\r\n// (() => window.addEventListener('load', e => console.log(e)))();\r\n\r\n// // beforeunload\r\n// // این ایونت در هنگام بستن پنجره و بارگذاری مجدد پنجره یک پیغام را به نمایش در می‌آورد\r\n// () =>\r\n//     window.addEventListener('beforeunload', e => {\r\n//         e.preventDefault();\r\n//         e.returnValue = '';\r\n//     });\r\n216;\r\n// // OOP (Object Oriented Programming)\r\n// // نمی‌توان استفاده کرد Arrow در این روش از تابع\r\n// // است this که یکی از دلایل آن استفاده زیاد از کلمه کلیدی\r\n// // در اسم گذاری کلاس‌ها بهتر است اولین حرف آن بزرگ باشد\r\n// // ها دارند function کلاس‌ها تشابه زیادی به\r\n// // صدا زده شوند new اما یکی از تفاوت آنها این است که باید با کلمه کلیدی\r\n// // بعد از کال شدن یک شیء ساخته می‌شود\r\n// // است this که این شیء برابر با کلمه کلیدی\r\n// // متصل می‌شود prototype و این شیء ایجاد شده به\r\n// () => {\r\n//     // first way\r\n//     const Person = function (fName, lName) {};\r\n//     console.log(new Person('ali', 'jodat')); // Person {} => is Empty\r\n//     // second way\r\n//     function Person1(fName, lName) {\r\n//         console.log(this);\r\n//     }\r\n//     new Person1('ali', 'jodat'); // Person1 {} => is Empty\r\n// };\r\n\r\n// // چگونه آن شیء خالی را پر کنیم\r\n// () => {\r\n//     function Person(fName, lName) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//     }\r\n//     console.log(new Person('ali', 'jodat')); // Person {firstName: 'ali', lastName: 'jodat'}\r\n// };\r\n\r\n// // ایجاد چند شیء با فرمت یکسان\r\n// () => {\r\n//     function Person(fName, lName) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//     }\r\n//     const ali = new Person('ali', 'jodat'); // Person {firstName: 'ali', lastName: 'jodat'}\r\n//     const reza = new Person('reza', 'jodat'); // Person {firstName: 'reza', lastName: 'jodat'}\r\n//     const mohsen = new Person('mohsen', 'jodat'); // Person {firstName: 'mohsen', lastName: 'jodat'}\r\n// };\r\n\r\n// // instanceof method\r\n// // برای تشخیص این است که آن متغیر نمونه‌ای از آن تابع است\r\n// () => {\r\n//     function Person(fName, lName) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//     }\r\n//     const ali = new Person('ali', 'jodat');\r\n//     const reza = 'OK';\r\n//     console.log(ali instanceof Person); // true\r\n//     console.log(reza instanceof Person); // false\r\n// };\r\n\r\n// // به شیء خودمان method نحوه ایجاد کردن\r\n// // با روش پایین اصلا بهینه نیست method که البته تعریف کردن\r\n// () => {\r\n//     function Person(fName, lName, age) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//         this.age = age;\r\n//         this.calcAge = function () {\r\n//             return 2024 - this.age;\r\n//         };\r\n//     }\r\n//     const ali = new Person('ali', 'jodat', 2001);\r\n//     const { firstName, lastName } = ali;\r\n//     console.log(`${firstName} ${lastName}: ${ali.calcAge()}`); // ali jodat: 23\r\n// };\r\n217;\r\n// // Prototype\r\n// // با اضافه کردن پروتوتایپ به کانستراکتور تمامی اشیائی که از آن ساخته می‌شوند به آن دسترسی دارند\r\n// // add method\r\n// () => {\r\n//     function Person(fName, lName, age) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//         this.age = age;\r\n//         this.calcAge = function () {\r\n//             return 2024 - this.age;\r\n//         };\r\n//     }\r\n//     console.log(Person.prototype); // constructor: ƒ Person(fName, lName, age) => جزو نمونه اولیه نیست calcAge همانطور که می‌بینید متد\r\n//     Person.prototype.newCalcAge = function () {\r\n//         return 2024 - this.age;\r\n//     };\r\n//     console.log(Person.prototype); // {newCalcAge: ƒ, constructor: ƒ} => حالا به عنوان نمونه اولیه اضافه شده است\r\n//     const ali = new Person('', '', 2001);\r\n//     console.log(ali.newCalcAge()); // 23\r\n//     // ساخته شود به این پروتوتایپ دسترسی خواهد داشت Person حالا هر شیء که از تابع کانستراکتور\r\n//     const reza = new Person('reza', 'jodat', 2005);\r\n//     console.log(reza.newCalcAge()); // 19\r\n//     console.log(reza.__proto__ === Person.prototype); // true => پروتوتایپ‌های آنها یکی هستند\r\n//     // isPrototypeOf() method\r\n//     console.log(Person.prototype.isPrototypeOf(reza)); // true\r\n//     console.log(Person.prototype.isPrototypeOf(Person)); // false\r\n// };\r\n\r\n// // add spcies\r\n// () => {\r\n//     function Person(fName, lName, age) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//         this.age = age;\r\n//         this.calcAge = function () {\r\n//             return 2024 - this.age;\r\n//         };\r\n//     }\r\n//     Person.prototype.width = '120px';\r\n//     const div = new Person('div', 'span', 20);\r\n//     console.log(div); // Person {firstName: 'div', lastName: 'span', age: 20, calcAge: ƒ} => نمونه اولیه اینجا نیست\r\n//     // first way\r\n//     console.log(div.width); // 120px\r\n//     // second way\r\n//     console.log(div.__proto__.width); // 120px\r\n// };\r\n\r\n// // hasOwnProperty('')\r\n// // برای چک کردن اینکه آن ویژگی فقط در اختیار آن شیء است یا نه\r\n// () => {\r\n//     function Person(fName, lName, age) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//         this.age = age;\r\n//         this.calcAge = function () {\r\n//             return 2024 - this.age;\r\n//         };\r\n//     }\r\n//     Person.prototype.width = '120px';\r\n//     const div = new Person('div', 'span', 20);\r\n//     console.log(div.hasOwnProperty('width')); // false => نیست div این ویژگی نوعی پروتوتایپ است و فقط برای شیء\r\n// };\r\n218;\r\n// // نحوه دسترسی به تمام پروتوتایپ‌های از قبل تعریف شده\r\n// // hasOwnProperty, isPrototypeOf,... مثل\r\n// () => {\r\n//     function Person(fName, lName, age) {\r\n//         this.firstName = fName;\r\n//         this.lastName = lName;\r\n//         this.age = age;\r\n//         this.calcAge = function () {\r\n//             return 2024 - this.age;\r\n//         };\r\n//     }\r\n//     Person.prototype.average = function () {\r\n//         return 2024 - age;\r\n//     };\r\n//     const ali = new Person('ali', 'jodat', 2000);\r\n//     console.log(ali.__proto__.__proto__); // {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}\r\n//     console.log(ali.__proto__.__proto__.__proto__); // null\r\n// };\r\n\r\n// // Prototype in Array\r\n// // با این کار می‌توان به تمامی متد‌های آرایه دسترسی پیدا کرد\r\n// () => {\r\n//     const arr = [12, 3, 556, 676, 2];\r\n//     console.log(arr.__proto__); // [constructor: ƒ, at: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, …]\r\n//     console.log(arr.__proto__ === Array.prototype); // true\r\n// };\r\n\r\n// // prototype لایه‌های داخلی\r\n// () => {\r\n//     const arr = [12, 3, 556, 676, 2];\r\n//     console.log(arr.__proto__); // [constructor: ƒ, at: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, …]\r\n//     // اینبار به متد‌های اشیاء می‌رسیم\r\n//     // خود یک شیء است arr.__proto__ زیرا\r\n//     console.log(arr.__proto__.__proto__); // [constructor: ƒ, at: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, …]\r\n// };\r\n\r\n// // add prototype in array\r\n// // ست می‌شوند و در خارج از آن بلاک می‌توان به آن دسترسی داشت global ها به صورت prototype این\r\n// () => {\r\n//     const arr = [12, 3, 556, 676, 2];\r\n//     arr.__proto__.su = function () {\r\n//         console.log(this.reduce((acc, curr) => (acc += curr), 0));\r\n//     };\r\n//     arr.su(); // 1249\r\n//     Array.prototype.ali = function () {\r\n//         console.log(this);\r\n//     };\r\n//     arr.ali(); // [12, 3, 556, 676, 2]\r\n// };\r\n\r\n// // ایجاد متد جدید برای آرایه\r\n// // البته که این کار درست نیست\r\n// // زیرا ممکن است در آینده کد ما دچار تداخل با متد‌های جدید جاوااسکریپتی شود\r\n// () => {\r\n//     const arr = [0, 1, 1, 34, 34, 2];\r\n//     Array.prototype.unique = function () {\r\n//         console.log([...new Set(this)]);\r\n//     };\r\n//     arr.unique(); // [0, 1, 34, 2]\r\n// };\r\n219;\r\n// // prototype in elements\r\n// () => {\r\n//     const body = document.body;\r\n//     console.log(body.__proto__); // => [[Prototype]]: HTMLElement\r\n//     console.log(body.__proto__.__proto__); // => [[Prototype]]: Element\r\n//     console.log(body.__proto__.__proto__.__proto__); // => [[Prototype]]: Node\r\n//     console.log(body.__proto__.__proto__.__proto__.__proto__); // => [[Prototype]]: EventTarget\r\n//     console.log(body.__proto__.__proto__.__proto__.__proto__.__proto__); // => [[Prototype]]: Object => {Symbol(Symbol.toStringTag): 'EventTarget', addEventListener: ƒ, dispatchEvent: ƒ, removeEventListener: ƒ, constructor: ƒ}\r\n//     console.log(\r\n//         body.__proto__.__proto__.__proto__.__proto__.__proto__.__proto__\r\n//     ); // => {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}\r\n//     console.log(\r\n//         body.__proto__.__proto__.__proto__.__proto__.__proto__.__proto__\r\n//             .__proto__\r\n//     ); // => null😃\r\n// };\r\n\r\n// // prototype in function\r\n// () => {\r\n//     const func = x => x + 1;\r\n//     console.log(func().__proto__); // Number {0, constructor: ƒ, toExponential: ƒ, toFixed: ƒ, toPrecision: ƒ, …}\r\n//     console.log(func().__proto__.__proto__); // {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}\r\n//     console.log(func().__proto__.__proto__.__proto__); // null\r\n// };\r\n220;\r\n// // coding chalange for (OOP)\r\n\r\n// () => {\r\n//     const Car = function (mark, speed) {\r\n//         this.mark = mark;\r\n//         this.speed = Intl.NumberFormat(navigator.language, {\r\n//             style: 'unit',\r\n//             unit: 'kilometer-per-hour',\r\n//         }).format(speed);\r\n//     };\r\n//     const Benz = new Car('Benz', 260);\r\n//     Car.prototype.accelerate = function () {\r\n//         console.log(\r\n//             Intl.NumberFormat(navigator.language, {\r\n//                 style: 'unit',\r\n//                 unit: 'kilometer-per-hour',\r\n//             }).format(parseFloat(this.speed) + 10)\r\n//         );\r\n//     };\r\n//     Car.prototype.brake = function () {\r\n//         console.log(\r\n//             Intl.NumberFormat(navigator.language, {\r\n//                 style: 'unit',\r\n//                 unit: 'kilometer-per-hour',\r\n//             }).format(parseFloat(this.speed) - 5)\r\n//         );\r\n//     };\r\n//     Benz.accelerate(); // 270 km/h\r\n//     Benz.brake(); // 265\r\n// };\r\n221;\r\n// // classes in ES6\r\n// // 1. قبل از تعریف کردن کلاس‌ها نمی‌توان از آن استفاده کرد\r\n// // 2. اجرا می‌شود strict mode کلاس‌ها همیشه در حالت\r\n// // class Expression\r\n// () => {\r\n//     const Person = class {};\r\n//     console.log(new Person()); // Person {}\r\n// };\r\n\r\n// // class Declaration\r\n// () => {\r\n//     class Person {}\r\n//     console.log(new Person()); // Person {}\r\n// };\r\n\r\n// // set constructor function in class\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         }\r\n//     }\r\n//     const person1 = new Person('alireza', 'jodat');\r\n//     console.log(person1); // Person {firstName: 'alireza', lastName: 'jodat'}\r\n// };\r\n\r\n// // set method in class\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//             this.showFullName = function () {\r\n//                 const { firstName, lastName } = this;\r\n//                 console.log(`${firstName} ${lastName}`); // alireza jodat\r\n//             };\r\n//         }\r\n//     }\r\n//     const person1 = new Person('alireza', 'jodat');\r\n//     person1.showFullName(); // alireza jodat\r\n// };\r\n\r\n// // set prototype in class\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         }\r\n//         // first and best way\r\n//         showFullName() {\r\n//             const { firstName, lastName } = this;\r\n//             console.log(`${firstName} ${lastName}`);\r\n//         }\r\n//     }\r\n//     const person1 = new Person('alireza', 'jodat');\r\n//     person1.showFullName(); // alireza jodat\r\n//     // second way\r\n//     Person.prototype.helloFunc = function () {\r\n//         console.log(`${this.firstName}, hello!!!`);\r\n//     };\r\n//     person1.helloFunc(); // alireza, hello!!!\r\n// };\r\n\r\n// // (person1.__proto__ === Person.prototype)\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         }\r\n//         showFullName() {\r\n//             const { firstName, lastName } = this;\r\n//             console.log(`${firstName} ${lastName}`);\r\n//         }\r\n//     }\r\n//     const person1 = new Person('alireza', 'jodat');\r\n//     console.log(person1.__proto__ === Person.prototype); // true\r\n// };\r\n222;\r\n// // Getters and Setters in regular object\r\n// () => {\r\n//     const acc = {\r\n//         own: 'ali',\r\n//         movs: [12, 4567, 778, 3],\r\n//         // Getters\r\n//         // شود return نتیجه نهایی حتما باید\r\n//         get latest() {\r\n//             return this.movs.slice(-1);\r\n//         },\r\n//         // Setters\r\n//         // باید حتما یک پارارمتر داشته باشد\r\n//         set latest(mov) {\r\n//             this.movs.push(mov);\r\n//         },\r\n//     };\r\n//     // Getters\r\n//     // باید همانند یک ویژگی معمولی در یک شیء صدا زده شود\r\n//     console.log(acc.latest); // [3]\r\n//     // Setters\r\n//     // باید حتما به صورت زیر صدا زده شود\r\n//     acc.latest = 85;\r\n//     console.log(acc.movs); // [12, 4567, 778, 3, 85]\r\n// };\r\n\r\n// // Getters and Setters in classes\r\n// () => {\r\n//     class Acc {\r\n//         constructor(own, movs) {\r\n//             this.own = own;\r\n//             this.movs = movs;\r\n//         }\r\n//         // Getters\r\n//         get latest() {\r\n//             return this.movs.slice(-1);\r\n//         }\r\n//         // Setters\r\n//         set latest(mov) {\r\n//             this.movs.push(mov);\r\n//         }\r\n//     }\r\n//     const acc1 = new Acc('ali', [1, 2, 3]);\r\n//     // Getters\r\n//     console.log(acc1.latest); // [3]\r\n//     // Setters\r\n//     acc1.latest = 85;\r\n//     console.log(acc1.movs); // [1, 2, 3, 85]\r\n// };\r\n\r\n// // practice for Getters and setters\r\n// // استفاده کردیم _fullName در مثال زیر برای اعتبار سنجی و نداشتن تداخل از نام متغیر\r\n// // را صدا می‌کنیم fullName همان Getters اما در\r\n// () => {\r\n//     class Family {\r\n//         constructor(fullName, age) {\r\n//             this.fullName = fullName;\r\n//             this.age = age;\r\n//         }\r\n//         // Setters\r\n//         set fullName(name) {\r\n//             name.includes(' ') ? (this._fullName = name) : console.log('Bad');\r\n//         }\r\n//         // Getters\r\n//         get fullName() {\r\n//             return this._fullName;\r\n//         }\r\n//     }\r\n//     const family1 = new Family('ali', 20); // Bad\r\n//     const family2 = new Family('ali reza', 20);\r\n//     console.log(family2.fullName); // ali reza\r\n// };\r\n223;\r\n// // static method\r\n// // 1. in constructor function\r\n// () => {\r\n//     function Person(fName, lName) {\r\n//         this.fName = fName;\r\n//         this.lName = lName;\r\n//     }\r\n//     Person.hey = function () {\r\n//         console.log('Hello...');\r\n//     };\r\n//     const ali = new Person('ali', 'jodat');\r\n//     // متد‌های استاتیک به ارث برده نمی‌شوند\r\n//     Person.hey(); // Hello...\r\n// };\r\n\r\n// // 2. in classes\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.fName = fName;\r\n//             this.lName = lName;\r\n//         }\r\n//         static hey() {\r\n//             console.log('Hello...');\r\n//         }\r\n//     }\r\n//     const ali = new Person('ali', 'jodat');\r\n//     // متد‌های استاتیک به ارث برده نمی‌شوند\r\n//     Person.hey(); // Hello...\r\n// };\r\n224;\r\n// // Object.create(...)\r\n// // به هر شیء دلخواه است prototype برای ست کردن دستی\r\n// () => {\r\n//     const PersonProto = {\r\n//         fName: 'alireza',\r\n//         hey() {\r\n//             console.log('Hello...');\r\n//         },\r\n//     };\r\n//     console.log(PersonProto); // {fName: 'alireza', hey: ƒ} => یک شیء معمولی\r\n//     const person1 = Object.create(PersonProto);\r\n//     // set species\r\n//     person1.lName = 'jodat'; // محسوب نمیشود prototype جزو\r\n//     console.log(person1); // [[Prototype]]: Object => منتقل می‌شود prototype به داخل PersonProto تمام ویژگی‌های ست شده\r\n//     person1.hey(); // Hello...\r\n//     console.log(person1.__proto__ === PersonProto); // true\r\n// };\r\n\r\n// // set species\r\n// () => {\r\n//     const PersonProto = {\r\n//         init(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         },\r\n//     };\r\n//     const Person1 = Object.create(PersonProto);\r\n//     Person1.init('ali', 'jodat');\r\n//     console.log(Person1); // {firstName: \"ali\", lastName: \"jodat\", [[Prototype]]: Objectinit: ƒ init(fName, lName)}\r\n// };\r\n225;\r\n// // coding challenge\r\n// () => {\r\n//     class Car {\r\n//         constructor(make, speed) {\r\n//             this.make = make;\r\n//             this.speed = speed;\r\n//         }\r\n//         accelerate() {\r\n//             this.speed = parseFloat(this.speed) + 10;\r\n//             this.changeUnit();\r\n//             console.log(this.speed);\r\n//         }\r\n//         brake() {\r\n//             this.speed = parseFloat(this.speed) - 5;\r\n//             this.changeUnit();\r\n//             console.log(this.speed);\r\n//         }\r\n//         changeUnit() {\r\n//             this.speed = Intl.NumberFormat('en', {\r\n//                 style: 'unit',\r\n//                 unit: 'kilometer-per-hour',\r\n//             }).format(this.speed);\r\n//         }\r\n//         get speedUs() {\r\n//             return parseFloat(this.speed) / 1.6;\r\n//         }\r\n//         set speedUs(speed) {\r\n//             this.speed = Math.trunc(speed * 1.6);\r\n//             console.log(this.speed);\r\n//         }\r\n//     }\r\n//     const Benz = new Car('Benz', 200);\r\n//     Benz.accelerate(); // 210 km/h\r\n//     Benz.brake(); // 205 km/h\r\n//     Benz.speedUs = 50; // 80\r\n// };\r\n226;\r\n// // Inheritance between classes in (constructor function)\r\n// () => {\r\n//     const Person = function (name, family) {\r\n//         this.name = name;\r\n//         this.family = family;\r\n//     };\r\n//     Person.prototype.hey = function () {\r\n//         console.log('Hello...');\r\n//     };\r\n//     const Admin = function (name, family, course) {\r\n//         // استفاده کنیم call باید از this برای استفاده از کلمه کلیدی\r\n//         Person.call(this, name, family);\r\n//         this.course = course;\r\n//     };\r\n//     // Linking prototypes\r\n//     // قرار می‌دهیم Admin.prototype می‌سازیم و سپس در داخل شیء خالی Person.prototype ابتدا یک شیء کپی از  Object.create() با استفاده از\r\n//     // را به ارث ببریم و نه اینکه از خود آن استفاده کنیم Person.prototype نکته مهم این است که ما میخواهیم\r\n//     Admin.prototype = Object.create(Person.prototype);\r\n//     // changing constructor function\r\n//     // برمی‌گردانیم Admin را به constructor با این کار بخش\r\n//     // جلوگیری شود Person constructor تا در مواقع نیاز از رجوع به\r\n//     Admin.prototype.constructor = Admin;\r\n//     // Add greet prototype\r\n//     Admin.prototype.greet = function () {\r\n//         console.log(`hello ${this.name}`);\r\n//     };\r\n//     const Alireza = new Admin('Alireza', 'Jodat', 'computer');\r\n//     console.log(Alireza); // Admin {name: 'Alireza', family: 'Jodat', course: 'computer'}\r\n//     Alireza.greet(); // hello Alireza\r\n//     Alireza.hey(); // Hello...\r\n// };\r\n227;\r\n// // coding challenge\r\n// () => {\r\n//     // Car class\r\n//     const Car = function (make, speed) {\r\n//         this.make = make;\r\n//         this.speed = speed;\r\n//     };\r\n//     // Adding prototype\r\n//     Car.prototype.changeSpeedUnit = function () {\r\n//         console.log(\r\n//             Intl.NumberFormat('en', {\r\n//                 style: 'unit',\r\n//                 unit: 'mile-per-hour',\r\n//             }).format(Math.round(this.speed / 1.6))\r\n//         );\r\n//     };\r\n//     // EV class\r\n//     const EV = function (make, speed, charge) {\r\n//         Car.call(this, make, speed);\r\n//         this.charge = charge;\r\n//     };\r\n//     // Linking prototypes\r\n//     EV.prototype = Object.create(Car.prototype);\r\n//     // Add constructor\r\n//     EV.prototype.constructor = EV;\r\n//     // Adding prototype\r\n//     EV.prototype.showCharge = function () {\r\n//         console.log(\r\n//             Intl.NumberFormat('DE', { style: 'unit', unit: 'percent' }).format(\r\n//                 this.charge\r\n//             )\r\n//         );\r\n//     };\r\n//     // New EV car\r\n//     const Benz = new EV('Benz', 120, 29);\r\n//     // call method\r\n//     Benz.changeSpeedUnit(); // 75 mph\r\n//     Benz.showCharge(); // 29 %\r\n// };\r\n228;\r\n// // inheritance between classes\r\n// // 1. اگر فقط می‌خواهید که کلاس فرزند ارث بری کند از روش زیر استفاده نمایید\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         }\r\n//         hey() {\r\n//             console.log(`hello ${this.firstName}`);\r\n//         }\r\n//     }\r\n//     class Student extends Person {}\r\n//     const student1 = new Student('ali', 'jodat'); // Student {firstName: 'ali', lastName: 'jodat'}\r\n//     student1.hey(); // hello ali\r\n// };\r\n\r\n// // 2. اگر خواستید علاوه بر ارث بری ویژگی یا متد نیز اضافه کنید مراحل زیر را دنبال نمایید\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         }\r\n//         hey() {\r\n//             console.log(`hello ${this.firstName}`);\r\n//         }\r\n//     }\r\n//     class Student extends Person {\r\n//         constructor(fName, lName, age) {\r\n//             super(fName, lName);\r\n//             this.age = age;\r\n//         }\r\n//         hello() {\r\n//             console.log('Hello...');\r\n//         }\r\n//     }\r\n//     const student1 = new Student('ali', 'jodat', 21); // Student {firstName: 'ali', lastName: 'jodat', age: 21}\r\n//     student1.hey(); // hello ali\r\n//     student1.hello(); // Hello...\r\n// };\r\n\r\n// // 3. برای لغو کردن متدی که در والد وجود دارد باید یک متد در فرزند با همان نام ایجاد کنیم تا در موقع فراخوانی به سراغ والد نرود\r\n// () => {\r\n//     class Person {\r\n//         constructor(fName, lName) {\r\n//             this.firstName = fName;\r\n//             this.lastName = lName;\r\n//         }\r\n//         hey() {\r\n//             console.log(`hello ${this.firstName}`);\r\n//         }\r\n//     }\r\n//     class Student extends Person {\r\n//         constructor(fName, lName, age) {\r\n//             super(fName, lName);\r\n//             this.age = age;\r\n//         }\r\n//         hey() {\r\n//             console.log('I am inside Student class');\r\n//         }\r\n//     }\r\n//     const student1 = new Student('ali', 'jodat', 21); // Student {firstName: 'ali', lastName: 'jodat', age: 21}\r\n//     student1.hey(); // I am inside Student class => نمی‌رود Person اجرا می‌شود و به سراغ Student در اولین لایه یعنی\r\n// };\r\n229;\r\n// // inheritance between classes (Object.create())\r\n// // در این حالت باید مرحله به مرحله و به صورت زنجیر وار نمونه اولیه ها را انتقال دهیم\r\n// () => {\r\n//     // Prototypes\r\n//     const CarProto = {\r\n//         showMark() {\r\n//             console.log(this.mark);\r\n//         },\r\n//         init(mark) {\r\n//             this.mark = mark;\r\n//         },\r\n//     };\r\n//     const CarProto2 = {\r\n//         showSpeed() {\r\n//             console.log(this.speed);\r\n//         },\r\n//     };\r\n//     // Car\r\n//     // استفاده کنیم spread (...) برای اضافه کردن چند نمونه اولیه باید از\r\n//     const Car = Object.create({ ...CarProto, ...CarProto2 }); // important\r\n//     Car.init = function (mark, speed) {\r\n//         CarProto.init.call(this, mark);\r\n//         this.speed = speed;\r\n//     };\r\n//     // Benz\r\n//     const Benz = Object.create(Car);\r\n//     Benz.init = function (mark, speed, handling) {\r\n//         Car.init.call(this, mark, speed);\r\n//         this.handling = handling;\r\n//     };\r\n//     Benz.init('Benz', 260, 'good');\r\n//     Benz.showSpeed(); // 260\r\n//     Benz.showMark(); // Benz\r\n// };\r\n230;\r\n// // Example for classes\r\n// () => {\r\n//     class Accounts {\r\n//         constructor(owner, currency, pin) {\r\n//             this.owner = owner;\r\n//             this.currency = currency;\r\n//             this.pin = pin;\r\n//             // گاهی اوقات می‌توانیم مانند زیر مقدار دهی اولیه کنیم\r\n//             this.movments = [];\r\n//             this.locale = navigator.language;\r\n//         }\r\n//         deposit(value) {\r\n//             this.movments.push(value);\r\n//         }\r\n//         withraw(value) {\r\n//             this.deposit(-value);\r\n//         }\r\n//         approveLoan(value) {\r\n//             return true;\r\n//         }\r\n//         requestLoan(value) {\r\n//             this.approveLoan(value) && this.deposit(value);\r\n//         }\r\n//     }\r\n//     // testing\r\n//     const Account1 = new Accounts('Alireza Jodat', 'EUR', 1152);\r\n//     Account1.deposit(3_000_000);\r\n//     Account1.withraw(1_500_000);\r\n//     Account1.requestLoan(50_000_000);\r\n//     console.log(Account1); // Accounts {owner: 'Alireza Jodat', currency: 'EUR', pin: 1152, movments: Array(3), locale: 'en-US'}\r\n// };\r\n231;\r\n// // enCapsulation data (Fake)\r\n// // در این روش با گذاشتن _ از ویژگی‌های خود محافظت می‌کنیم\r\n// () => {\r\n//     class Accounts {\r\n//         constructor(owner, currency, pin) {\r\n//             this.owner = owner;\r\n//             this.currency = currency;\r\n//             this._pin = pin;\r\n//             // Protected Property\r\n//             this._movments = [];\r\n//             this.locale = navigator.language;\r\n//         }\r\n//         deposit(value) {\r\n//             this._movments.push(value);\r\n//         }\r\n//         withraw(value) {\r\n//             this.deposit(-value);\r\n//         }\r\n//         // Protected Prototype\r\n//         _approveLoan(value) {\r\n//             return true;\r\n//         }\r\n//         requestLoan(value) {\r\n//             this._approveLoan(value) && this.deposit(value);\r\n//         }\r\n//     }\r\n//     // testing\r\n//     const Account1 = new Accounts('Alireza Jodat', 'EUR', 1152);\r\n//     Account1.deposit(3_000_000);\r\n//     Account1.withraw(1_500_000);\r\n//     Account1.requestLoan(50_000_000);\r\n//     // Protected Property\r\n//     console.log(Account1.movments); // undefined\r\n//     console.log(Account1.pin); // undefined\r\n//     () => console.log(Account1.approveLoan(300)); // ERROR!!!!\r\n// };\r\n232;\r\n// // enCapsulation data\r\n// // 1) Public fields\r\n// () => {\r\n//     class Accounts {\r\n//         // Public fields\r\n//         locale = navigator.language;\r\n//         constructor(owner) {\r\n//             this.owner = owner;\r\n//         }\r\n//     }\r\n//     // testing\r\n//     const Account1 = new Accounts('Alireza Jodat');\r\n//     console.log(Account1.locale);\r\n// };\r\n\r\n// // 2) Private fields\r\n// () => {\r\n//     class Accounts {\r\n//         // Public fields\r\n//         locale = navigator.language;\r\n//         // Private fields\r\n//         #movments = [];\r\n//         // مقدار دهی شود از این روش استفاده می‌کنیم constructor هر وقت قرار است از داخل\r\n//         #pin;\r\n//         constructor(owner, pin) {\r\n//             this.owner = owner;\r\n//             this.#pin = pin;\r\n//         }\r\n//         variz(value) {\r\n//             this.#movments.push(value);\r\n//         }\r\n//     }\r\n//     // testing\r\n//     const Account1 = new Accounts('Alireza Jodat', 1152);\r\n//     // console.log(Account1.#movments); // ERROR!!!\r\n//     Account1.variz(300);\r\n//     console.log(Account1); // Accounts {locale: 'en-US', owner: 'Alireza Jodat', #movments: Array(1), #pin: 1152}\r\n// };\r\n// // Public and Private method\r\n// // هستند public تمامی متد‌ها به طور عادی\r\n// // و برای خصوصی کردن آنها نمی‌توان همانند ویژگی‌ها عمل کرد\r\n// // زیرا متد‌ها را تبدیل به ویژگی می‌کنند و از بخش نمونه اولیه خارج می‌سازند\r\n233;\r\n// // Chaining methods\r\n// // نکته مهم این است که در تمامی متدها باید برای قطع نشدن زنجیره خود کلاس را برگردانیم\r\n// () => {\r\n//     class Accounts {\r\n//         #pin;\r\n//         #movments = [];\r\n//         constructor(owner, currency, pin) {\r\n//             this.owner = owner;\r\n//             this.currency = currency;\r\n//             this.#pin = pin;\r\n//             this.locale = navigator.language;\r\n//         }\r\n//         deposit(value) {\r\n//             this.#movments.push(value);\r\n//             return this;\r\n//         }\r\n//         withraw(value) {\r\n//             this.deposit(-value);\r\n//             return this;\r\n//         }\r\n//         approveLoan(value) {\r\n//             return true;\r\n//         }\r\n//         requestLoan(value) {\r\n//             this.approveLoan(value) && this.deposit(value);\r\n//             return this;\r\n//         }\r\n//     }\r\n//     // testing\r\n//     const Account1 = new Accounts('Alireza Jodat', 'EUR', 1152);\r\n//     Account1.deposit(3_000_000).withraw(1_500_000).requestLoan(50_000_000);\r\n//     console.log(Account1); // Accounts {owner: 'Alireza Jodat', currency: 'EUR', locale: 'en-US', #pin: 1152, #movments: Array(3)}\r\n// };\r\n235;\r\n// // coding challenge\r\n// () => {\r\n//     // Car class\r\n//     class Car {\r\n//         constructor(make, speed) {\r\n//             this.make = make;\r\n//             this.speed = speed;\r\n//         }\r\n//         changeSpeedUnit() {\r\n//             console.log(\r\n//                 Intl.NumberFormat('en', {\r\n//                     style: 'unit',\r\n//                     unit: 'mile-per-hour',\r\n//                 }).format(Math.round(this.speed / 1.6))\r\n//             );\r\n\r\n//             return this;\r\n//         }\r\n//     }\r\n\r\n//     // EV class\r\n//     class EV extends Car {\r\n//         // private\r\n//         #charge;\r\n//         constructor(make, speed, charge) {\r\n//             // instance Car class\r\n//             super(make, speed);\r\n//             this.#charge = charge;\r\n//         }\r\n//         showCharge() {\r\n//             console.log(\r\n//                 Intl.NumberFormat('DE', {\r\n//                     style: 'unit',\r\n//                     unit: 'percent',\r\n//                 }).format(this.#charge)\r\n//             );\r\n//             return this;\r\n//         }\r\n//     }\r\n\r\n//     // New EV car\r\n//     const Benz = new EV('Benz', 120, 29);\r\n\r\n//     // call method\r\n//     Benz.changeSpeedUnit() // 75 mph\r\n//         .showCharge(); // 29 %\r\n// };\r\n240;\r\n// // geolocation\r\n// // در صورت موفقیت آمیز بودن درخواست موقعیت مکانی تابع اول اجرا می‌شود و در غیر اینصورت تابع دوم اجرا می‌شود\r\n// () => {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//         function (position) {\r\n//             const { latitude, longitude } = position.coords;\r\n//             console.log(latitude, longitude); // 35.7293801 51.8634809\r\n//         },\r\n//         function () {\r\n//             console.log('ERROR!!!');\r\n//         }\r\n//     );\r\n// };\r\n267;\r\n// // Promise\r\n// // ساختگی ایجاد کنیم Promise در ادامه میخواهیم یک\r\n// // را در دو خط متوالی قرار دهیم Promise , setTimeOut در حالت کلی اگر یک\r\n// // ها setTimeOut ها انجام میشوند و سپس microTask همانطور که میدانیم اول\r\n\r\n// // 1. به صورت زنجیر وار نوشتن\r\n// () => {\r\n//    let check = false;\r\n//    const myPromise = new Promise((resolve, reject) => {\r\n//       check ? resolve('I am S') : reject(new Error('I have a problem...'));\r\n//    });\r\n//    // consume promise\r\n//    myPromise\r\n//       .then(res => console.log(res))\r\n//       .catch(err => console.log(err.message));\r\n// };\r\n\r\n// // 2. به صورت جدا جدا\r\n// () => {\r\n//    let check = false;\r\n//    check && Promise.resolve('successfull...').then(res => console.log(res));\r\n//    !check &&\r\n//       Promise.reject(new Error('unSuccsessfull...')).catch(err =>\r\n//          console.log(err.message)\r\n//       );\r\n// };\r\n268;\r\n// // getting the geoLocation with Promise\r\n// () => {\r\n//    function getPosition() {\r\n//       return new Promise((resolve, reject) => {\r\n//          navigator.geolocation.getCurrentPosition(resolve, reject);\r\n//       });\r\n//    }\r\n//    getPosition()\r\n//       .then(pos => console.log(pos))\r\n//       .catch(err => console.log(err.message));\r\n// };\r\n\r\n// // Finding my location by geolocation and Api of geocode\r\n// () => {\r\n//    function getLocation() {\r\n//       return new Promise((resolve, reject) =>\r\n//          navigator.geolocation.getCurrentPosition(resolve, reject)\r\n//       );\r\n//    }\r\n\r\n//    function showCountry() {\r\n//       getLocation()\r\n//          .then(pos => {\r\n//             const { latitude: lat, longitude: lng } = pos.coords;\r\n//             return fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`);\r\n//          })\r\n//          .then(res => {\r\n//             if (!res.ok) throw new Error(`Could not found (${res.status})`);\r\n//             res.json();\r\n//          })\r\n//          .then(data => console.log(data))\r\n//          .catch(err => console.log(err.message));\r\n//    }\r\n\r\n//    showCountry();\r\n// };\r\n269;\r\n// // Codeing challenge 2\r\n// // Management the loading of images by promise\r\n// () => {\r\n//    function createImage(imgSrc) {\r\n//       return new Promise((resolve, reject) => {\r\n//          const img = document.createElement('img');\r\n//          img.src = imgSrc;\r\n//          img.addEventListener('load', function () {\r\n//             document.body.append(img);\r\n//             resolve(this);\r\n//          });\r\n//          img.addEventListener('error', () =>\r\n//             reject(new Error(`Image not found.`))\r\n//          );\r\n//       });\r\n//    }\r\n\r\n//    function wait(sec) {\r\n//       return new Promise(resolve => setTimeout(resolve, sec * 1_000));\r\n//    }\r\n\r\n//    let currImg;\r\n//    createImage('Images/img-1.jpg')\r\n//       .then(img => {\r\n//          currImg = img;\r\n//          return wait(1);\r\n//       })\r\n//       .then(() => {\r\n//          currImg.style.display = 'none';\r\n//          return createImage('Images/img-2.jpg');\r\n//       })\r\n//       .then(img => {\r\n//          currImg = img;\r\n//          return wait(2);\r\n//       })\r\n//       .then(() => {\r\n//          currImg.style.display = 'none';\r\n//          return createImage('Images/img-3.jpg');\r\n//       })\r\n//       .then(img => {\r\n//          currImg = img;\r\n//          return wait(3);\r\n//       })\r\n//       .then(() => (currImg.style.display = 'none'))\r\n//       .catch(err => console.log(err.message));\r\n// };\r\n270;\r\n// // Async and Await\r\n\r\n// // Simple learning\r\n// () => {\r\n//    async function getCountry(country) {\r\n//       const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);\r\n//       const data = await res.json();\r\n//       console.log(data); // 2\r\n//       console.log('seconde'); // 3\r\n//    }\r\n//    getCountry('usa');\r\n//    console.log('first'); // 1\r\n// };\r\n\r\n// // More advanced learning\r\n// () => {\r\n//    // get country\r\n//    async function getCountry(country) {\r\n//       const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);\r\n//       return await res.json();\r\n//    }\r\n\r\n//    // find my location\r\n//    function getLoc() {\r\n//       return new Promise((resolve, reject) =>\r\n//          navigator.geolocation.getCurrentPosition(resolve, () => reject('a'))\r\n//       );\r\n//    }\r\n\r\n//    // Show my location and country\r\n//    async function showResult() {\r\n//       const { coords } = await getLoc();\r\n//       const { latitude: lat, longitude: lng } = coords;\r\n//       console.log(lat, lng); // 1\r\n\r\n//       const [{ name }] = await getCountry('usa');\r\n//       console.log(name.common); // 2\r\n//    }\r\n\r\n//    showResult();\r\n// };\r\n271;\r\n// // try and catch\r\n// // دسترسی دارد error به تمامی\r\n\r\n// // simple learning\r\n// () => {\r\n//    try {\r\n//       let y = 0;\r\n//       const x = 5;\r\n//       x = 1;\r\n//    } catch (err) {\r\n//       console.log(err.message);\r\n//    }\r\n// };\r\n\r\n// // More advanced learning\r\n// () => {\r\n//    // get country\r\n//    async function getCountry(country) {\r\n//       const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);\r\n//       if (!res.ok)\r\n//          throw new Error(`Could not found your country. (${res.status})`);\r\n//       return await res.json();\r\n//    }\r\n//    // find my location\r\n//    const getLoc = () =>\r\n//       new Promise((resolve, reject) =>\r\n//          navigator.geolocation.getCurrentPosition(\r\n//             resolve,\r\n//             reject.bind(new Error(`Could not find your location.`))\r\n//          )\r\n//       );\r\n//    // Show my location and country\r\n//    async function showResult() {\r\n//       try {\r\n//          const { coords } = await getLoc();\r\n//          const { latitude: lat, longitude: lng } = coords;\r\n//          console.log(lat, lng); // 1\r\n\r\n//          const [{ name }] = await getCountry('usa');\r\n//          console.log(name.common); // 2\r\n//       } catch (err) {\r\n//          console.log(err.message);\r\n//       }\r\n//    }\r\n//    // call func\r\n//    showResult();\r\n// };\r\n272;\r\n// // Returning value from async function\r\n// // است async اگر از روش مدرن استفاده می‌کنید حتما باید از تابعی استفاده کنید که\r\n\r\n// // Old way\r\n// () => {\r\n//    // get country\r\n//    async function getCountry(country) {\r\n//       const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);\r\n//       if (!res.ok)\r\n//          throw new Error(`Could not found your country. (${res.status})`);\r\n//       return await res.json();\r\n//    }\r\n//    // find my location\r\n//    const getLoc = () =>\r\n//       new Promise((resolve, reject) =>\r\n//          navigator.geolocation.getCurrentPosition(\r\n//             resolve,\r\n//             reject.bind(new Error(`Could not find your location.`))\r\n//          )\r\n//       );\r\n//    // Show my location and country\r\n//    async function showResult() {\r\n//       try {\r\n//          const { coords } = await getLoc();\r\n//          const { latitude: lat, longitude: lng } = coords;\r\n//          const [{ name }] = await getCountry('usa');\r\n//          return `my loc in: [${lat}, ${lng}] and my country is: ${name.common}`;\r\n//       } catch (err) {\r\n//          throw err.message;\r\n//       }\r\n//    }\r\n//    // call func\r\n//    // Old way!!!!!!!\r\n//    // اگر میخواهید ترتیب اجرای کد‌ها حفظ شود همانند زیر عمل کنید\r\n//    console.log('1');\r\n//    showResult()\r\n//       .then(res => console.log(`2 ${res}`))\r\n//       .catch(err => console.log(`2 ${err}`))\r\n//       .finally(() => {\r\n//          console.log('3');\r\n//       });\r\n// };\r\n\r\n// // new way\r\n// () => {\r\n//    // get country\r\n//    async function getCountry(country) {\r\n//       const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);\r\n//       if (!res.ok)\r\n//          throw new Error(`Could not found your country. (${res.status})`);\r\n//       return await res.json();\r\n//    }\r\n//    // find my location\r\n//    const getLoc = () =>\r\n//       new Promise((resolve, reject) =>\r\n//          navigator.geolocation.getCurrentPosition(\r\n//             resolve,\r\n//             reject.bind(new Error(`Could not find your location.`))\r\n//          )\r\n//       );\r\n//    // Show my location and country\r\n//    async function showResult() {\r\n//       try {\r\n//          const { coords } = await getLoc();\r\n//          const { latitude: lat, longitude: lng } = coords;\r\n//          const [{ name }] = await getCountry('usa');\r\n//          return `my loc in: [${lat}, ${lng}] and my country is: ${name.common}`;\r\n//       } catch (err) {\r\n//          throw err.message;\r\n//       }\r\n//    }\r\n//    // call func\r\n//    // new and best way!!!!!!!\r\n//    // اگر میخواهید ترتیب اجرای کد‌ها حفظ شود همانند زیر عمل کنید\r\n//    (async () => {\r\n//       try {\r\n//          console.log('1');\r\n//          console.log(`2 ${await showResult()}`);\r\n//          console.log('3');\r\n//       } catch (err) {\r\n//          console.log(err);\r\n//       }\r\n//    })();\r\n// };\r\n273;\r\n// // Promise.All\r\n// // نباشد میتوان از این روش استفاده کرد async هر‌گاه که لازم به اجرای\r\n\r\n// // getting 3 countries\r\n// () => {\r\n//    const URL = country => `https://restcountries.com/v3.1/name/${country}`;\r\n//    async function getJson(route) {\r\n//       const res = await fetch(URL(route));\r\n//       if (!res.ok) throw new Error('the country name is wrong!!!');\r\n//       return await res.json();\r\n//    }\r\n//    async function get3Countries() {\r\n//       try {\r\n//          const res = await Promise.all([\r\n//             getJson('usa'),\r\n//             getJson('australia'),\r\n//             getJson('germany'),\r\n//          ]);\r\n//          return res.map(country => country[0].name.common);\r\n//       } catch (err) {\r\n//          throw err.message;\r\n//       }\r\n//    }\r\n//    (async () => {\r\n//       try {\r\n//          console.log(await get3Countries());\r\n//       } catch (err) {\r\n//          console.log(err);\r\n//       }\r\n//    })();\r\n// };\r\n274;\r\n// // Promise.race\r\n// // رفتار می‌کنیم Promise.all همانند Promise در این نوع از\r\n// // بسته میشود Promise اما تفاوت های آنها در این است که هر واکشی ای که زودتر انجام شود همان مقدار برگردانده میشود و\r\n// // response و فرقی ندارد که در این مورد با خطا مواجه شود یا\r\n// () => {\r\n//    // Create URL and Response\r\n//    function getJson(country) {\r\n//       // Create URL\r\n//       const URL = `https://restcountries.com/v3.1/name/${country}`;\r\n//       // Create Response\r\n//       return async () => {\r\n//          const res = await fetch(URL);\r\n//          if (!res.ok) throw new Error('the country name is wrong!!!');\r\n//          return await res.json();\r\n//       };\r\n//    }\r\n//    // Promise Race Function\r\n//    async function promiseRace() {\r\n//       try {\r\n//          const res = await Promise.race([\r\n//             getJson('usa')(),\r\n//             getJson('italy')(),\r\n//             getJson('germany')(),\r\n//          ]);\r\n//          return res;\r\n//       } catch (err) {\r\n//          return err.message;\r\n//       }\r\n//    }\r\n//    // Call Promise Race\r\n//    (async function () {\r\n//       try {\r\n//          console.log(await promiseRace());\r\n//       } catch (err) {\r\n//          console.log(err);\r\n//       }\r\n//    })();\r\n// };\r\n\r\n// // setTimeout ایجاد خطا به وسیله\r\n// // به عنوان مثال اگر کاربران ما اینترنت ضعیفی داشته باشند\r\n// // های غیر ضروری را رد کنیم Promise با این کار می‌توانیم\r\n// () => {\r\n//    // Create URL and Response\r\n//    function getJson(country) {\r\n//       // Create URL\r\n//       const URL = `https://restcountries.com/v3.1/name/${country}`;\r\n//       // Create Response\r\n//       return async () => {\r\n//          const res = await fetch(URL);\r\n//          if (!res.ok) throw new Error('the country name is wrong!!!');\r\n//          return await res.json();\r\n//       };\r\n//    }\r\n//    // Create Error with setTimeout\r\n//    async function fakeError(sec) {\r\n//       return await new Promise((_, reject) => {\r\n//          setTimeout(() => reject(new Error('Fake Error!!!')), sec * 1000);\r\n//       });\r\n//    }\r\n//    // Promise Race Function\r\n//    async function promiseRace() {\r\n//       try {\r\n//          const res = await Promise.race([getJson('usa')(), fakeError(1)]);\r\n//          return res;\r\n//       } catch (err) {\r\n//          return err.message;\r\n//       }\r\n//    }\r\n//    // Call Promise Race\r\n//    (async function () {\r\n//       try {\r\n//          console.log(await promiseRace());\r\n//       } catch (err) {\r\n//          console.log(err);\r\n//       }\r\n//    })();\r\n// };\r\n\r\n// // Promise.allSettled\r\n// // رفتار خواهیم کرد Promise.all همانند Promise در این\r\n// // های دیگر متوقف نمی‌شوند Promise این است که در صورت وجود خطا Promise.all اما تفاوت آن با\r\n// () => {\r\n//    // Create URL and Response\r\n//    function getJson(country) {\r\n//       // Create URL\r\n//       const URL = `https://restcountries.com/v3.1/name/${country}`;\r\n//       // Create Response\r\n//       return async () => {\r\n//          const res = await fetch(URL);\r\n//          if (!res.ok) throw new Error('the country name is wrong!!!');\r\n//          return await res.json();\r\n//       };\r\n//    }\r\n//    // Promise allSettled Function\r\n//    async function promiseAllSattled() {\r\n//       try {\r\n//          const res = await Promise.allSettled([\r\n//             getJson('usa')(),\r\n//             getJson('italyjkag')(),\r\n//             getJson('germanyuiibkb')(),\r\n//          ]);\r\n//          return res;\r\n//       } catch (err) {\r\n//          return err.message;\r\n//       }\r\n//    }\r\n//    // Call Promise allSattled\r\n//    (async function () {\r\n//       try {\r\n//          console.log(await promiseAllSattled()); // fulfilled و یک عدد reject دو عدد\r\n//       } catch (err) {\r\n//          console.log(err);\r\n//       }\r\n//    })();\r\n// };\r\n\r\n// // Promise.any\r\n// // دو حالت ممکن است پیش بیاید Promise در این\r\n// // موفق برگردانده میشود Promise مورد اول اینکه یا اولین\r\n// // به نمایش گذاشته میشود All promises were rejected ها مردود باشند پیغام Promise یا اگر تمام\r\n// () => {\r\n//    // Create URL and Response\r\n//    function getJson(country) {\r\n//       // Create URL\r\n//       const URL = `https://restcountries.com/v3.1/name/${country}`;\r\n//       // Create Response\r\n//       return async () => {\r\n//          const res = await fetch(URL);\r\n//          if (!res.ok) throw new Error('the country name is wrong!!!');\r\n//          return await res.json();\r\n//       };\r\n//    }\r\n//    // Promise any Function\r\n//    async function promiseAny() {\r\n//       try {\r\n//          const promises = [\r\n//             getJson('italyas')(),\r\n//             getJson('usaas')(),\r\n//             getJson('germanyas')(),\r\n//          ];\r\n//          const res = await Promise.any(promises);\r\n//          return res;\r\n//       } catch (err) {\r\n//          return err.message;\r\n//       }\r\n//    }\r\n//    // Call Promise any\r\n//    (async function () {\r\n//       try {\r\n//          console.log(await promiseAny()); // All promises were rejected\r\n//       } catch (err) {\r\n//          console.log(err);\r\n//       }\r\n//    })();\r\n// };\r\n275;\r\n// // Codeing Challenge\r\n// // Load image\r\n\r\n// // Refactoring the Loading img of codeing challenge\r\n// () => {\r\n//    // Create images\r\n//    async function createImage(imgSrc) {\r\n//       return await new Promise((resolve, reject) => {\r\n//          const img = document.createElement('img');\r\n//          img.src = imgSrc;\r\n//          // successfull load\r\n//          img.addEventListener('load', function () {\r\n//             document.body.append(img);\r\n//             resolve(this);\r\n//          });\r\n//          // unsuccessfull load\r\n//          img.addEventListener('error', () =>\r\n//             reject(new Error(`Image not found.`))\r\n//          );\r\n//       });\r\n//    }\r\n//    // wait function\r\n//    const wait = async sec =>\r\n//       await new Promise(resolve => setTimeout(resolve, sec * 1_000));\r\n//    // Loading images function\r\n//    async function loadingImages() {\r\n//       try {\r\n//          let currImg;\r\n//          // Image 1\r\n//          currImg = await createImage('Images/img-1.jpg');\r\n//          await wait(2);\r\n//          currImg.style.display = 'none';\r\n//          // Image 2\r\n//          currImg = await createImage('Images/img-2.jpg');\r\n//          await wait(2);\r\n//          currImg.style.display = 'none';\r\n//          // Image 3\r\n//          currImg = await createImage('Images/img-3.jpg');\r\n//          await wait(2);\r\n//          currImg.style.display = 'none';\r\n//       } catch (err) {\r\n//          console.log(err.message);\r\n//       }\r\n//    }\r\n//    // Call Loading Images\r\n//    (async () => await loadingImages())();\r\n// };\r\n\r\n// // Load All image\r\n// // استفاده کنیم Promise.all باید از promise برای خارج کردن نتیجه از حالت\r\n// () => {\r\n//    // Create images\r\n//    async function createImage(imgSrc) {\r\n//       return await new Promise((resolve, reject) => {\r\n//          const img = document.createElement('img');\r\n//          img.src = imgSrc;\r\n//          // successfull load\r\n//          img.addEventListener('load', function () {\r\n//             document.body.append(img);\r\n//             resolve(this);\r\n//          });\r\n//          // unsuccessfull load\r\n//          img.addEventListener('error', () =>\r\n//             reject(new Error(`Image not found.`))\r\n//          );\r\n//       });\r\n//    }\r\n//    // load All Img function\r\n//    async function loadAllImg() {\r\n//       try {\r\n//          // prettier-ignore\r\n//          const imgArr = ['Images/img-1.jpg', 'Images/img-2.jpg', 'Images/img-3.jpg'];\r\n//          const allPromise = imgArr.map(\r\n//             async imgSrc => await createImage(imgSrc)\r\n//          );\r\n//          const allImg = await Promise.all(allPromise);\r\n//          allImg.forEach(img => (img.style.width = '500px'));\r\n//       } catch (err) {\r\n//          console.log(err.message);\r\n//       }\r\n//    }\r\n//    loadAllImg();\r\n// };\r\n280;\r\n// // Import and  Export\r\n// // اگر پروژه ای بدون فریم ورک دارید برای استفاده از این قابلیت باید\r\n// // را انتخاب کنیم type=\"module\" خود HTML در فایل\r\n\r\n// // simple example for the import of module\r\n// import { cardCl } from './cardC.js';\r\n// // simple example for the export of module\r\n// export function show() {\r\n//    console.log('show');\r\n// }\r\n\r\n// // بگذاریم باید اینگونه بنویسیم import , export اگر میخواهیم نام دلخواه برای موارد\r\n// // for import\r\n// import { cardCl as myCard } from './cardC.js';\r\n// // for Export\r\n// function show() {\r\n//    console.log('show');\r\n// }\r\n// export { show as showEl };\r\n// // کردن import و در هنگام\r\n// import { showEl } from './cardC.js';\r\n\r\n// // شده export کردن تمامی موارد import استفاده از * برای\r\n// import * as allFunctions from './cardC.js';\r\n// // how to use?\r\n// allFunctions.addToCard(1, 'clothes');\r\n\r\n// // استفاده کرد export default کنیم میتوان از export هرگاه خواستیم تنها یک مقدار را\r\n// export default show;\r\n// // how to import?\r\n// // بدون {} باید بنویسیم\r\n// import show from './cardC.js';\r\n\r\n// // export , export default استفاده ترکیبی از\r\n// import show, { showEl } from './cardC.js';\r\n\r\n// // ها مقدار های شیء و آرایه بروزرسانی میشوند module در تمامی\r\n281;\r\n// // به تنهایی در کد await استفاده از\r\n// // از کد باشد level نکته مهم این است که باید در بالاترین\r\n// // استفاده میشود asyn در غیر اینصورت باید درون تابعی باشد که در آن از\r\n// // باشد type=\"module\" برای اینکار حتما باید فایل شما دارای\r\n\r\n// // مثال اول\r\n// console.log('start fetching...');\r\n// const res = await fetch('https://jsonplaceholder.typicode.com/users');\r\n// const users = await res.json();\r\n// console.log(users);\r\n// console.log('end fetching...');\r\n\r\n// // مثال دوم\r\n// console.log('---- seconde example ----');\r\n// async function getLastUsers() {\r\n//    const res = await fetch('https://jsonplaceholder.typicode.com/users');\r\n//    const users = await res.json();\r\n//    return { id: users.at(-1).name, name: users.at(-1).name };\r\n// }\r\n// console.log(await getLastUsers());\r\n// console.log('end fetching...');\r\n\r\n// // در بالاترین لول از کد میتواند باعث مسدود شدن ماژول های دیگر نیز شود await و در آخر استفاده از\r\n282;\r\n// // راهی برای فرار از متغیر های گلوبال\r\n// // کنیم export و سپس یاد خواهیم گرفت که چگونه آنها را\r\n// const cardMethods = (() => {\r\n//    const cardQ = 12;\r\n//    function showCard() {\r\n//       console.log('el');\r\n//    }\r\n//    return { cardQ, showCard };\r\n// })();\r\n// cardMethods.showCard(); // el\r\n// console.log(cardMethods.cardQ); // 12\r\n// export { cardMethods }; // exported\r\n285;\r\n// // how to use of third party library (lodash)\r\n// // در این صورت میتوان به صورت عمیق از یک شیء کپی گرفت\r\n// // بر خلاف یک روش قدیمی که کپی کم عمق میگرفت از شیء\r\n// import cloneDeep from './node_modules/lodash-es/cloneDeep.js';\r\n// () => {\r\n//    const arr = { id: 1, user: 1, owners: ['ali', 'bezi'] };\r\n//    // old way\r\n//    // که کپی کم عمق میگیرد\r\n//    // const newArr = Object.assign({}, arr)\r\n//    const copyArr = cloneDeep(arr);\r\n//    arr.company = 'Digikala';\r\n//    console.log(copyArr);\r\n//    console.log(arr);\r\n// };\r\n286;\r\n// // how to install the parcel\r\n// // enter the command on the following\r\n// // ==> npm i parcel --save-dev\r\n// // اگر دستور ما به خطا خورد به شکل زیر رفع اشکال خواهیم کرد\r\n// // ==> sudo npm i parcel\r\n// // اگر باز هم حل نشد مراحل زیر را امتحان کنید\r\n// // ==> npm i parcel@1.12.4\r\n// // باید یک فایل ورودی به آن بدهیم\r\n// // ==> npx parcel index.html\r\n// // اگر هم خواستید پاک کنید دستور زیر را اجرا کنید\r\n// // ==> npm uninstall parcel\r\n// // اگر درون پروژه خود ماژول های متفاوت داشتید ممکن است به خطا بخورید\r\n// // از تگ اسکریپت است type=\"module\" تنها راهکار آن پاک کردن\r\n// // با استفاده از قطعه کد زیر دیگر لازم نیست برای دیدن تغییرات حتما صفحه بارگذاری مجدد شود\r\n// import cloneDeep from 'lodash';\r\n// (() => {\r\n//    const arr = { id: 1, user: 1, owners: ['ali', 'bezi'] };\r\n//    const copyArr = cloneDeep(arr);\r\n//    arr.company = 'Digikala';\r\n//    console.log(copyArr);\r\n//    console.log(arr);\r\n// })();\r\nif (module.hot) module.hot.accept();\r\n// // را در مسیر فایل نوشت lodash و نکته دوم اینکه به راحتی میتوان فقط\r\n// // parcel نحوه نوشتن دو تا از مهم ترین اسکریپت ها برای\r\n// // \"start\": \"parcel index.html\"\r\n// // \"build\": \"parcel build index.html\"\r\n287;\r\n// how to use of BABEL\r\n// ES برای برگرداندن سینتکس به ورژن های قدیمی تر\r\n// دستور زیر را به که کار میبریم arrow function برای برگرداندن چیز هایی مانند سینکس متد های آرایه یا\r\nimport 'core-js/stable';\r\n// از دستور زیر استفاده میکنیم async , await برای برگرداندن کلمات کلیدی همچون\r\nimport 'regenerator-runtime/runtime';\r\n291;\r\n// // فریز کردن اشیاء و آرایه ها به منظور تغییر ناپذیری آنها\r\n// // اما این روش کم عمق است و لایه های درونی را پشتیبانی نمیکند\r\n// const arr = Object.freeze([1, 2, { user: 'ali' }]);\r\n// // arr.push(2) // Error!!!\r\n// const obj = Object.freeze({ user: 'ali', owners: [1, 23, 4] });\r\n// // obj.jay = 'jay' // Error!!!\r\n\r\n// // best way\r\n// // ما در این روش شیء اصلی خود را فریز کرده اما\r\n// // با استفاده از یک ترفند از آن کپی میگیریم و سپس موارد دلخواه را تغییر میدهیم\r\n// // است useReducer در state این روش بسیار روش مشابه به تغییر\r\n\r\n// // مثال اول\r\n// () => {\r\n//    // person info object\r\n//    const personInfo = Object.freeze({\r\n//       name: 'Alireza',\r\n//       family: 'Jodat',\r\n//       age: 22,\r\n//       average: 19.25,\r\n//    });\r\n//    // manipulation the object\r\n//    function manipulationObject(entryObject) {\r\n//       return { ...entryObject, average: 18 };\r\n//    }\r\n//    const newPersonInfo = manipulationObject(personInfo);\r\n//    console.log(newPersonInfo); // {name: 'Alireza', family: 'Jodat', age: 22, average: 18}\r\n// };\r\n\r\n// // مثال دوم\r\n// () => {\r\n//    // movments Array\r\n//    const movments = Object.freeze([\r\n//       { value: 1000 },\r\n//       { value: 1250 },\r\n//       { value: 2000 },\r\n//       { value: 10 },\r\n//    ]);\r\n//    // manipulation the Array\r\n//    const manipulationArray = entryArray =>\r\n//       entryArray.map(movmentObj => {\r\n//          const checkMov = movmentObj.value > 1000;\r\n//          const newMov = checkMov\r\n//             ? { ...movmentObj, value: 'limited' }\r\n//             : { ...movmentObj };\r\n//          return { ...newMov };\r\n//       });\r\n\r\n//    console.log(manipulationArray(movments));\r\n//    console.log(movments);\r\n// };\r\n","'use strict';\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/web.clear-immediate');\nrequire('../modules/web.set-immediate');\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar clearImmediate = require('../internals/task').clear;\n\n// `clearImmediate` method\n// http://w3c.github.io/setImmediate/#si-clearImmediate\n$({ global: true, bind: true, enumerable: true, forced: global.clearImmediate !== clearImmediate }, {\n  clearImmediate: clearImmediate\n});\n","'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = global[TARGET] && global[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar store = require('../internals/shared-store');\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar globalThis = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.36.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\nmodule.exports = false;\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\).*$/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar bind = require('../internals/function-bind-context');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar fails = require('../internals/fails');\nvar html = require('../internals/html');\nvar arraySlice = require('../internals/array-slice');\nvar createElement = require('../internals/document-create-element');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar Dispatch = global.Dispatch;\nvar Function = global.Function;\nvar MessageChannel = global.MessageChannel;\nvar String = global.String;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar $location, defer, channel, port;\n\nfails(function () {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  $location = global.location;\n});\n\nvar run = function (id) {\n  if (hasOwn(queue, id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar eventListener = function (event) {\n  run(event.data);\n};\n\nvar globalPostMessageDefer = function (id) {\n  // old engines have not location.origin\n  global.postMessage(String(id), $location.protocol + '//' + $location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var args = arraySlice(arguments, 1);\n    queue[++counter] = function () {\n      apply(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = eventListener;\n    defer = bind(port.postMessage, port);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global.addEventListener &&\n    isCallable(global.postMessage) &&\n    !global.importScripts &&\n    $location && $location.protocol !== 'file:' &&\n    !fails(globalPostMessageDefer)\n  ) {\n    defer = globalPostMessageDefer;\n    global.addEventListener('message', eventListener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar userAgent = require('../internals/engine-user-agent');\n\n// eslint-disable-next-line redos/no-vulnerable -- safe\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);\n","'use strict';\nvar global = require('../internals/global');\nvar classof = require('../internals/classof-raw');\n\nmodule.exports = classof(global.process) === 'process';\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar setTask = require('../internals/task').set;\nvar schedulersFix = require('../internals/schedulers-fix');\n\n// https://github.com/oven-sh/bun/issues/1633\nvar setImmediate = global.setImmediate ? schedulersFix(setTask, false) : setTask;\n\n// `setImmediate` method\n// http://w3c.github.io/setImmediate/#si-setImmediate\n$({ global: true, bind: true, enumerable: true, forced: global.setImmediate !== setImmediate }, {\n  setImmediate: setImmediate\n});\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar isCallable = require('../internals/is-callable');\nvar ENGINE_IS_BUN = require('../internals/engine-is-bun');\nvar USER_AGENT = require('../internals/engine-user-agent');\nvar arraySlice = require('../internals/array-slice');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar Function = global.Function;\n// dirty IE9- and Bun 0.3.0- checks\nvar WRAP = /MSIE .\\./.test(USER_AGENT) || ENGINE_IS_BUN && (function () {\n  var version = global.Bun.version.split('.');\n  return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');\n})();\n\n// IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n// https://github.com/oven-sh/bun/issues/1633\nmodule.exports = function (scheduler, hasTimeArg) {\n  var firstParamIndex = hasTimeArg ? 2 : 1;\n  return WRAP ? function (handler, timeout /* , ...arguments */) {\n    var boundArgs = validateArgumentsLength(arguments.length, 1) > firstParamIndex;\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var params = boundArgs ? arraySlice(arguments, firstParamIndex) : [];\n    var callback = boundArgs ? function () {\n      apply(fn, this, params);\n    } : fn;\n    return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);\n  } : scheduler;\n};\n","'use strict';\n/* global Bun -- Bun case */\nmodule.exports = typeof Bun == 'function' && Bun && typeof Bun.version == 'string';\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per GeneratorResume behavior specified since ES2015:\n        // ES2015 spec, step 3: https://262.ecma-international.org/6.0/#sec-generatorresume\n        // Latest spec, step 2: https://tc39.es/ecma262/#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next method, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable != null) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    throw new TypeError(typeof iterable + \" is not iterable\");\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":[],"version":3,"file":"index.b9a42d79.js.map","sourceRoot":"/__parcel_source_root/"}